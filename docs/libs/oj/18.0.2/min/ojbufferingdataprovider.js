/**
 * @license
 * Copyright (c) 2014, 2025, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","ojs/ojdataprovider","ojs/ojeventtarget","ojs/ojmap","ojs/ojbufferingdataproviderevents","ojs/ojset","ojs/ojcomponentcore"],function(t,e,a,s,i,r,d){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s,r=r&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r;
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
class n{constructor(){this.unsubmittedItems=new s,this.submittingItems=new s,this.submittedAddItems=new s,this.addItemOrder=[],this.mapOpTransform=new s,this.mapEditItemStatus=new s}addItem(t){const e=t.metadata.key,a=this.unsubmittedItems.get(e),s=this.submittingItems.get(e);if(a&&("add"===a.operation||"update"===a.operation)||s&&("add"===s.operation||"update"===s.operation))throw new Error("Cannot add item with same key as an item being added or updated");if(a&&"remove"===a.operation){this.unsubmittedItems.delete(e);const a={operation:"update",item:t};return this.unsubmittedItems.set(e,a),this.mapOpTransform.set(e,a),void this.addItemOrder.unshift(e)}this.unsubmittedItems.set(e,{operation:"add",item:t}),this.addItemOrder.unshift(e)}removeItem(t){const e=t.metadata.key,a=this.unsubmittedItems.get(e),s=this.submittingItems.get(e);if(a&&"remove"===a.operation||s&&"remove"===s.operation)throw new Error("Cannot remove item with same key as an item being removed");return a&&"add"===a.operation?(this.unsubmittedItems.delete(e),void this._removeFromAddItemOrder(e)):a&&"update"===a.operation?(this.unsubmittedItems.set(e,{operation:"remove",item:t}),this.mapOpTransform.delete(e),this._removeFromAddItemOrder(e),void this.submittedAddItems.delete(e)):(this._removeFromAddItemOrder(e),this.submittedAddItems.delete(e),void this.unsubmittedItems.set(e,{operation:"remove",item:t}))}updateItem(t){const e=this.unsubmittedItems.get(t.metadata.key),a=this.submittingItems.get(t.metadata.key);if(e&&"remove"===e.operation||a&&"remove"===a.operation)throw new Error("Cannot update item with same key as an item being removed");!e||"add"!==e.operation&&"update"!==e.operation?this.unsubmittedItems.set(t.metadata.key,{operation:"update",item:t}):this.unsubmittedItems.set(t.metadata.key,{operation:e.operation,item:t})}setItemMutated(t){const e=t.item.metadata.key,a=this.submittingItems.get(e);if(a){"submitted"===this.mapEditItemStatus.get(e)?(this.submittingItems.delete(e),this._isAddOrMoveAdd(a)&&this.submittedAddItems.set(e,a)):(this.mapEditItemStatus.set(e,"mutated"),this.submittingItems.set(e,a))}}setItemStatus(t,e,a){const s=t.item.metadata.key;if("submitting"===e)this.unsubmittedItems.delete(s),this.submittingItems.set(s,t);else if("submitted"===e){if(t){"mutated"===this.mapEditItemStatus.get(s)?(this.submittingItems.delete(s),this._isAddOrMoveAdd(t)&&this.submittedAddItems.set(s,t)):this.mapEditItemStatus.set(s,"submitted")}}else if("unsubmitted"===e){let e;this.submittingItems.delete(s),e=a?{operation:t.operation,item:{data:t.item.data,metadata:{key:t.item.metadata.key,message:a}}}:t,this.unsubmittedItems.set(s,e)}}getUnsubmittedItems(){return this.unsubmittedItems}getSubmittingItems(){return this.submittingItems}getSubmittedAddItems(){return this.submittedAddItems}isEmpty(t){return 0===this.unsubmittedItems.size&&0===this.submittingItems.size&&(!t||0===this.submittedAddItems.size)}getItem(t,e){let a=this.unsubmittedItems.get(t);return a||(a=this.submittingItems.get(t)),e&&!a&&(a=this.submittedAddItems.get(t)),a}isUpdateTransformed(t){return!!this.mapOpTransform.get(t)}getEditItemStatus(t){return this.mapEditItemStatus.get(t)}isSubmittingOrSubmitted(t){return this.submittingItems.has(t)||this.submittedAddItems.has(t)}resetAllUnsubmittedItems(){this._clearAddItemOrder(),this.unsubmittedItems.clear(),this.submittingItems.clear(),this.mapOpTransform.clear()}_clearAddItemOrder(){this.unsubmittedItems.forEach((t,e)=>{this._isAddOrMoveAdd(t)&&this._removeFromAddItemOrder(e)}),this.submittingItems.forEach((t,e)=>{this._isAddOrMoveAdd(t)&&this._removeFromAddItemOrder(e)})}_removeFromAddItemOrder(e){let a=this.addItemOrder.findIndex(a=>t.KeyUtils.equals(a,e));-1!==a&&this.addItemOrder.splice(a,1)}_isAddOrMoveAdd(t){return"add"===t.operation||this._isMoveAdd(t)}_isMoveAdd(t){return"update"===t.operation&&this.isUpdateTransformed(t.item.metadata.key)}getAddItemOrder(){return this.addItemOrder}}class o{constructor(t,a){var i;this.dataProvider=t,this.options=a,this._generateKey=t=>this.customKeyGenerator?this.customKeyGenerator(t):crypto.randomUUID?crypto.randomUUID():([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,t=>(t^crypto.getRandomValues(new Uint8Array(1))[0]&15>>t/4).toString(16)),this.AsyncIterable=(i=class{constructor(t,e){this._parent=t,this._asyncIterator=e,this[Symbol.asyncIterator]=function(){return this._asyncIterator}}},Symbol.asyncIterator,i),this.AsyncIterator=class{constructor(t,e,a){this._parent=t,this._baseIterator=e,this._params=a,this.mergedAddKeySet=new r,this.mergedItemArray=[],this.nextOffset=0,null==this._params&&(this._params={})}_fetchNext(){const t=this._params?.signal;return e.wrapWithAbortHandling(t,t=>t(this._baseIterator.next().then(async t=>{t.value.fetchParameters&&t.value.fetchParameters.sortCriteria&&(this._parent.lastSortCriteria=t.value.fetchParameters.sortCriteria);const e=t.value.data.map((e,a)=>({data:t.value.data[a],metadata:t.value.metadata[a]}));this._parent.totalFilteredRowCount=t.value.totalFilteredRowCount,await this._parent._mergeEdits(e,this.mergedItemArray,this._params.filterCriterion,this._parent.lastSortCriteria,this.mergedAddKeySet,t.done);let a=this.mergedItemArray.length-this.nextOffset;for(let t=this.nextOffset;t<this.mergedItemArray.length;t++){const e=this.mergedItemArray[t];this._parent._isItemRemoved(e.metadata.key)&&--a}const s=this._params||{};if((s.size&&a<s.size||null==s.size&&0===a)&&!t.done)return this._fetchNext();const i=[],r=[];let d;for(d=this.nextOffset;d<this.mergedItemArray.length;d++){const t=this.mergedItemArray[d];if(!this._parent._isItemRemoved(t.metadata.key)&&(this.nextOffset=d+1,i.push(t.data),r.push(t.metadata),s.size&&i.length===s.size))break}return{done:t.done&&0===i.length,value:{fetchParameters:this._params,data:i,metadata:r,totalFilteredRowCount:"enabled"===this._params?.includeFilteredRowCount?this._parent.totalFilteredRowCount:null}}})),!1)}next(){return this._fetchNext()}},this._addEventListeners(t),this.editBuffer=new n,this.lastSortCriteria=null,this.lastIterator=null,this.customKeyGenerator=a?.keyGenerator,this.generatedKeyMap=new s,this.totalFilteredRowCount=0,this.dataBeforeUpdated=new Map}_fetchByKeysFromBuffer(t){const e=new s,a=new Set;return t.keys.forEach(t=>{const s=this.editBuffer.getItem(t);if(s)switch(s.operation){case"add":case"update":e.set(t,s.item)}else a.add(t)}),{results:e,unresolvedKeys:a}}_compareItem(t,a,s){for(const i of s){let s=e.SortUtils.getNaturalSortComparator();const r="descending"===i.direction?-1:1,d=s(this._getVal(t,i.attribute),this._getVal(a,i.attribute))*r;if(0!==d)return d}return 0}_getVal(t,e){if(null==t)return t;if("string"==typeof e){const a=e.indexOf(".");if(a>0){const s=e.substring(0,a),i=e.substring(a+1),r=t[s];if(r)return this._getVal(r,i)}}return"function"==typeof t[e]?t[e]():t[e]}_insertAddEdits(t,e,a,s,i,r){t.forEach(async(t,d)=>{if("add"===t.operation)e&&!e.filter(t.item.data)||this.totalFilteredRowCount++;else{let a=null;if(e)if(this.dataBeforeUpdated.has(d))a=this.dataBeforeUpdated.get(d);else{let t=new Set;t.add(d),a=(await this.dataProvider.fetchByKeys({keys:t})).results.get(d).data,this.dataBeforeUpdated.set(d,a)}"remove"===t.operation?e&&!e.filter(a)||this.totalFilteredRowCount--:"update"===t.operation&&e&&(e.filter(a)&&!e.filter(t.item.data)?this.totalFilteredRowCount--:!e.filter(a)&&e.filter(t.item.data)&&this.totalFilteredRowCount++)}if(("add"===t.operation||"update"===t.operation)&&!i.has(d)&&(!e||e.filter(t.item.data)))if(a&&a.length){let e=!1;for(let r=0;r<s.length;r++)if("update"!==t.operation||this.editBuffer.isUpdateTransformed(d)||d!==s[r].metadata.key||s.splice(r,1),this._compareItem(t.item.data,s[r].data,a)<0){s.splice(r,0,t.item),i.add(d),e=!0;break}!e&&r&&(s.push(t.item),i.add(d))}else if("add"===t.operation||"update"===t.operation&&this.editBuffer.isUpdateTransformed(d)){let e=!0;s.forEach(t=>{d===t.metadata.key||i.has(d)||this._isItemRemoved(t.metadata.key)||(e=!1)}),e?s.push(t.item):s.splice(0,0,t.item),i.add(d)}})}_mergeAddEdits(t,e,a,s,i){this._insertAddEdits(this.editBuffer.getUnsubmittedItems(),t,e,a,s,i),this._insertAddEdits(this.editBuffer.getSubmittingItems(),t,e,a,s,i)}_mergeEdits(t,a,s,i,r,d){let n;s&&(n=s.filter?s:e.FilterFactory.getFilter({filterDef:s,filterOptions:this.options}));const o=0!==a.length;for(const e of t){const t=this.editBuffer.getItem(e.metadata.key,o);t?"remove"===t.operation?a.push(e):"update"!==t.operation||this.editBuffer.isUpdateTransformed(t.item.metadata.key)||n&&!n.filter(t.item.data)||i&&0!==i.length||a.push(t.item):a.push(e)}this._mergeAddEdits(n,i,a,r,d)}async _fetchFromOffset(t){const a=t?.signal;return e.wrapWithAbortHandling(a,async e=>{const a=t.offset,s=null==t.size||-1===t.size,i=t.size,r=[],{submitting:d,submitted:n,unsubmitted:o}=this._getEditBufferCounts(),m=o.numAdds,h=m+d.numAdds+n.numAdds;let u,l=!1,f=0;if(this.editBuffer.isEmpty(!0)){u={...t};return e(await this.dataProvider.fetchByOffset(t))}if(a<h&&r.push(...this._getAllAdds().slice(a,s?void 0:a+i)),!s&&a+i<=h)return e({fetchParameters:t,results:r,done:l});const p=o.numRemoves+d.numRemoves,I=o.numMoveAdds+d.numMoveAdds,y=d.numAdds+n.numAdds;let c={offset:a},g={size:i};for(p>0||I>0||y>0?(c={offset:0},s||(g={size:a+i+p+I+y-Math.max(m-a,0)}),f=Math.max(a-h,0)):m>0&&(c={offset:Math.max(a-m,0)},s||(g={size:i-Math.max(m-a,0)}));!l&&(s||r.length<i);){u={...t,...c,...g};let e=await this.dataProvider.fetchByOffset(u),a=e.results;if(0===a.length){l=!0;break}for(let t=0;t<a.length&&(s||r.length<i);t++){const e=a[t],s=e.metadata.key;if(!(this.editBuffer.isUpdateTransformed(s)||this._isItemRemoved(s)||this.editBuffer.isSubmittingOrSubmitted(s)))if(f>0)--f;else{const t=this.editBuffer.getItem(s);r.push(t?t.item:e)}}l=e.done,c.offset+=a.length,g.size=s?i:i-r.length}return e({fetchParameters:t,results:r,done:l})},!0)}containsKeys(t){const e=this._fetchByKeysFromBuffer(t),a=e.unresolvedKeys,s=new Set;return e.results.forEach((t,e)=>{s.add(e)}),0===a.size?Promise.resolve({containsParameters:t,results:s}):this.dataProvider.containsKeys({attributes:t.attributes,keys:a,scope:t.scope}).then(e=>s.size>0?(e.results.forEach((t,e)=>{s.add(e)}),{containsParameters:t,results:s}):e)}fetchByKeys(t){const a=this._fetchByKeysFromBuffer(t),s=a.unresolvedKeys,i=a.results,r=t?.signal;return e.wrapWithAbortHandling(r,e=>0===s.size?e({fetchParameters:t,results:i}):e(this.dataProvider.fetchByKeys({attributes:t.attributes,keys:s,scope:t.scope,signal:r}).then(e=>i.size>0?(e.results.forEach((t,e)=>{i.set(e,t)}),{fetchParameters:t,results:i}):e)),!1)}fetchByOffset(t){return this._fetchFromOffset(t)}fetchFirst(t){this.lastSortCriteria=t?t.sortCriteria:null;const e=this.dataProvider.fetchFirst(t)[Symbol.asyncIterator]();return this.lastIterator=new this.AsyncIterator(this,e,t),new this.AsyncIterable(this,this.lastIterator)}getCapability(t){return this.dataProvider.getCapability(t)}_calculateSizeChange(t){let e=0;return t.forEach((t,a)=>{this.editBuffer.getEditItemStatus(a)||("add"===t.operation?++e:"remove"===t.operation&&--e)}),e}_getEditBufferCounts(){return{submitting:this._getCounts(this.editBuffer.getSubmittingItems()),unsubmitted:this._getCounts(this.editBuffer.getUnsubmittedItems()),submitted:{numAdds:this.editBuffer.getSubmittedAddItems().size}}}_getCounts(t){let e=0,a=0,s=0;return t.forEach((t,i)=>{"add"===t.operation?++e:"remove"===t.operation?++a:"update"===t.operation&&this.editBuffer.isUpdateTransformed(i)&&++s}),{numAdds:e,numRemoves:a,numMoveAdds:s}}_getAllAdds(){return this.editBuffer.getAddItemOrder().map(t=>this.editBuffer.getItem(t,!0)?.item)}getTotalSize(){return this.dataProvider.getTotalSize().then(t=>(t>-1&&(t+=this._calculateSizeChange(this.editBuffer.getSubmittingItems()),t+=this._calculateSizeChange(this.editBuffer.getUnsubmittedItems())),t))}isEmpty(){const t=this.editBuffer.getUnsubmittedItems(),e=this.editBuffer.getSubmittingItems();t.forEach((t,e)=>{if("add"===t.operation||"update"===t.operation)return"no"}),e.forEach((t,e)=>{if("add"===t.operation||"update"===t.operation)return"no"});const a=this.dataProvider.isEmpty();return"no"===a&&(t.size>0||e.size>0)?"unknown":a}_isItemRemoved(t){const e=this.editBuffer.getItem(t);return null!=e&&"remove"===e.operation}_addToMergedArrays(e,a,s=null){let i=null;if(a)i=this._getNextKey(s);else if(this.lastIterator){for(let t=0;t<this.lastIterator.mergedItemArray.length;t++){const e=this.lastIterator.mergedItemArray[t].metadata.key;if(!this._isItemRemoved(e)){i=e;break}}let a=0!==this.lastIterator.nextOffset;if(this.editBuffer.isUpdateTransformed(e.metadata.key))for(let s=0;s<this.lastIterator.mergedItemArray.length;s++)if(t.KeyUtils.equals(this.lastIterator.mergedItemArray[s].metadata.key,e.metadata.key)){a&&(a=this.lastIterator.nextOffset<=s),this.lastIterator.mergedItemArray.splice(s,1);break}this.lastIterator.mergedItemArray.splice(0,0,e),this.lastIterator.mergedAddKeySet.add(e.metadata.key),a&&this.lastIterator.nextOffset++}return i}_getNextKey(t,e=!1){let a=t;if(this.lastIterator){const s=this.lastIterator.mergedItemArray;let i=this._findKeyInItems(t,s);for(;null!==a&&(e||this._isItemRemoved(a));)e&&(e=!1),a=-1===i||i+1===s.length?null:s[i+1].metadata.key,i++}return a}addItem(t){const a=Object.assign({},t);null===t.metadata.key&&(a.metadata=Object.assign({},t.metadata),a.metadata.key=this._generateKey(t.data)),this.editBuffer.addItem(a);const s=this._addToMergedArrays(a,!1),i={add:{data:[a.data],keys:(new Set).add(a.metadata.key),metadata:[a.metadata],addBeforeKeys:[s],indexes:[0]}},r=new e.DataProviderMutationEvent(i);this.dispatchEvent(r),this._dispatchSubmittableChangeEvent()}_removeFromMergedArrays(t,e){if(this.lastIterator){const a=this.lastIterator.mergedItemArray,s=this.lastIterator.mergedAddKeySet,i=this._findKeyInItems(t,a);if(-1!==i){(e||s.has(t))&&(a.splice(i,1),s.delete(t));for(let t=this.lastIterator.nextOffset-1;t>=0;t--){let e=a[t]?.metadata.key;if(null!=e&&!this._isItemRemoved(e))break;this.lastIterator.nextOffset=t}}}}removeItem(t){this.editBuffer.removeItem(t),this._removeFromMergedArrays(t.metadata.key,!1);const a={remove:{data:t.data?[t.data]:null,keys:(new Set).add(t.metadata.key),metadata:[t.metadata]}},s=new e.DataProviderMutationEvent(a);this.dispatchEvent(s),this._dispatchSubmittableChangeEvent()}updateItem(t){this.editBuffer.updateItem(t);const a={update:{data:[t.data],keys:(new Set).add(t.metadata.key),metadata:[t.metadata]}},s=new e.DataProviderMutationEvent(a);this.dispatchEvent(s),this._dispatchSubmittableChangeEvent()}getSubmittableItems(){const t=this.editBuffer.getUnsubmittedItems(),e=this.editBuffer.getSubmittingItems(),a=[];return t.forEach((t,s)=>{e.has(s)||a.push(t)}),a}resetAllUnsubmittedItems(){this.editBuffer.resetAllUnsubmittedItems(),this._dispatchSubmittableChangeEvent(),this.dispatchEvent(new e.DataProviderRefreshEvent)}_addEventDetail(t,e,a,s){null==t[e]&&(t[e]="add"===e?{data:[],keys:new Set,metadata:[],addBeforeKeys:[]}:{data:[],keys:new Set,metadata:[]}),t[e].keys.add(a.metadata.key),t[e].data.push(a.data),t[e].metadata.push(a.metadata),"add"===e&&t[e].addBeforeKeys.push(s)}resetUnsubmittedItem(t){const a=this.editBuffer.getUnsubmittedItems(),i=new Set,r=new s,d=a.get(t);d&&(i.add(t),r.set(t,d),a.delete(t)),this._dispatchSubmittableChangeEvent(),this.dataProvider.fetchByKeys({keys:i}).then(t=>{const a={};let s;r.forEach((e,i)=>{if("add"===e.operation)this._removeFromMergedArrays(e.item.metadata.key,!1),this._addEventDetail(a,"remove",e.item);else if("remove"===e.operation){if(s=t.results.get(i),s){let t=null;if(this.lastIterator){const e=this.lastIterator.mergedItemArray,a=this._findKeyInItems(i,e);if(-1!==a)for(let s=a+1;s<e.length;s++)if(!this._isItemRemoved(e[s].metadata.key)){t=e[s].metadata.key;break}}this._addEventDetail(a,"add",s,t)}}else s=t.results.get(i),s?this._addEventDetail(a,"update",s):this._addEventDetail(a,"remove",e.item)}),this.dispatchEvent(new e.DataProviderMutationEvent(a))})}setItemStatus(t,e,a,s){t&&(s&&this.generatedKeyMap.set(s,t.item.metadata.key),this.editBuffer.setItemStatus(t,e,a),this._dispatchSubmittableChangeEvent())}_dispatchSubmittableChangeEvent(){const t=this.getSubmittableItems(),e=new i.BufferingDataProviderSubmittableChangeEvent(t);this.dispatchEvent(e)}_findKeyInMetadata(e,a){if(a)for(let s=0;s<a.length;s++)if(t.KeyUtils.equals(e,a[s].key))return s;return-1}_findKeyInItems(e,a){if(a)for(let s=0;s<a.length;s++)if(t.KeyUtils.equals(e,a[s].metadata.key))return s;return-1}_initDetailProp(t,e,a,s){t[a]&&(e[a]=s)}_initDetail(t,e,a,s=!1){a?(this._initDetailProp(t,e,"data",[]),this._initDetailProp(t,e,"metadata",[]),s&&this._initDetailProp(t,e,"addBeforeKeys",[]),this._initDetailProp(t,e,"indexes",[]),this._initDetailProp(t,e,"parentKeys",[])):(this._initDetailProp(t,e,"data",t.data),this._initDetailProp(t,e,"metadata",t.metadata),s&&this._initDetailProp(t,e,"addBeforeKeys",t.addBeforeKeys),this._initDetailProp(t,e,"indexes",t.indexes),this._initDetailProp(t,e,"parentKeys",t.parentKeys))}_initDetails(t,e,a){t.add&&(e.add={keys:new Set},this._initDetail(t.add,e.add,a,!0)),t.remove&&(e.remove={keys:new Set},this._initDetail(t.remove,e.remove,a)),t.update&&(e.update={keys:new Set},this._initDetail(t.update,e.update,a))}_pushDetailProp(t,e,a,s){t[a]&&e[a].push(t[a][s])}_pushDetail(t,e,a){if(a.keys.add(t),e.metadata){const s=this._findKeyInMetadata(t,e.metadata);s>-1&&(this._pushDetailProp(e,a,"data",s),this._pushDetailProp(e,a,"metadata",s),e.addBeforeKeys&&0!==e.addBeforeKeys.length&&this._pushDetailProp(e,a,"addBeforeKeys",s),e.indexes&&0!==e.indexes.length&&this._pushDetailProp(e,a,"indexes",s),this._pushDetailProp(e,a,"parentKeys",s))}}_isSkipItem(t,e,a){let s=null!=e.get(t);if(!s){const e=a.get(t);s=e&&"remove"===e.operation}return s}_isSortFieldUpdated(t,e){let a=!1;if(this.lastIterator&&this.lastSortCriteria&&this.lastSortCriteria.length){const s=this._findKeyInItems(t,this.lastIterator.mergedItemArray);if(s<0)return!1;const i=[];let r=0;if(this.lastIterator&&this.lastSortCriteria)for(const t of this.lastSortCriteria)i[r++]=t.attribute;for(const r of i){const i=this._findKeyInMetadata(t,e.metadata);this.lastIterator.mergedItemArray[s][r]!==e.data[i]&&(a=!0)}}return a}_getOperationDetails(t,e,a){if(t&&(t.add||t.remove||t.update)){let a={};const s=this.editBuffer.getSubmittingItems(),i=this.editBuffer.getUnsubmittedItems();if(0===s.size&&0===i.size)a=t;else{let r;this._initDetails(t,a,!0),this._processAdd(a,t,e),t.remove&&t.remove.keys.forEach(e=>{r=this._isSkipItem(e,s,i),r||this._pushDetail(e,t.remove,a.remove);const d=i.get(e);!d||"remove"!==d.operation&&"update"!==d.operation||i.delete(e)}),t.update&&t.update.keys.forEach(e=>{r=this._isSkipItem(e,s,i),r||this._pushDetail(e,t.update,a.update)})}return a}return t}_processAdd(t,e,a){if(e.add)return t.add={...e.add},void(null!=a&&(t.add.addBeforeKeys=a))}_handleRefreshEvent(t){this.dataBeforeUpdated=new Map;const e=this.editBuffer.getUnsubmittedItems(),a=new Set;e.forEach(t=>{"remove"!==t.operation&&"update"!==t.operation||a.add(t.item.metadata.key)}),a.size>0?this.dataProvider.fetchByKeys({keys:a}).then(s=>{s.results.forEach((t,e)=>{a.delete(e)}),a.forEach(t=>{e.delete(t)}),this.dispatchEvent(t)}):this.dispatchEvent(t)}_cleanUpSubmittedItem(t,e){const a=this.editBuffer.getSubmittingItems().get(e);a&&this.editBuffer.setItemMutated(a)}_handleMutateEvent(t){this.dataBeforeUpdated=new Map;const a=t.detail.add;let s;a&&a.metadata&&a.data&&(s=a.addBeforeKeys?[...a.addBeforeKeys]:null,a.metadata.forEach((t,e)=>{let i;if(a.addBeforeKeys&&void 0!==a.addBeforeKeys[e])i=this._addToMergedArrays({metadata:a.metadata[e],data:a.data[e]},!0,a.addBeforeKeys[e]),a.addBeforeKeys[e]&&!i&&this.lastIterator&&this.lastIterator.mergedItemArray&&this.lastIterator.mergedItemArray.splice(this.lastIterator.mergedItemArray.length,0,{data:a.data[e],metadata:a.metadata[e]}),s[e]=i;else if(a.indexes&&a.indexes[e]){let t=a.indexes[e];for(;this.lastIterator&&t<this.lastIterator.mergedItemArray.length&&this._isItemRemoved(this.lastIterator.mergedItemArray[t].metadata.key);)t++;this.lastIterator&&t>=this.lastIterator.mergedItemArray.length&&this.lastIterator.mergedItemArray.splice(this.lastIterator.mergedItemArray.length,0,{data:a.data[e],metadata:a.metadata[e]})}this._cleanUpSubmittedItem("add",t.key)}));const i=t.detail.remove;i&&i.keys.forEach(t=>{this._removeFromMergedArrays(t,!0),this._cleanUpSubmittedItem("remove",t)});const r=[],d=t.detail.update;if(d){let t=[];d.data.forEach((e,a)=>{r[a]=this._isSortFieldUpdated(d.metadata[a].key,d),r[a]&&(this._removeFromMergedArrays(d.metadata[a].key,!0),t[a]=this._addToMergedArrays({data:e,metadata:d.metadata[a]},!0),t[a]||this.lastIterator&&this.lastIterator.mergedItemArray&&this.lastIterator.mergedItemArray.splice(this.lastIterator.mergedItemArray.length,0,{data:e,metadata:d.metadata[a]})),this._cleanUpSubmittedItem("remove",d.metadata[a].key)})}const n=this._getOperationDetails(t.detail,s,r);this._checkGeneratedKeys(n),this.dispatchEvent(new e.DataProviderMutationEvent(n))}_checkGeneratedKeys(t){const e=(e,a,s)=>{if(this.generatedKeyMap.has(e)){const i=this.generatedKeyMap.get(e);if((!t.remove||!t.remove.keys?.has(e))&&(t.remove||(t.remove={keys:new Set}),t.remove.keys.add(i),a)){const t=this.lastIterator?.mergedItemArray?.[0]?.metadata?.key;null!==t&&(a.addBeforeKeys||(a.addBeforeKeys=[]),a.addBeforeKeys[s]=t)}}};if(t.add?.keys){let a=0;t.add.keys.forEach(s=>{e(s,t.add,a),a++})}}_addEventListeners(t){t[o._ADDEVENTLISTENER](o._REFRESH,this._handleRefreshEvent.bind(this)),t[o._ADDEVENTLISTENER](o._MUTATE,this._handleMutateEvent.bind(this))}}return o._REFRESH="refresh",o._MUTATE="mutate",o._ADDEVENTLISTENER="addEventListener",a.EventTargetMixin.applyMixin(o),t._registerLegacyNamespaceProp("BufferingDataProvider",o),o});
//# sourceMappingURL=ojbufferingdataprovider.js.map