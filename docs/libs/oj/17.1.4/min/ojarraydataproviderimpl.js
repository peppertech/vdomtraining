/**
 * @license
 * Copyright (c) 2014, 2025, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["exports","ojs/ojdataprovider","ojs/ojset","ojs/ojcore-base","ojs/ojmap","ojs/ojlogger"],function(t,e,s,i,n,r){"use strict";s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s,i=i&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i,n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n;const o="@default",l=()=>{const t=new Set;return t.add("exclusion"),{caching:"all",attributeFilter:{expansion:{},ordering:{},defaultShape:{features:t}}}},a=(t,e)=>{if("string"==typeof e){const s=e.indexOf(".");if(s>0){const i=e.substring(0,s),n=e.substring(s+1),r=t[i];if(r)return a(r,n)}}return"function"==typeof t[e]?t[e]():t[e]},u=(t,e,s)=>{if(Array.isArray(t)){let i,n=!1;t.forEach(t=>{t!==o&&t.name!==o||(n=!0)}),Object.keys(e).forEach(r=>{if(n){let n,o=!1,l=r;for(i=0;i<t.length;i++)if(n=t[i]instanceof Object?t[i].name:t[i],n.startsWith("!")){if(n=n.substr(1,n.length-1),n===r){o=!0;break}}else if(n===r){l=t[i];break}o||u(l,e,s)}else t.forEach(t=>{let i;i=t instanceof Object?t.name:t,i.startsWith("!")||i!==r||u(t,e,s)})})}else if(t instanceof Object){const i=t.name,n=t.attributes;if(i&&!i.startsWith("!"))if(e[i]instanceof Object&&!Array.isArray(e[i])&&n){const t={};u(n,e[i],t),s[i]=t}else if(Array.isArray(e[i])&&n){let t;s[i]=[],e[i].forEach((e,r)=>{t={},u(n,e,t),s[i][r]=t})}else h(s,e,i)}else h(s,e,t)},h=(t,e,s)=>{t&&e&&Object.defineProperty(t,s,{get:()=>e[s],set(t){e[s]=t},enumerable:!0})},p=(t,e)=>({metadata:{key:t},data:e}),c=t=>t.map(t=>({key:t})),f=(t,e)=>{let s,n=-1;for(s=0;s<e.length;s++)if(i.Object.compareValues(e[s],t)){n=s;break}return n};t.ArrayDataProviderImpl=class{constructor(t,s){var i;this.options=t,this.implOptions=s,this._sequenceNum=0,this._mutationSequenceNum=0,this._mapClientIdToIteratorInfo=new Map,this.AsyncIterable=(i=class{constructor(t){this._asyncIterator=t,this[Symbol.asyncIterator]=()=>this._asyncIterator}},Symbol.asyncIterator,i),this.AsyncIterator=class{constructor(t,e,s,i){this._parent=t,this._nextFunc=e,this._params=s,this._offset=i,this._clientId=s&&s.clientId||Symbol(),t._mapClientIdToIteratorInfo.set(this._clientId,{offset:i,rowKey:null,filterCriterion:s?.filterCriterion,sortCriteria:s?.sortCriteria,fetchedRowKeys:[]}),this._cacheObj={mutationSequenceNum:t._mutationSequenceNum}}next(){const t=(t,e)=>{const s=this._parent._mapClientIdToIteratorInfo.get(this._clientId),i=s?s.offset:null,n=this._nextFunc(this._params,i,!1,this._cacheObj);Object.defineProperty(n.result.value,"totalFilteredRowCount",{get:()=>{if("enabled"===this._params?.includeFilteredRowCount)return(void 0===this._totalFilteredRowCount||this._parent._resetTotalFilteredRowCount)&&(this._totalFilteredRowCount=this._parent._getTotalFilteredRowCount(this._params),this._parent._resetTotalFilteredRowCount=!1),this._totalFilteredRowCount},enumerable:!0});const r=n.result.value.metadata?.map(t=>t.key),o=r?s?.fetchedRowKeys?s.fetchedRowKeys.concat(r):r:[],l=o.length>0?o[o.length-1]:null;return this._parent._mapClientIdToIteratorInfo.set(this._clientId,{offset:n.offset,rowKey:l,filterCriterion:this._params?.filterCriterion,sortCriteria:this._params?.sortCriteria,fetchedRowKeys:o}),t(n.result)};return this._parent.implOptions.supportAbortController?e.wrapWithAbortHandling(this._params?.signal,t,!1):t(Promise.resolve.bind(Promise),Promise.reject.bind(Promise))}}}containsKeys(t){return this.fetchByKeys(t).then(e=>{const i=new s;return t.keys.forEach(t=>{null!=e.results.get(t)&&i.add(t)}),Promise.resolve({containsParameters:t,results:i})})}fetchByKeys(t){const s=(e,s)=>{this.implOptions.generateKeysIfNeeded(()=>this.generateKeys());const r=new n,o=this.implOptions.getKeys(),l=null!=t?t.attributes:null;let a,h=0;if(t){const s=this.implOptions.getData();return t.keys.forEach(t=>{for(a=null,h=0;h<o.length;h++)if(i.Object.compareValues(o[h],t)){a=h;break}if(null!=a&&a>=0){let e=s[a];if(l&&l.length>0){const t={};u(l,e,t),e=t}r.set(t,p(t,e))}}),e({fetchParameters:t,results:r})}return s("Keys are a required parameter")};return this.implOptions.supportAbortController?e.wrapWithAbortHandling(t?.signal,s,!1):s(Promise.resolve.bind(Promise),Promise.reject.bind(Promise))}fetchByOffset(t){const s=(e,s)=>{const i=null!=t?t.size:-1,n=null!=t?t.sortCriteria:null,r=null!=t&&t.offset>0?t.offset:0,o=null!=t?t.attributes:null,l=null!=t?t.filterCriterion:null;this.implOptions.generateKeysIfNeeded(()=>this.generateKeys());let a=[],u=!0;if(t){const s={size:i,sortCriteria:n,filterCriterion:l,attributes:o},h=this._fetchFrom(s,r,!0).result,c=h.value.fetchParameters;c.sortCriteria!==n&&(t={...t,sortCriteria:c.sortCriteria});const f=h.value;u=h.done;const d=f.data,m=f.metadata.map(t=>t.key);return a=d.map((t,e)=>p(m[e],t)),e(Object.assign({fetchParameters:t,results:a,done:u},"enabled"===t?.includeFilteredRowCount?{totalFilteredRowCount:this._getTotalFilteredRowCount(t)}:null))}return s("Offset is a required parameter")};return this.implOptions.supportAbortController?e.wrapWithAbortHandling(t?.signal,s,!1):s(Promise.resolve.bind(Promise),Promise.reject.bind(Promise))}fetchFirst(t){return new this.AsyncIterable(new this.AsyncIterator(this,this._fetchFrom.bind(this),t,0))}getTotalSize(){return Promise.resolve(this.implOptions.getData().length)}isEmpty(){return this.implOptions.getData().length>0?"no":"yes"}_getTotalFilteredRowCount(t){const s=this.implOptions.getData(),i=t?t.filterCriterion:null;let n=-1;if(i){n=0;let t=e.FilterFactory.getFilter({filterDef:i,filterOptions:this.options});for(let e=0;e<s.length;e++)t.filter(s[e])&&++n}else n=s.length;return n}getId(t){let e;const s=this.options?.keyAttributes;if(null!=s){if(Array.isArray(s)){let i;for(e=[],i=0;i<s.length;i++)e[i]=a(t,s[i])}else e="@value"===s?"string"==typeof(i=t)||"number"==typeof i||"boolean"==typeof i?i:Object.keys(i).map(t=>a(i,t)):a(t,s);return e}return null;var i}generateKeys(){const t=this.options?.keyAttributes,e=[],s=this.implOptions.getData();for(let i=0;i<s.length;i++){let n=this.getId(s[i]);null!=n&&"@index"!==t||(n=this._sequenceNum++),e.push(n)}return e}_fetchFrom(t,s,i,n){const r=null!=t?t.attributes:null;this.implOptions.generateKeysIfNeeded(()=>this.generateKeys());const o=null!=t?t.sortCriteria:null,l=this._getCachedIndexMap(o,n),a=this.implOptions.getData(),h=this.implOptions.getKeys(),p=l.map(t=>a[t]),f=l.map(t=>h[t]),d=null!=t?t.size>0?t.size:t.size<0?h.length:25:25;let m=s+d<p.length;const y=this.implOptions.mergeSortCriteria(o);null!=y&&(t={...t,sortCriteria:y});let g,O=[],b=[],_=0;if(null!=t&&t.filterCriterion){let i=null;i=e.FilterFactory.getFilter({filterDef:t.filterCriterion,filterOptions:this.options});let n=0;for(;O.length<d&&n<p.length;)i.filter(p[n])&&(_>=s&&(O.push(p[n]),b.push(f[n])),_++),n++;m=n<p.length}else O=p.slice(s,s+d),b=f.slice(s,s+d);_=s+O.length,g=O.map(t=>{if(r&&r.length>0){const e={};u(r,t,e),t=e}return t});const w={fetchParameters:t,data:g,metadata:c(b)};return{result:{value:w,done:!(i?m:w.data.length>0)},offset:_}}_getCachedIndexMap(t,e){if(e&&e.indexMap&&e.mutationSequenceNum===this._mutationSequenceNum)return e.indexMap;const s=this.implOptions.getData().map((t,e)=>e),i=this._sortData(s,t);return e&&(e.indexMap=i,e.mutationSequenceNum=this._mutationSequenceNum),i}_sortData(t,e){const s=this.implOptions.getData(),i=t.map(t=>({index:t,value:s[t]}));return null!=e&&i.sort(this.implOptions.getSortComparator(e)),i.map(t=>t.index)}queueMutationEvent(t){this._mutationEvent=this._createMutationEvent(t)}flushQueue(){this.implOptions.dispatchEvent(this._mutationEvent??new e.DataProviderRefreshEvent),this._mutationEvent=null}_createMutationEvent(t){let n,o,l,a,u,h=[],p=[],d=[];const m=[];this._mutationSequenceNum++;let y=!0,g=!0;this._resetTotalFilteredRowCount=!0,t.forEach(t=>{"deleted"===t.status?(y=!1):"added"===t.status&&(g=!1)});const O=[],b=[];let _=null,w=null,C=null;const K=this.implOptions.generateKeysIfNeeded(()=>this.generateKeys());if(!y&&!g){for(n=0;n<t.length;n++){a=t[n].index,u=t[n].status;const e=this.getId(t[n].value);for(o=0;o<t.length;o++)o!==n&&a===t[o].index&&u!==t[o].status&&O.indexOf(n)<0&&b.indexOf(n)<0&&(null==e||i.Object.compareValues(e,this.getId(t[o].value)))&&("deleted"===u?(b.push(n),O.push(o)):(b.push(o),O.push(n)))}for(n=0;n<t.length;n++)if(O.indexOf(n)>=0){const e=this.implOptions.getKeys()[t[n].index];p.push(e),h.push(t[n].value),d.push(t[n].index)}p.length>0&&(_={keys:new s(p),metadata:c(p),data:h,indexes:d})}if(h=[],p=[],d=[],!y){for(n=0;n<t.length;n++)"deleted"===t[n].status&&O.indexOf(n)<0&&b.indexOf(n)<0&&(l=this.implOptions.getKeyForDelete(t[n],K),p.push(l),h.push(t[n].value),d.push(t[n].index));p.length>0&&p.forEach(t=>{const e=f(t,this.implOptions.getKeys());e>=0&&this.implOptions.spliceKeys(e,1)}),p.length>0&&(C={keys:new s(p),metadata:c(p),data:h,indexes:d})}if(h=[],p=[],d=[],!g){const e=null==this.implOptions.getKeys()||!(this.implOptions.getKeys().length>0);for(n=0;n<t.length;n++)"added"===t[n].status&&O.indexOf(n)<0&&b.indexOf(n)<0&&(l=this.getId(t[n].value),null==l&&(K||this.implOptions.keysSpecified)&&(l=this.implOptions.getKeys()[t[n].index]),null==l?(l=this._sequenceNum++,this.implOptions.spliceKeys(t[n].index,0,l)):e||-1===f(l,this.implOptions.getKeys())?this.implOptions.spliceKeys(t[n].index,0,l):K||this.implOptions.keysSpecified||(r.warn("added row has duplicate key "+l),this.implOptions.spliceKeys(t[n].index,0,l)),p.push(l),h.push(t[n].value),d.push(t[n].index));for(n=0;n<t.length;n++)if("added"===t[n].status&&O.indexOf(n)<0&&b.indexOf(n)<0){let e=this.implOptions.getKeys()[t[n].index+1];e=null==e?null:e,m.push(e)}p.length>0&&(w={keys:new s(p),afterKeys:new s(m),addBeforeKeys:m,metadata:c(p),data:h,indexes:d})}return this._adjustIteratorOffset(C,w),new e.DataProviderMutationEvent({add:w,remove:C,update:_})}resetTotalFilteredRowCount(){this._resetTotalFilteredRowCount=!0}_adjustIteratorOffset(t,e){const s=t?.indexes,i=e?.indexes.slice(0);this._mapClientIdToIteratorInfo.forEach((n,r)=>{if(n.offset>0){const o=n.filterCriterion,l=n.sortCriteria,a=l?this.implOptions.getSortComparator(l):null;if(s&&(s.forEach((e,s)=>{const i=Array.from(t.keys)[s],r=f(i,n.fetchedRowKeys);r>-1&&(--n.offset,n.fetchedRowKeys.splice(r,1))}),n.rowKey=n.fetchedRowKeys[n.fetchedRowKeys.length-1]),i){const t=e.data.slice(0),s=Array.from(e.keys);if(null!=o?.filter)for(let e=i.length-1;e>=0;e--){let n=t[e];null!=n&&o.filter(n)&&(i.splice(e,1),t.splice(e,1),s.splice(e,1))}if(null!=a){const t=[...n.fetchedRowKeys,...s],e=this.implOptions.getData(),i=new Map;this.implOptions.getKeys().forEach((t,e)=>{i.set(t,e)}),t.sort((t,s)=>{const n=e[i.get(t)],r=e[i.get(s)];return a({value:n},{value:r})}),n.fetchedRowKeys=t.slice(0,f(n.rowKey,t)+1),n.offset=n.fetchedRowKeys.length}else i.forEach((t,e)=>{const i=s[e];if(t<f(n.rowKey,this.implOptions.getKeys())){++n.offset;f(i,n.fetchedRowKeys)<0&&n.fetchedRowKeys.splice(t,0,i)}})}this._mapClientIdToIteratorInfo.set(r,n)}})}},t.createOptimizedKeyMap=t=>{if(t){const e=new n;return t.forEach((t,s)=>{e.set(s,t)}),e}return new n},t.createOptimizedKeySet=t=>new s(t),t.getCapability=t=>"sort"===t?{attributes:"multiple"}:"fetchByKeys"===t?Object.assign({implementation:"lookup"},l()):"fetchByOffset"===t?Object.assign({implementation:"randomAccess",totalFilteredRowCount:"exact"},l()):"fetchFirst"===t?Object.assign({iterationSpeed:"immediate",totalFilteredRowCount:"exact"},l()):"fetchCapability"===t?l():"filter"===t?{operators:["$co","$eq","$ew","$pr","$gt","$ge","$lt","$le","$ne","$regex","$sw","$exists"],attributeExpression:["*"],textFilter:{},textFilterMatching:{matchBy:["startsWith","contains","phrase"]},nestedFilter:{},collationOptions:{sensitivity:["base","accent","case","variant"]}}:null,t.getVal=a,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ojarraydataproviderimpl.js.map