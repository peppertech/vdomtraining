{"version":3,"file":"SplitMenuButtonWebElement.js","sourceRoot":"","sources":["SplitMenuButtonWebElement.ts"],"names":[],"mappings":";;;AAAA,mFAAgF;AAChF,2DAAwC;AAExC;;;;GAIG;AACH,MAAa,yBAA0B,SAAQ,6DAA6B;IAA5E;QACE,qBAAqB;;QAoDrB;;;WAGG;QACH,2EAA2E;QACnE,UAAK,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAmB1E,CAAC;IA1EC;;OAEG;IACH,KAAK,CAAC,KAAK;QACT,uDAAuD;QACvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAE,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACpE,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAED;;SAEK;IAEL,KAAK,CAAC,mBAAmB,CACvB,KAAU,EACV,SAAqC;QAErC,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC;YACtB,IAAI,MAAM,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;gBACvB,OAAO,CAAC,CAAC;YACX,CAAC;QACH,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,YAAY,CAAC,aAAgC;QACxD,gBAAgB;QAChB,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QACtB,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAC;YACjC,KAAK,MAAM,KAAK,IAAI,aAAa,EAAE,CAAC;gBAClC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;QACH,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,QAAQ;QACpB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,uBAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAClE,MAAM,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IASD;;OAEG;IACK,KAAK,CAAC,WAAW,CAAC,aAAqB;QAC7C,wCAAwC;QACxC,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,YAAY,CACnD,uBAAE,CAAC,GAAG,CAAC,8EAA8E,CAAC,CACvF,CAAC;QAEF,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;YACrE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YAClC,OAAO,IAAI,KAAK,aAAa,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,MAAM,KAAK,EAAE,KAAK,EAAE,CAAC;IACvB,CAAC;CACF;AA7ED,8DA6EC","sourcesContent":["import { SplitMenuButtonWebElementBase } from './SplitMenuButtonWebElementBase';\nimport { By } from 'selenium-webdriver';\n\n/**\n * The component WebElement for [oj-c-split-menu-button](../../../oj-c/docs/oj.SplitMenuButton.html).\n * Do not instantiate this class directly, instead, use\n * [findSplitMenuButton](../functions/findSplitMenuButton.html).\n */\nexport class SplitMenuButtonWebElement extends SplitMenuButtonWebElementBase {\n  // Put overrides here\n\n  /**\n   * Perform a click on the button action\n   */\n  async click() {\n    // Find the action part of <button> element top element\n    const button = await this.findElement(By.css('[role=button] span'));\n    return button.click();\n  }\n\n  /**\n   * Helper util\n   * */\n\n  async findAsyncSequential<T>(\n    array: T[],\n    predicate: (t: T) => Promise<boolean>\n  ): Promise<T | undefined> {\n    for (const t of array) {\n      if (await predicate(t)) {\n        return t;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Fire the ojMenuAction event on the oj-c-split-menu-button, and\n   * invoke the Action handler of the selected value.\n   *\n   */\n  public async doMenuAction(selectedValue: string | string[]): Promise<void> {\n    // open the menu\n    await this.openMenu();\n    if (Array.isArray(selectedValue)) {\n      for (const value of selectedValue) {\n        await this.doMenuClick(value);\n      }\n    } else {\n      await this.doMenuClick(selectedValue);\n    }\n  }\n\n  /**\n   * openMenu - opens the menu\n   */\n  private async openMenu() {\n    const button = await this.findElements(By.css('span[role=none]'));\n    await button[1].click();\n  }\n\n  /**\n   * delay - delays the milliseconds\n   * await delay(2000);\n   */\n  // private delay = (ms: number) => new Promise((fn) => setTimeout(fn, ms));\n  private delay = (ms: number) => new Promise((fn) => setTimeout(fn, ms));\n\n  /**\n   * In order to do nested selections, we need an isolated menu clicker\n   */\n  private async doMenuClick(selectedValue: string): Promise<void> {\n    // Find the <menu-item> element to click\n    await this.delay(350);\n    const menuItems = await this.getDriver().findElements(\n      By.css('#__root_layer_host [role^=menuitem], #__oj_zorder_container [role^=menuitem]')\n    );\n\n    const match = await this.findAsyncSequential(menuItems, async (item) => {\n      const text = await item.getText();\n      return text === selectedValue;\n    });\n\n    await match?.click();\n  }\n}\n"]}