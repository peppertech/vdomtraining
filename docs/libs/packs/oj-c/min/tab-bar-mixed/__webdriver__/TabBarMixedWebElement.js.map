{"version":3,"file":"TabBarMixedWebElement.js","sourceRoot":"","sources":["TabBarMixedWebElement.ts"],"names":[],"mappings":";;;AAAA,2DAA+C;AAC/C,2EAAwE;AAExE;;;;GAIG;AACH,MAAa,qBAAsB,SAAQ,qDAAyB;IAClE,qBAAqB;IACrB;;;;;;OAMG;IACH,KAAK,CAAC,WAAW,CAAI,GAAM;QACzB,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;QACvB,IAAI,CAAC;YACH,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAE,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC;YACrE,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC;QACrB,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,MAAM,IAAI,0BAAK,CAAC,kBAAkB,CAAC,2BAA2B,GAAG,mBAAmB,CAAC,CAAC;QACxF,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,QAAQ,CAAI,GAAM;QACtB,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;QACvB,IAAI,CAAC;YACH,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAE,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC;YACrE,MAAM,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC,uBAAE,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC,CAAC;YACnF,MAAM,MAAM,EAAE,KAAK,EAAE,CAAC;QACxB,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,MAAM,IAAI,0BAAK,CAAC,kBAAkB,CAAC,2BAA2B,GAAG,mBAAmB,CAAC,CAAC;QACxF,CAAC;IACH,CAAC;CACF;AAnCD,sDAmCC","sourcesContent":["import { By, error } from 'selenium-webdriver';\nimport { TabBarMixedWebElementBase } from './TabBarMixedWebElementBase';\n\n/**\n * The component WebElement for [oj-c-tab-bar-mixed](../../../oj-c/docs/oj.TabBarMixed.html).\n * Do not instantiate this class directly, instead, use\n * [findTabBarMixed](../modules.html#findTabBarMixed).\n */\nexport class TabBarMixedWebElement extends TabBarMixedWebElementBase {\n  // Put overrides here\n  /**\n   * Selects tab specified by key.\n   * Triggers ojSelectionAction regardless if the key passed is same as the current selection value or not.\n   * @param key key of the tab to be selected\n   * @override\n   * @typeparam K Type of keys\n   */\n  async doSelection<K>(key: K): Promise<void> {\n    await this.whenReady();\n    try {\n      const tab = await this.findElement(By.css(`[data-oj-key=\"${key}\"]`));\n      await tab?.click();\n    } catch (e) {\n      throw new error.NoSuchElementError(`Tab with specified key \"${key}\" cannot be found`);\n    }\n  }\n\n  /**\n   * Removes tab specified by key.\n   * @param key key of the tab to be removed\n   * @override\n   * @typeparam K Type of keys\n   */\n  async doRemove<K>(key: K): Promise<void> {\n    await this.whenReady();\n    try {\n      const tab = await this.findElement(By.css(`[data-oj-key=\"${key}\"]`));\n      const button = tab.findElement(By.css('[data-oj-tabbar-item-remove-icon=\"true\"]'));\n      await button?.click();\n    } catch (e) {\n      throw new error.NoSuchElementError(`Tab with specified key \"${key}\" cannot be found`);\n    }\n  }\n}\n"]}