[
  {
    "pack": "oj-c",
    "id": "oj-c.MenuButton",
    "name": "MenuButton",
    "memberof": "oj-c",
    "longname": "oj-c.MenuButton",
    "kind": "class",
    "classdesc": "<h3 id=\"MenuButtonOverview-section\">\n  JET Menu Button\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#buttonOverview-section\"></a>\n</h3>\n\n<p>Description: A menu button launches a menu when clicked.\n\n<pre class=\"prettyprint\"><code>&lt;oj-c-menu-button label=\"Copy\" items=\"[[items]]\">\n&lt;/oj-c-menu-button>\n</code></pre>\n\n<h3 id=\"touch-section\">\n  Touch End User Information\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#touch-section\"></a>\n</h3>\n\n<h3 id=\"keyboard-section\">\n  Keyboard End User Information\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#keyboard-section\"></a>\n</h3>\n\n<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Key</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Menu Button</td>\n      <td><kbd>Enter</kbd> or <kbd>Space</kbd> or <kbd>Down Arrow</kbd></td>\n      <td>Invoke the Button menu.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"a11y-section\">\n  Accessibility\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#a11y-section\"></a>\n</h3>\n\n<p>For accessibility, the label and suffix are used as the accessible aria label.  This is required\nas persistent menu buttons or suffixes modify the label depending on the last menu item selection.\n\n<p>Disabled content: JET supports an accessible luminosity contrast ratio,\nas specified in <a href=\"http://www.w3.org/TR/WCAG20/#visual-audio-contrast-contrast\">WCAG 2.0 - Section 1.4.3 \"Contrast\"</a>,\nin the themes that are accessible.  (See the \"Theming\" chapter of the JET Developer Guide for more information on which\nthemes are accessible.)  Note that Section 1.4.3 says that text or images of text that are part of an inactive user\ninterface component have no contrast requirement.  Because disabled content may not meet the minimum contrast ratio\nrequired of enabled content, it cannot be used to convey meaningful information.<p>",
    "scope": "static",
    "tagWithoutBrackets": "oj-c-menu-button",
    "tagWithBrackets": "<oj-c-menu-button>",
    "domInterface": "CMenuButtonElement",
    "ojPageTitle": "&lt;oj-c-menu-button>",
    "ojcomponent": true,
    "isvcomponent": true,
    "camelCaseName": "MenuButton",
    "ojPageTitlePrefix": "Element: ",
    "ojtsvcomponent": true,
    "tstype": {
      "target": "Type",
      "value": "interface CMenuButtonElement extends JetElement<MenuButtonElementSettableProperties>"
    },
    "ojsignature": [
      {
        "target": "Type",
        "value": "interface CMenuButtonElement extends JetElement<MenuButtonElementSettableProperties>"
      }
    ],
    "since": "16.0.0",
    "tsdeprecated": [
      {
        "type": "supersedes",
        "since": "16.0.0",
        "value": [
          "oj-menu-button",
          "oj-menu-select-many"
        ]
      }
    ],
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "ojmodule": "menu-button"
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#label",
    "name": "label",
    "kind": "member",
    "longname": "oj-c.MenuButton#label",
    "optional": false,
    "scope": "instance",
    "description": "Text to show in the button.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "defaultvalue": "\"\"",
    "type": {
      "names": [
        "string"
      ]
    }
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#suffix",
    "name": "suffix",
    "kind": "member",
    "longname": "oj-c.MenuButton#suffix",
    "optional": true,
    "scope": "instance",
    "description": "Suffix appended to menu label to indicate last selection.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "type": {
      "names": [
        "string"
      ]
    }
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#tooltip",
    "name": "tooltip",
    "kind": "member",
    "longname": "oj-c.MenuButton#tooltip",
    "optional": true,
    "scope": "instance",
    "description": "Text to show in the tooltip. This overrides the default tooltip that renders the label when in icon mode.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "type": {
      "names": [
        "string"
      ]
    }
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#items",
    "name": "items",
    "kind": "member",
    "longname": "oj-c.MenuButton#items",
    "optional": true,
    "scope": "instance",
    "description": "Items describe the menu items rendered by the menu button.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "defaultvalue": "[]",
    "type": {
      "names": [
        "Array<object>"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "Array<oj-c.MenuButton.MenuSeparator|oj-c.MenuButton.MenuItem|oj-c.MenuButton.MenuSubMenu|oj-c.MenuButton.MenuSelectSingle|oj-c.MenuButton.MenuSelectMultiple>",
        "jsdocOverride": true
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#selection",
    "name": "selection",
    "kind": "member",
    "longname": "oj-c.MenuButton#selection",
    "optional": true,
    "scope": "instance",
    "ojwriteback": true,
    "description": "An array containing key/value objects for menu selection groups.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "type": {
      "names": [
        "object"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "Readonly<Record<string, MenuSelection>>",
        "jsdocOverride": true
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#display",
    "name": "display",
    "kind": "member",
    "longname": "oj-c.MenuButton#display",
    "optional": true,
    "scope": "instance",
    "description": "Display just the label, the icons, or all. Label is used as tooltip and should be set in all cases.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "ojvalues": [
      {
        "name": "all",
        "description": "Display both the label and icons.",
        "displayName": "All",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "icons",
        "description": "Display only the icons.",
        "displayName": "Icons",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "label",
        "description": "Display only the text label.",
        "displayName": "label",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "\"all\"",
    "type": {
      "names": [
        "\"all\"",
        "\"label\"",
        "\"icons\""
      ]
    }
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#disabled",
    "name": "disabled",
    "kind": "member",
    "longname": "oj-c.MenuButton#disabled",
    "optional": true,
    "scope": "instance",
    "description": "Specifies that the button element should be disabled.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "defaultvalue": false,
    "type": {
      "names": [
        "boolean"
      ]
    }
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#size",
    "name": "size",
    "kind": "member",
    "longname": "oj-c.MenuButton#size",
    "optional": true,
    "scope": "instance",
    "description": "Size of button",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "ojvalues": [
      {
        "name": "xs",
        "description": "Display an extra small button.  Only supported for component developers with ghost chroming in icon display mode.",
        "displayName": "Extra Small",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "sm",
        "description": "Display a small button.",
        "displayName": "Small",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "md",
        "description": "Display a default size button.",
        "displayName": "Medium",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "lg",
        "description": "Display a large button.",
        "displayName": "Large",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "\"md\"",
    "type": {
      "names": [
        "\"xs\"",
        "\"sm\"",
        "\"md\"",
        "\"lg\""
      ]
    }
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#width",
    "name": "width",
    "kind": "member",
    "longname": "oj-c.MenuButton#width",
    "optional": true,
    "scope": "instance",
    "description": "Specifies that the button style width",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "type": {
      "names": [
        "number|string"
      ]
    }
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#chroming",
    "name": "chroming",
    "kind": "member",
    "longname": "oj-c.MenuButton#chroming",
    "optional": true,
    "scope": "instance",
    "description": "Indicates in what states the button has chromings in background and border.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "ojvalues": [
      {
        "name": "ghost",
        "description": "Ghost buttons are the least prominent variation. Ghost buttons are useful for performing low-priority tasks, such as manipulating the UI.",
        "displayName": "Ghost",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "borderless",
        "description": "Borderless buttons are a more prominent variation. Borderless buttons are useful for supplemental actions that require minimal emphasis.",
        "displayName": "Borderless",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "outlined",
        "description": "Outlined buttons are salient, but lighter weight than solid buttons. Outlined buttons are useful for secondary actions.",
        "displayName": "Outlined",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "solid",
        "description": "Solid buttons stand out, and direct the user's attention to the most important actions in the UI.",
        "displayName": "Solid",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "\"outlined\"",
    "type": {
      "names": [
        "\"solid\"",
        "\"ghost\"",
        "\"borderless\"",
        "\"outlined\""
      ]
    }
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#focus",
    "name": "focus",
    "kind": "function",
    "longname": "oj-c.MenuButton#focus",
    "description": "",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#blur",
    "name": "blur",
    "kind": "function",
    "longname": "oj-c.MenuButton#blur",
    "description": "",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#click",
    "name": "click",
    "kind": "function",
    "longname": "oj-c.MenuButton#click",
    "description": "",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#setProperty",
    "name": "setProperty",
    "kind": "function",
    "longname": "oj-c.MenuButton#setProperty",
    "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a corresponding event.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "params": [
      {
        "name": "property",
        "description": "The property name to set. Supports dot notation for subproperty access.",
        "type": "string"
      },
      {
        "name": "value",
        "description": "The new value to set the property to.",
        "type": "any"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#getProperty",
    "name": "getProperty",
    "kind": "function",
    "longname": "oj-c.MenuButton#getProperty",
    "description": "Retrieves the value of a property or a subproperty.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "params": [
      {
        "name": "property",
        "description": "The property name to get. Supports dot notation for subproperty access.",
        "type": "string"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "any"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#setProperties",
    "name": "setProperties",
    "kind": "function",
    "longname": "oj-c.MenuButton#setProperties",
    "description": "Performs a batch set of properties.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "params": [
      {
        "name": "properties",
        "description": "An object containing the property and value pairs to set.",
        "type": "object"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#event:ojMenuAction",
    "name": "ojMenuAction",
    "kind": "event",
    "longname": "oj-c.MenuButton#event:ojMenuAction",
    "description": "Triggered when a menu item is clicked, whether by keyboard, mouse, or touch events. Detail indicates which menu item was clicked.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "properties": [
      {
        "name": "key",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#event:ojMenuSelection",
    "name": "ojMenuSelection",
    "kind": "event",
    "longname": "oj-c.MenuButton#event:ojMenuSelection",
    "description": "Triggered when a menu selection group item is clicked, whether by keyboard, mouse, or touch events. Detail indicates new selection value for group.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "properties": [
      {
        "name": "value",
        "optional": false,
        "type": {
          "names": [
            "any"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "T",
            "jsdocOverride": true,
            "for": "value"
          }
        ]
      },
      {
        "name": "menuSelectionGroupKey",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#startIcon",
    "name": "startIcon",
    "kind": "member",
    "longname": "oj-c.MenuButton#startIcon",
    "description": "The startIcon slot is the button's start icon. The oj-c-menu-button element accepts DOM nodes as children with the startIcon slot.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "ojchild": false,
    "ojslot": true
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton#endIcon",
    "name": "endIcon",
    "kind": "member",
    "longname": "oj-c.MenuButton#endIcon",
    "description": "The endIcon slot is the button's end icon. The oj-c-menu-button element accepts DOM nodes as children with the endIcon slot.",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "scope": "instance",
    "ojchild": false,
    "ojslot": true
  },
  {
    "id": "oj-c.MenuButton.touchDoc",
    "name": "touchDoc",
    "kind": "member",
    "longname": "oj-c.MenuButton.touchDoc",
    "description": "<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Key</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Menu Button</td>\n      <td><kbd>Enter</kbd> or <kbd>Space</kbd> or <kbd>Down Arrow</kbd></td>\n      <td>Invoke the Button menu.</td>\n    </tr>\n  </tbody>\n</table>",
    "memberof": "oj-c.MenuButton",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "ojfragment": true
  },
  {
    "id": "oj-c.MenuButton.keyboardDoc",
    "name": "keyboardDoc",
    "kind": "member",
    "longname": "oj-c.MenuButton.keyboardDoc",
    "description": "<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Key</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Menu Button</td>\n      <td><kbd>Enter</kbd> or <kbd>Space</kbd> or <kbd>Down Arrow</kbd></td>\n      <td>Invoke the Button menu.</td>\n    </tr>\n  </tbody>\n</table>",
    "memberof": "oj-c.MenuButton",
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "ojfragment": true
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton.MenuSeparator",
    "name": "MenuSeparator",
    "kind": "typedef",
    "longname": "oj-c.MenuButton.MenuSeparator",
    "scope": "static",
    "description": "Specifies a menu separator:  <code>{ type: \"separator\" }</code>.",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "properties": [
      {
        "name": "type",
        "description": "Specifies a separator menu item.",
        "optional": false,
        "type": {
          "names": [
            "\"separator\"",
            "\"divider\""
          ]
        },
        "tsdeprecated": [
          {
            "type": "deprecated",
            "since": "17.0.0",
            "target": "propertyValue",
            "value": [
              "divider"
            ],
            "description": "Use 'separator' instead."
          }
        ]
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton.MenuItem",
    "name": "MenuItem",
    "kind": "typedef",
    "longname": "oj-c.MenuButton.MenuItem",
    "scope": "static",
    "description": "Specifies a standard menu item.",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "properties": [
      {
        "name": "type",
        "description": "Specifies a standard menu item.",
        "optional": true,
        "type": {
          "names": [
            "\"item\""
          ]
        }
      },
      {
        "name": "label",
        "description": "The menu item label.",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "key",
        "description": "A unique key associated with the menu item.",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "disabled",
        "description": "Specifies if the menu item is disabled (enabled by default).",
        "optional": true,
        "type": {
          "names": [
            "boolean"
          ]
        }
      },
      {
        "name": "onAction",
        "description": "Optional callback function associated with the menu item.",
        "optional": true,
        "type": {
          "names": [
            "function"
          ]
        }
      },
      {
        "name": "startIcon",
        "description": "Optional icon to render at the start of the menu item.",
        "optional": true,
        "type": {
          "names": [
            "object"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "{ type?: 'class'; class: string; }|{ type: 'img'; src: string; }",
            "jsdocOverride": true,
            "for": "startIcon"
          }
        ]
      },
      {
        "name": "endIcon",
        "description": "Optional icon to render at the end of the menu item.",
        "optional": true,
        "type": {
          "names": [
            "object"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "{ type?: 'class'; class: string; }|{ type: 'img'; src: string; }",
            "jsdocOverride": true,
            "for": "endIcon"
          }
        ]
      },
      {
        "name": "variant",
        "description": "Specifies the menu item behavior.",
        "optional": true,
        "type": {
          "names": [
            "\"standard\"",
            "\"destructive\""
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton.MenuSubMenu",
    "name": "MenuSubMenu",
    "kind": "typedef",
    "longname": "oj-c.MenuButton.MenuSubMenu",
    "scope": "static",
    "description": "Specifies a menu item representing a submenu.",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "properties": [
      {
        "name": "key",
        "description": "A unique key associated with the submenu menu item.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "type",
        "description": "Specifies a submenu menu item.",
        "optional": false,
        "type": {
          "names": [
            "\"submenu\""
          ]
        }
      },
      {
        "name": "label",
        "description": "The submenu label.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "disabled",
        "description": "Specifies if the submenu is disabled (enabled by default).",
        "optional": true,
        "type": {
          "names": [
            "boolean"
          ]
        }
      },
      {
        "name": "startIcon",
        "description": "Optional icon to render at the start of the submenu.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "items",
        "description": "Specifies the array of menu items that make up the submenu.",
        "optional": true,
        "type": {
          "names": [
            "Array<object>"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "Array<oj-c.MenuButton.MenuSeparator|oj-c.MenuButton.MenuItem|oj-c.MenuButton.MenuSubMenu|oj-c.MenuButton.MenuSelectSingle|oj-c.MenuButton.MenuSelectMultiple>",
            "jsdocOverride": true,
            "for": "items"
          }
        ]
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton.MenuSelectItem",
    "name": "MenuSelectItem",
    "kind": "typedef",
    "longname": "oj-c.MenuButton.MenuSelectItem",
    "scope": "static",
    "description": "Specifies a selectable item in a menu item.",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "properties": [
      {
        "name": "label",
        "description": "The selectable item label.",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "disabled",
        "description": "Specifies if the selectable item is disabled (enabled by default).",
        "optional": true,
        "type": {
          "names": [
            "boolean"
          ]
        }
      },
      {
        "name": "endIcon",
        "description": "Optional icon to render at the end of the selectable item.",
        "optional": true,
        "type": {
          "names": [
            "object"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "{ type?: 'class'; class: string; }|{ type: 'img'; src: string; }",
            "jsdocOverride": true,
            "for": "endIcon"
          }
        ]
      },
      {
        "name": "value",
        "description": "The value associated with the selectable item.",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton.MenuSelectSingle",
    "name": "MenuSelectSingle",
    "kind": "typedef",
    "longname": "oj-c.MenuButton.MenuSelectSingle",
    "scope": "static",
    "description": "Specifies a menu item representing a select single.",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "properties": [
      {
        "name": "type",
        "description": "Specifies a select single menu item.",
        "optional": false,
        "type": {
          "names": [
            "\"selectsingle\""
          ]
        }
      },
      {
        "name": "key",
        "description": "A unique key associated with the select single.",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "items",
        "description": "Specifies the array of select items that make up the select single.",
        "optional": true,
        "type": {
          "names": [
            "Array<object>"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "Array<oj-c.MenuButton.MenuSelectItem>",
            "jsdocOverride": true,
            "for": "items"
          }
        ]
      }
    ]
  },
  {
    "memberof": "oj-c.MenuButton",
    "id": "oj-c.MenuButton.MenuSelectMultiple",
    "name": "MenuSelectMultiple",
    "kind": "typedef",
    "longname": "oj-c.MenuButton.MenuSelectMultiple",
    "scope": "static",
    "description": "Specifies a menu item representing a select multiple.",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "menu-button.tsx",
      "path": "web/components/oj-c/menu-button"
    },
    "properties": [
      {
        "name": "type",
        "description": "Specifies a select multiple menu item.",
        "optional": false,
        "type": {
          "names": [
            "\"selectmultiple\""
          ]
        }
      },
      {
        "name": "key",
        "description": "A unique key associated with the select multiple.",
        "optional": false,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "items",
        "description": "Specifies the array of select items that make up the select multiple.",
        "optional": true,
        "type": {
          "names": [
            "Array<object>"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "Array<oj-c.MenuButton.MenuSelectItem>",
            "jsdocOverride": true,
            "for": "items"
          }
        ]
      }
    ]
  }
]