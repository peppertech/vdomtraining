[
  {
    "pack": "oj-c",
    "id": "oj-c.MeterCircle",
    "name": "MeterCircle",
    "memberof": "oj-c",
    "longname": "oj-c.MeterCircle",
    "kind": "class",
    "classdesc": "<h3 id=\"meterCircleOverview-section\">\n  JET meter circle\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#meterCircleOverview-section\"></a>\n</h3>\nA meter circle displays information graphically in a circular bar, highlighting a specific metric value's progress in relation to its min, max and thresholds.\n<pre class=\"prettyprint\"><code>&lt;oj-c-meter-circle value='4'>&lt;/oj-c-meter-circle></code></pre>\n<h3 id=\"a11y-section\">\n  Accessibility\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#a11y-section\"></a>\n</h3>\n<p>\nThe application is strongly encouraged, even though it is not required, to populate the aria-label attribute on the element with meaningful descriptors as\nthe oj-c-meter-circle element does not provide a default descriptor.\n</p>\n<p>\nIf an application is using center content with visible text, thresholds, or reference lines, they need to include the information for screender readers using the following methods:\n <ul>\n  <li>aria-describedby</li>\n  <li>aria-labelledby</li>\n  <li>aria-label</li>\n  <li>datatip</li>\n </ul>\n</p>\n<p>\nIf you are using indicatorColor, applications are responsible for making sure that the color meets the\n<a href=\"https://www.w3.org/TR/WCAG21/#contrast-minimum\">minimum contrast ratio</a>.\n</p>\n\n<h3 id=\"keyboardSection\">\n  Keyboard\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#keyboardSection\"></a>\n</h3>\n\n<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><kbd>Enter</kbd></td>\n      <td>Submit the current value of the meter circle.</td>\n    </tr>\n    <tr>\n      <td><kbd>Tab</kbd></td>\n      <td>Move focus to next element and submit the current value of the meter circle.</td>\n    </tr>\n    <tr>\n      <td><kbd>Shift + Tab</kbd></td>\n      <td>Move focus to previous element.</td>\n    </tr>\n    <tr>\n      <td><kbd>End</kbd></td>\n      <td>Increase the meter circle's transient value to max value. Value is set after using <kbd>Enter</kbd> or <kbd>Tab</kbd> to submit.</td>\n    </tr>\n    <tr>\n      <td><kbd>Home</kbd></td>\n      <td>Decrease the meter circle's transient value to zero. Value is set after using <kbd>Enter</kbd> or <kbd>Tab</kbd> to submit.</td>\n    </tr>\n    <tr>\n      <td><kbd>UpArrow</kbd></td>\n      <td>Increase the meter circle's transient value. Value is set after using <kbd>Enter</kbd> or <kbd>Tab</kbd> to submit.</td>\n    </tr>\n    <tr>\n      <td><kbd>DownArrow</kbd></td>\n      <td>Decrease the meter circle's transient value. Value is set after using <kbd>Enter</kbd> or <kbd>Tab</kbd> to submit.</td>\n    </tr>\n    <tr>\n      <td><kbd>LeftArrow</kbd></td>\n      <td>Decrease the meter circle's transient value in left-to-right locales. Increase the meter circle's transient value in right-to-left locales. Value is set after using <kbd>Enter</kbd> or <kbd>Tab</kbd> to submit.</td>\n    </tr>\n    <tr>\n      <td><kbd>RightArrow</kbd></td>\n      <td>Increase the meter circle's transient value in left-to-right locales. Decrease the meter circle's transient value in right-to-left locales. Value is set after using <kbd>Enter</kbd> or <kbd>Tab</kbd> to submit.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"touch-section\">\nTouch End User Information\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#touch-section\"></a>\n</h3>\n\n<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Gesture</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><kbd>Drag</kbd></td>\n      <td>Value change when <code class=\"prettyprint\">readonly</code> is <code class=\"prettyprint\">false</code>.</td>\n    </tr>\n  </tbody>\n</table>",
    "scope": "static",
    "tagWithoutBrackets": "oj-c-meter-circle",
    "tagWithBrackets": "<oj-c-meter-circle>",
    "domInterface": "CMeterCircleElement",
    "ojPageTitle": "&lt;oj-c-meter-circle>",
    "ojcomponent": true,
    "isvcomponent": true,
    "camelCaseName": "MeterCircle",
    "ojPageTitlePrefix": "Element: ",
    "ojtsvcomponent": true,
    "tstype": {
      "target": "Type",
      "value": "interface CMeterCircleElement extends JetElement<MeterCircleElementSettableProperties>"
    },
    "ojsignature": [
      {
        "target": "Type",
        "value": "interface CMeterCircleElement extends JetElement<MeterCircleElementSettableProperties>"
      }
    ],
    "since": "14.0.0",
    "tsdeprecated": [
      {
        "type": "supersedes",
        "since": "15.0.0",
        "value": [
          "oj-status-meter-gauge"
        ]
      }
    ],
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "ojmodule": "meter-circle"
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#max",
    "name": "max",
    "kind": "member",
    "longname": "oj-c.MeterCircle#max",
    "optional": true,
    "scope": "instance",
    "description": "Integer value specifying the maximum value of the meter circle.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "defaultvalue": 100,
    "type": {
      "names": [
        "number"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#min",
    "name": "min",
    "kind": "member",
    "longname": "oj-c.MeterCircle#min",
    "optional": true,
    "scope": "instance",
    "description": "Integer value specifying the minimum value of the meter circle.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "defaultvalue": 0,
    "type": {
      "names": [
        "number"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#readonly",
    "name": "readonly",
    "kind": "member",
    "longname": "oj-c.MeterCircle#readonly",
    "optional": true,
    "scope": "instance",
    "description": "Defines whether the value of the meter circle can be changed by the end user.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "defaultvalue": false,
    "type": {
      "names": [
        "boolean"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#value",
    "name": "value",
    "kind": "member",
    "longname": "oj-c.MeterCircle#value",
    "optional": true,
    "scope": "instance",
    "ojwriteback": true,
    "description": "The value of the meter circle.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "defaultvalue": 0,
    "type": {
      "names": [
        "number|null"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#step",
    "name": "step",
    "kind": "member",
    "longname": "oj-c.MeterCircle#step",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the increment by which values can be changed by the end user when readonly is false. The step must be a positive value that is smaller than the difference between the min and max.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "defaultvalue": 1,
    "type": {
      "names": [
        "number"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#color",
    "name": "color",
    "kind": "member",
    "longname": "oj-c.MeterCircle#color",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the color of the meter circle indicator. Only applies when thresholdDisplay is not set to indicator.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "tsdeprecated": [],
    "type": {
      "names": [
        "string"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#indicatorSize",
    "name": "indicatorSize",
    "kind": "member",
    "longname": "oj-c.MeterCircle#indicatorSize",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the ratio of relative thickness of the indicator to the plot area.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "tsdeprecated": [],
    "defaultvalue": 1,
    "type": {
      "names": [
        "number"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#innerRadius",
    "name": "innerRadius",
    "kind": "member",
    "longname": "oj-c.MeterCircle#innerRadius",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the inner radius, defined by the ratio of the distance from the center of the gauge to the innermost edge of the indicator to plot area. Valid values are ratios from 0 to 1. Depends on the size of the gauge and theme.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "tsdeprecated": [],
    "type": {
      "names": [
        "number"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#plotArea",
    "name": "plotArea",
    "kind": "member",
    "longname": "oj-c.MeterCircle#plotArea",
    "optional": false,
    "scope": "instance",
    "description": "Specifies the plot area of the meter circle.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "type": {
      "names": [
        "object"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "oj-c.MeterCircle.PlotArea",
        "jsdocOverride": true
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#angleExtent",
    "name": "angleExtent",
    "kind": "member",
    "longname": "oj-c.MeterCircle#angleExtent",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the angle extent of a meter circle. Value should be provided in degrees.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "defaultvalue": 360,
    "type": {
      "names": [
        "number"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#startAngle",
    "name": "startAngle",
    "kind": "member",
    "longname": "oj-c.MeterCircle#startAngle",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the start angle of the plot area relative to the positive x axis. Value should be provided in degrees.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "defaultvalue": 90,
    "type": {
      "names": [
        "number"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#referenceLines",
    "name": "referenceLines",
    "kind": "member",
    "longname": "oj-c.MeterCircle#referenceLines",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the array of objects defining the reference lines for the meter circle.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "type": {
      "names": [
        "Array<object>"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "Array<oj-c.MeterCircle.ReferenceLine>",
        "jsdocOverride": true
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#thresholdDisplay",
    "name": "thresholdDisplay",
    "kind": "member",
    "longname": "oj-c.MeterCircle#thresholdDisplay",
    "optional": true,
    "scope": "instance",
    "description": "Controls whether the current threshold is displayed on the indicator, in the plot area, or if all the thresholds are displayed in the plot area.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "defaultvalue": "\"indicator\"",
    "type": {
      "names": [
        "\"all\"",
        "\"plotArea\"",
        "\"indicator\""
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#thresholds",
    "name": "thresholds",
    "kind": "member",
    "longname": "oj-c.MeterCircle#thresholds",
    "optional": true,
    "scope": "instance",
    "description": "An array of objects defining the thresholds for the meter circle.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "type": {
      "names": [
        "Array<object>"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "Array<oj-c.MeterCircle.Threshold>",
        "jsdocOverride": true
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#describedBy",
    "name": "describedBy",
    "kind": "member",
    "longname": "oj-c.MeterCircle#describedBy",
    "optional": true,
    "scope": "instance",
    "description": "Used to establish a relationship between this component and another element.\nA common use is to tie a label, which can be a text in a div or some other HTML element, and the oj-c-meter-circle together for accessibility.\nThe oj-label element has a label-id, which is used by the described-by attribute to tie the two components together to facilitate correct screen reader behavior.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "type": {
      "names": [
        "string|null"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#labelledBy",
    "name": "labelledBy",
    "kind": "member",
    "longname": "oj-c.MeterCircle#labelledBy",
    "optional": true,
    "scope": "instance",
    "description": "Used to establish a relationship between this component and another element.\nA common use is to tie a label, which can be a text in a div or some other HTML element, and the oj-c-meter-circle together for accessibility.\nThe oj-label element has a label-id, which is used by the labelled-by attribute to tie the two components together to facilitate correct screen reader behavior.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "type": {
      "names": [
        "string|null"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#size",
    "name": "size",
    "kind": "member",
    "longname": "oj-c.MeterCircle#size",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the size of the meter var.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "ojvalues": [
      {
        "name": "sm",
        "description": "small Meter circle",
        "displayName": "Small",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "md",
        "description": "medium Meter circle (default, if unspecified)",
        "displayName": "Medium",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "lg",
        "description": "large Meter circle",
        "displayName": "Large",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "fit",
        "description": "Meter Circle that fills available width and height.",
        "displayName": "Fit",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "\"md\"",
    "type": {
      "names": [
        "\"sm\"",
        "\"md\"",
        "\"lg\"",
        "\"fit\""
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#datatip",
    "name": "datatip",
    "kind": "member",
    "longname": "oj-c.MeterCircle#datatip",
    "optional": true,
    "scope": "instance",
    "description": "The function that returns a custom datatip string for given value of meter circle. The function is called with DatatipContext as context. If datatip is undefined,\nmeter circle will use the default datatip. If the returned value of the function is null, no datatip is shown.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "type": {
      "names": [
        "function"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "(context: oj-c.MeterCircle.DatatipContext) => string | null",
        "jsdocOverride": true
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#transientValue",
    "name": "transientValue",
    "kind": "member",
    "longname": "oj-c.MeterCircle#transientValue",
    "optional": true,
    "scope": "instance",
    "ojwriteback": true,
    "readonly": true,
    "description": "A read-only property for retrieving the transient value from the meter circle. It is triggered when dragging over the meter circle.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "type": {
      "names": [
        "number"
      ]
    }
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#setProperty",
    "name": "setProperty",
    "kind": "function",
    "longname": "oj-c.MeterCircle#setProperty",
    "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a corresponding event.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "scope": "instance",
    "params": [
      {
        "name": "property",
        "description": "The property name to set. Supports dot notation for subproperty access.",
        "type": "string"
      },
      {
        "name": "value",
        "description": "The new value to set the property to.",
        "type": "any"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#getProperty",
    "name": "getProperty",
    "kind": "function",
    "longname": "oj-c.MeterCircle#getProperty",
    "description": "Retrieves the value of a property or a subproperty.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "scope": "instance",
    "params": [
      {
        "name": "property",
        "description": "The property name to get. Supports dot notation for subproperty access.",
        "type": "string"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "any"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#setProperties",
    "name": "setProperties",
    "kind": "function",
    "longname": "oj-c.MeterCircle#setProperties",
    "description": "Performs a batch set of properties.",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "scope": "instance",
    "params": [
      {
        "name": "properties",
        "description": "An object containing the property and value pairs to set.",
        "type": "object"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle#centerTemplate",
    "name": "centerTemplate",
    "kind": "member",
    "longname": "oj-c.MeterCircle#centerTemplate",
    "description": "The centerTemplate slot is used to specify center content. When the template is executed, the component's binding context is extended with the following properties:",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "scope": "instance",
    "ojchild": false,
    "ojslot": true,
    "properties": [
      {
        "name": "innerBounds",
        "description": "Object containing (x, y, width, height) of the rectangle inscribed in the center area. The inner bounds are useful for inserting content that is guaranteed to fit within the center area. If the angleExtent isn't 360 then we will provide the clipped square.",
        "optional": false,
        "type": {
          "names": [
            "object"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "oj-c.MeterCircle.Bounds",
            "jsdocOverride": true,
            "for": "innerBounds"
          }
        ]
      },
      {
        "name": "outerBounds",
        "description": "Object containing (x, y, width, height) of the rectangle circumscribing the center area. The outer bounds are useful for creating background for the entire center area when used with a CSS border-radius. If the angleExtent isn't 360 then we will provide the clipped square.",
        "optional": false,
        "type": {
          "names": [
            "object"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "oj-c.MeterCircle.Bounds",
            "jsdocOverride": true,
            "for": "outerBounds"
          }
        ]
      },
      {
        "name": "value",
        "description": "The current value of the meter circle.",
        "optional": false,
        "type": {
          "names": [
            "number|null"
          ]
        }
      }
    ]
  },
  {
    "id": "oj-c.MeterCircle.touchDoc",
    "name": "touchDoc",
    "kind": "member",
    "longname": "oj-c.MeterCircle.touchDoc",
    "description": "<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Gesture</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><kbd>Drag</kbd></td>\n      <td>Value change when <code class=\"prettyprint\">readonly</code> is <code class=\"prettyprint\">false</code>.</td>\n    </tr>\n  </tbody>\n</table>",
    "memberof": "oj-c.MeterCircle",
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "ojfragment": true
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle.PlotArea",
    "name": "PlotArea",
    "kind": "typedef",
    "longname": "oj-c.MeterCircle.PlotArea",
    "scope": "static",
    "description": "",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "properties": [
      {
        "name": "color",
        "description": "The color of the plot area.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "rendered",
        "description": " Defines if the plot area is to be rendered. The default value is on.",
        "optional": true,
        "type": {
          "names": [
            "\"off\"",
            "\"on\""
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle.VisTextStyle",
    "name": "VisTextStyle",
    "kind": "typedef",
    "longname": "oj-c.MeterCircle.VisTextStyle",
    "scope": "static",
    "description": "",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "properties": [
      {
        "name": "color",
        "description": "The color of the text.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        },
        "ojvalues": [
          {
            "name": "transparent",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "inherit",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "initial",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "-moz-initial",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "revert",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "revert-layer",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "unset",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "aliceblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "antiquewhite",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "aqua",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "aquamarine",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "azure",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "beige",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "bisque",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "black",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "blanchedalmond",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "blue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "blueviolet",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "brown",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "burlywood",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "cadetblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "chartreuse",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "chocolate",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "coral",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "cornflowerblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "cornsilk",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "crimson",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "cyan",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkcyan",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkgoldenrod",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkgray",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkgreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkgrey",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkkhaki",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkmagenta",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkolivegreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkorange",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkorchid",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkred",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darksalmon",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkseagreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkslateblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkslategray",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkslategrey",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkturquoise",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "darkviolet",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "deeppink",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "deepskyblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "dimgray",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "dimgrey",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "dodgerblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "firebrick",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "floralwhite",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "forestgreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "fuchsia",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "gainsboro",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ghostwhite",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "gold",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "goldenrod",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "gray",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "green",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "greenyellow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "grey",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "honeydew",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "hotpink",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "indianred",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "indigo",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ivory",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "khaki",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lavender",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lavenderblush",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lawngreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lemonchiffon",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightcoral",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightcyan",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightgoldenrodyellow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightgray",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightgreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightgrey",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightpink",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightsalmon",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightseagreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightskyblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightslategray",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightslategrey",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightsteelblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lightyellow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "lime",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "limegreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "linen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "magenta",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "maroon",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumaquamarine",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumorchid",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumpurple",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumseagreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumslateblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumspringgreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumturquoise",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mediumvioletred",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "midnightblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mintcream",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "mistyrose",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "moccasin",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "navajowhite",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "navy",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "oldlace",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "olive",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "olivedrab",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "orange",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "orangered",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "orchid",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "palegoldenrod",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "palegreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "paleturquoise",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "palevioletred",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "papayawhip",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "peachpuff",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "peru",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "pink",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "plum",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "powderblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "purple",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "rebeccapurple",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "red",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "rosybrown",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "royalblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "saddlebrown",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "salmon",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "sandybrown",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "seagreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "seashell",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "sienna",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "silver",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "skyblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "slateblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "slategray",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "slategrey",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "snow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "springgreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "steelblue",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "tan",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "teal",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "thistle",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "tomato",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "turquoise",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "violet",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "wheat",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "white",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "whitesmoke",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "yellow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "yellowgreen",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ActiveBorder",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ActiveCaption",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "AppWorkspace",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "Background",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ButtonFace",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ButtonHighlight",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ButtonShadow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ButtonText",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "CaptionText",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "GrayText",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "Highlight",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "HighlightText",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "InactiveBorder",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "InactiveCaption",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "InactiveCaptionText",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "InfoBackground",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "InfoText",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "Menu",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "MenuText",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "Scrollbar",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ThreeDDarkShadow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ThreeDFace",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ThreeDHighlight",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ThreeDLightShadow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "ThreeDShadow",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "Window",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "WindowFrame",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "WindowText",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "currentcolor",
            "type": {
              "names": [
                "string"
              ]
            }
          }
        ]
      },
      {
        "name": "fontSize",
        "description": "The font size of the text.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "fontWeight",
        "description": "The font weight of the text.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "fontStyle",
        "description": "The font style of the text.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "whiteSpace",
        "description": "Whether the text wrap is enabled or not.",
        "optional": true,
        "type": {
          "names": [
            "\"normal\"",
            "\"nowrap\""
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle.ReferenceLine",
    "name": "ReferenceLine",
    "kind": "typedef",
    "longname": "oj-c.MeterCircle.ReferenceLine",
    "scope": "static",
    "description": "",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "properties": [
      {
        "name": "color",
        "description": "<p>The color of the reference line.</p>\n<p>In addition to standard CSS color values, special enumerated values 'danger', 'warning',\nand 'success' are also supported. These special values are mapped to corresponding CSS color values\nbased upon the current theme.</p>",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        },
        "ojvalues": [
          {
            "name": "danger",
            "description": "Maps to theme-specific color indicating a danger condition",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "warning",
            "description": "Maps to theme-specific color indicating a warning condition",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "success",
            "description": "Maps to theme-specific color indicating a success condition",
            "type": {
              "names": [
                "string"
              ]
            }
          }
        ]
      },
      {
        "name": "value",
        "description": "The value of the reference line.",
        "optional": false,
        "type": {
          "names": [
            "number"
          ]
        }
      },
      {
        "name": "label",
        "description": "The label for the reference line.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "style",
        "description": "The style of the label for the reference line.",
        "optional": true,
        "type": {
          "names": [
            "object"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "Omit<oj-c.MeterCircle.VisTextStyle, \"whiteSpace\">",
            "jsdocOverride": true,
            "for": "style"
          }
        ]
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle.Threshold",
    "name": "Threshold",
    "kind": "typedef",
    "longname": "oj-c.MeterCircle.Threshold",
    "scope": "static",
    "description": "",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "properties": [
      {
        "name": "accessibleLabel",
        "description": "A label for the threshold used for accessibility purposes.",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "color",
        "description": "<p>The color of the threshold.</p>\n<p>In addition to standard CSS color values, special enumerated values 'danger', 'warning',\nand 'success' are also supported. These special values are mapped to corresponding CSS color values\nbased upon the current theme.</p>",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        },
        "ojvalues": [
          {
            "name": "danger",
            "description": "Maps to theme-specific color indicating a danger condition",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "warning",
            "description": "Maps to theme-specific color indicating a warning condition",
            "type": {
              "names": [
                "string"
              ]
            }
          },
          {
            "name": "success",
            "description": "Maps to theme-specific color indicating a success condition",
            "type": {
              "names": [
                "string"
              ]
            }
          }
        ]
      },
      {
        "name": "max",
        "description": "The maximum value of the threshold.",
        "optional": false,
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle.DatatipContext",
    "name": "DatatipContext",
    "kind": "typedef",
    "longname": "oj-c.MeterCircle.DatatipContext",
    "scope": "static",
    "description": "Context for datatip function.",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "properties": [
      {
        "name": "value",
        "description": "The current value of the meter circle.",
        "optional": false,
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.MeterCircle",
    "id": "oj-c.MeterCircle.Bounds",
    "name": "Bounds",
    "kind": "typedef",
    "longname": "oj-c.MeterCircle.Bounds",
    "scope": "static",
    "description": "",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "meter-circle.tsx",
      "path": "web/components/oj-c/meter-circle"
    },
    "properties": [
      {
        "name": "width",
        "description": "The width of the bounding rectangle.",
        "optional": false,
        "type": {
          "names": [
            "number"
          ]
        }
      },
      {
        "name": "height",
        "description": "The height of the bounding rectangle.",
        "optional": false,
        "type": {
          "names": [
            "number"
          ]
        }
      },
      {
        "name": "x",
        "description": "The x position of the bounding rectangle.",
        "optional": false,
        "type": {
          "names": [
            "number"
          ]
        }
      },
      {
        "name": "y",
        "description": "The y position of the bounding rectangle.",
        "optional": false,
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ]
  }
]