[
  {
    "pack": "oj-c",
    "id": "oj-c.FilePicker",
    "name": "FilePicker",
    "memberof": "oj-c",
    "longname": "oj-c.FilePicker",
    "kind": "class",
    "classdesc": "<h3 id=\"filePickerOverview-section\">\n  JET File Picker\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#filePickerOverview-section\"></a>\n</h3>\n<p>Description:</p>\n<p>By default the file picker shows a clickable dropzone for selecting files for upload. However, it can be replaced with any clickable element like a button. After the files are selected, the FilePicker fires a \"select\" event with the selected files. Application has to specify the listener in order to do the actual upload.  The types of files accepted are controlled by the accept attribute.  Additional custom validation can be done through the ojBeforeSelect event.</p>\n\n<pre class=\"prettyprint\"><code>&lt;oj-c-file-picker >&lt;/oj-c-file-picker></code></pre>\n\n\n<h3 id=\"touch-section\">\nTouch End User Information\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#touch-section\"></a>\n</h3>\n\n<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n     <th>Target</th>\n      <th>Gesture</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Clickable element</td>\n      <td><kbd>Tap</kbd></td>\n      <td>Launch the browser's file picker.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"keyboard-section\">\n  Keyboard End User Information\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#keyboard-section\"></a>\n</h3>\n\n<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Key</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Clickable element</td>\n      <td><kbd>Enter</kbd></td>\n      <td>Launch the browser's file picker.</td>\n    </tr>\n  </tbody>\n</table>",
    "scope": "static",
    "tagWithoutBrackets": "oj-c-file-picker",
    "tagWithBrackets": "<oj-c-file-picker>",
    "domInterface": "CFilePickerElement",
    "ojPageTitle": "&lt;oj-c-file-picker>",
    "ojcomponent": true,
    "isvcomponent": true,
    "camelCaseName": "FilePicker",
    "ojPageTitlePrefix": "Element: ",
    "ojtsvcomponent": true,
    "tstype": {
      "target": "Type",
      "value": "interface CFilePickerElement extends JetElement<FilePickerElementSettableProperties>"
    },
    "ojsignature": [
      {
        "target": "Type",
        "value": "interface CFilePickerElement extends JetElement<FilePickerElementSettableProperties>"
      }
    ],
    "since": "14.0.0",
    "tsdeprecated": [
      {
        "type": "supersedes",
        "since": "15.0.0",
        "value": [
          "oj-file-picker"
        ]
      }
    ],
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "ojmodule": "file-picker"
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#accept",
    "name": "accept",
    "kind": "member",
    "longname": "oj-c.FilePicker#accept",
    "optional": true,
    "scope": "instance",
    "description": "An array of strings of allowed MIME types or file extensions that can be uploaded; this is unlike the accept attribute of the html &lt;input> element that accepts a simple comma-delimited string. If not specified, accept all file types.\n<p>Note: If accept is specified, files with empty string type will be rejected if no match found in the \"accept\" value. Due to browser/OS differences, you may have to specify multiple values for the same value type. For example, for a CSV file, you might need to specify 'text/csv', '.csv', 'application/vnd.ms-excel', 'text/comma-separated-values' and others depending on your target browser/OS. </p>",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "type": {
      "names": [
        "Array<string>|null"
      ]
    }
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#capture",
    "name": "capture",
    "kind": "member",
    "longname": "oj-c.FilePicker#capture",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the preferred facing mode for the device's\n<a href=\"https://www.w3.org/TR/html-media-capture/#dom-htmlinputelement-capture\">media capture</a> mechanism;\nThis is most often used to provide direct camera access on mobile devices.  Note that the accept attribute must\nbe specified and have an associated capture control type (e.g.[\"image/*\"]) for the capture attribute to take effect.  Support may vary by browser.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "ojvalues": [
      {
        "name": "user",
        "description": "Specifies user-facing as the preferred mode",
        "displayName": "User",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "environment",
        "description": "Specifies environment-facing as the preferred mode",
        "displayName": "Environment",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "implementation",
        "description": "Specifies an implementation-specific default as the preferred facing mode",
        "displayName": "Implementation",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "none",
        "description": "No capture mechanism is used",
        "displayName": "None",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "none",
    "type": {
      "names": [
        "\"none\"",
        "\"environment\"",
        "\"user\"",
        "\"implementation\""
      ]
    }
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#disabled",
    "name": "disabled",
    "kind": "member",
    "longname": "oj-c.FilePicker#disabled",
    "optional": true,
    "scope": "instance",
    "description": "Disables the filepicker if set to <code class=\"prettyprint\">true</code>.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "defaultvalue": false,
    "type": {
      "names": [
        "boolean"
      ]
    }
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#primaryText",
    "name": "primaryText",
    "kind": "member",
    "longname": "oj-c.FilePicker#primaryText",
    "optional": true,
    "scope": "instance",
    "description": "The primary text for the default file picker.  It is either a string or a formatting function that returns the string to be displayed.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "type": {
      "names": [
        "string|function"
      ]
    }
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#secondaryText",
    "name": "secondaryText",
    "kind": "member",
    "longname": "oj-c.FilePicker#secondaryText",
    "optional": true,
    "scope": "instance",
    "description": "The secondary text for the default file picker.  It is either a string or a formatting function that returns the string to be displayed.\nThe formatting function takes in a property object that contains the selection mode of the filepicker.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "type": {
      "names": [
        "string|function"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "string|(fileOptions: { selectionMode: \"multiple\" | \"single\"; }) => string",
        "jsdocOverride": true
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#selectionMode",
    "name": "selectionMode",
    "kind": "member",
    "longname": "oj-c.FilePicker#selectionMode",
    "optional": true,
    "scope": "instance",
    "description": "Whether to allow single or multiple file selection.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "ojvalues": [
      {
        "name": "multiple",
        "description": "multiple file selection",
        "displayName": "Multiple",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "single",
        "description": "single file selection",
        "displayName": "Single",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "defaultvalue": "\"multiple\"",
    "type": {
      "names": [
        "\"multiple\"",
        "\"single\""
      ]
    }
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#focus",
    "name": "focus",
    "kind": "function",
    "longname": "oj-c.FilePicker#focus",
    "description": "Sets focus on the file picker or the first tabbable element for a file picker with custom content.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#blur",
    "name": "blur",
    "kind": "function",
    "longname": "oj-c.FilePicker#blur",
    "description": "Blurs the file picker.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#setProperty",
    "name": "setProperty",
    "kind": "function",
    "longname": "oj-c.FilePicker#setProperty",
    "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a corresponding event.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "params": [
      {
        "name": "property",
        "description": "The property name to set. Supports dot notation for subproperty access.",
        "type": "string"
      },
      {
        "name": "value",
        "description": "The new value to set the property to.",
        "type": "any"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#getProperty",
    "name": "getProperty",
    "kind": "function",
    "longname": "oj-c.FilePicker#getProperty",
    "description": "Retrieves the value of a property or a subproperty.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "params": [
      {
        "name": "property",
        "description": "The property name to get. Supports dot notation for subproperty access.",
        "type": "string"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "any"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#setProperties",
    "name": "setProperties",
    "kind": "function",
    "longname": "oj-c.FilePicker#setProperties",
    "description": "Performs a batch set of properties.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "params": [
      {
        "name": "properties",
        "description": "An object containing the property and value pairs to set.",
        "type": "object"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#event:ojBeforeSelect",
    "name": "ojBeforeSelect",
    "kind": "event",
    "longname": "oj-c.FilePicker#event:ojBeforeSelect",
    "description": "Triggered before files are selected to allow for custom validation.  To reject the selected files, the application can either call event.preventDefault() or pass a rejected Promise to the accept detail property. The latter approach is recommended because this allows the application to send a message stating why the files were rejected.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "properties": [
      {
        "name": "accept",
        "description": "This method can be called with an application-created Promise to cancel this event asynchronously.  The Promise should be resolved or rejected to accept or cancel the event, respectively.",
        "type": {
          "names": [
            "function"
          ]
        }
      },
      {
        "name": "files",
        "description": "The selected files",
        "optional": false,
        "type": {
          "names": [
            "FileList"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "FileList",
            "jsdocOverride": true,
            "for": "files"
          }
        ]
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#event:ojInvalidSelect",
    "name": "ojInvalidSelect",
    "kind": "event",
    "longname": "oj-c.FilePicker#event:ojInvalidSelect",
    "description": "Triggered when invalid files are selected.  This event provides the application with a list of messages that should be displayed to give the user feedback about the\nproblems with their selection.  This feedback can be safely cleared when a subsequent ojBeforeSelect, ojInvalidSelect, or ojSelect event is received.  Additionally the\nevent.detail.until property may be populated with a Promise to provide short-term feedback during a user interaction (typically drag and drop); the feedback should be cleared upon resolution\nof this Promise.",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "properties": [
      {
        "name": "messages",
        "description": "Messages that should be displayed to the user describing invalid files.",
        "optional": false,
        "type": {
          "names": [
            "Array<object>"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "Array<oj-c.FilePicker.ComponentMessageItem>",
            "jsdocOverride": true,
            "for": "messages"
          }
        ]
      },
      {
        "name": "until",
        "description": "This property may be populated with a Promise to provide short-term feedback during a user interaction (typically drag and drop); the feedback should be cleared upon the resolution of this Promise.",
        "optional": false,
        "type": {
          "names": [
            "Promise|null"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#event:ojSelect",
    "name": "ojSelect",
    "kind": "event",
    "longname": "oj-c.FilePicker#event:ojSelect",
    "description": "Triggered after the files are selected",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "properties": [
      {
        "name": "files",
        "description": "The files that were just selected.",
        "optional": false,
        "type": {
          "names": [
            "FileList"
          ]
        },
        "tstype": [
          {
            "target": "Type",
            "value": "FileList",
            "jsdocOverride": true,
            "for": "files"
          }
        ]
      }
    ]
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker#trigger",
    "name": "trigger",
    "kind": "member",
    "longname": "oj-c.FilePicker#trigger",
    "description": "<p>The <code class=\"prettyprint\">trigger</code> slot is used to replace the default content of the file picker.\nFile picker will add click and drag and drop listeners to the slot content.\nThe application is responsible for setting the tabindex attribute for keyboard accessibility.</p>",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "scope": "instance",
    "ojchild": false,
    "ojslot": true
  },
  {
    "id": "oj-c.FilePicker.touchDoc",
    "name": "touchDoc",
    "kind": "member",
    "longname": "oj-c.FilePicker.touchDoc",
    "description": "<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n     <th>Target</th>\n      <th>Gesture</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Clickable element</td>\n      <td><kbd>Tap</kbd></td>\n      <td>Launch the browser's file picker.</td>\n    </tr>\n  </tbody>\n</table>",
    "memberof": "oj-c.FilePicker",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "ojfragment": true
  },
  {
    "id": "oj-c.FilePicker.keyboardDoc",
    "name": "keyboardDoc",
    "kind": "member",
    "longname": "oj-c.FilePicker.keyboardDoc",
    "description": "<table class=\"keyboard-table\">\n  <thead>\n    <tr>\n      <th>Target</th>\n      <th>Key</th>\n      <th>Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Clickable element</td>\n      <td><kbd>Enter</kbd></td>\n      <td>Launch the browser's file picker.</td>\n    </tr>\n  </tbody>\n</table>",
    "memberof": "oj-c.FilePicker",
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "ojfragment": true
  },
  {
    "memberof": "oj-c.FilePicker",
    "id": "oj-c.FilePicker.ComponentMessageItem",
    "name": "ComponentMessageItem",
    "kind": "typedef",
    "longname": "oj-c.FilePicker.ComponentMessageItem",
    "scope": "static",
    "description": "A type for a single component message",
    "type": {
      "names": [
        "Object"
      ]
    },
    "meta": {
      "filename": "file-picker.tsx",
      "path": "web/components/oj-c/file-picker"
    },
    "properties": [
      {
        "name": "summary",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "detail",
        "optional": true,
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "severity",
        "optional": true,
        "type": {
          "names": [
            "\"error\"",
            "\"confirmation\"",
            "\"info\"",
            "\"warning\""
          ]
        }
      }
    ]
  }
]