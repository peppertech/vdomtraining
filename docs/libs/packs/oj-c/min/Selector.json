[
  {
    "pack": "oj-c",
    "id": "oj-c.Selector",
    "name": "Selector",
    "memberof": "oj-c",
    "longname": "oj-c.Selector",
    "kind": "class",
    "classdesc": "<h3 id=\"selectorOverview-section\">\n  JET Selector\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#selectorOverview-section\"></a>\n</h3>\n<p>Description: A checkbox to support selection in Collection Components</p>\n<p>The oj-c-selector is a component that may be placed within a template for Table, ListView.\nIt presents as a checkbox when the Collection Component is configured for multi-selection.\n\n<pre class=\"prettyprint\">\n<code>\n&lt;oj-c-list-view\n   id=\"listview\"\n   data=\"[[dataProvider]]\"\n   selected=\"{{selectedItems}}\"\n   selection-mode=\"[[selectedSelectionMode]]\">\n &lt;template slot=\"itemTemplate\" data-oj-as=\"item\">\n   &lt;oj-c-list-item-layout>\n     &lt;oj-c-selector\n       slot=\"selector\">\n     &lt;/oj-c-selector>\n     &lt;span>\n       &lt;oj-bind-text value=\"[[item.data.name]]\">&lt;/oj-bind-text>\n     &lt;/span>\n   &lt;/oj-c-list-item-layout>\n &lt;/template>\n&lt;/oj-c-list-view>\n</code></pre>\n\n<h3 id=\"a11y-section\">\n  Accessibility\n  <a class=\"bookmarkable-link\" title=\"Bookmarkable Link\" href=\"#a11y-section\"></a>\n</h3>\n\n<p>Application must specify a value for the aria-label attribute with a meaningful description of the purpose of this selector in order for this to be accessible.</p>",
    "scope": "static",
    "tagWithoutBrackets": "oj-c-selector",
    "tagWithBrackets": "<oj-c-selector>",
    "domInterface": "CSelectorElement",
    "ojPageTitle": "&lt;oj-c-selector>",
    "ojcomponent": true,
    "isvcomponent": true,
    "camelCaseName": "Selector",
    "ojPageTitlePrefix": "Element: ",
    "ojtsvcomponent": true,
    "tstype": {
      "target": "Type",
      "value": "interface CSelectorElement<K extends string | number> extends JetElement<SelectorElementSettableProperties<K>>",
      "genericParameters": [
        {
          "name": "K",
          "description": "Type of key"
        }
      ]
    },
    "ojsignature": [
      {
        "target": "Type",
        "value": "interface CSelectorElement<K extends string | number> extends JetElement<SelectorElementSettableProperties<K>>",
        "genericParameters": [
          {
            "name": "K",
            "description": "Type of key"
          }
        ]
      }
    ],
    "since": "15.0.0",
    "tsdeprecated": [
      {
        "type": "supersedes",
        "since": "16.0.0",
        "value": [
          "oj-selector"
        ]
      }
    ],
    "meta": {
      "filename": "selector.tsx",
      "path": "web/components/oj-c/selector"
    },
    "ojmodule": "selector"
  },
  {
    "memberof": "oj-c.Selector",
    "id": "oj-c.Selector#rowKey",
    "name": "rowKey",
    "kind": "member",
    "longname": "oj-c.Selector#rowKey",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the row key of each selector.\nNote that if the selector is used inside one of these components:\n<ul>\n<li>oj-c-card-view</li>\n<li>oj-c-list-view</li>\n</ul>\nThen the selector will retrieve this directly from the above component and\ntherefore this attribute should not be set.",
    "meta": {
      "filename": "selector.tsx",
      "path": "web/components/oj-c/selector"
    },
    "type": {
      "names": [
        "string|number"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "K",
        "jsdocOverride": true
      }
    ]
  },
  {
    "memberof": "oj-c.Selector",
    "id": "oj-c.Selector#selectedKeys",
    "name": "selectedKeys",
    "kind": "member",
    "longname": "oj-c.Selector#selectedKeys",
    "optional": true,
    "scope": "instance",
    "ojwriteback": true,
    "description": "Specifies the selectedKeys.\nNote that if the selector is used inside one of these components:\n<ul>\n<li>oj-c-card-view</li>\n<li>oj-c-list-view</li>\n</ul>\nThen the selector will retrieve this directly from the above component and\ntherefore this attribute should not be set.",
    "meta": {
      "filename": "selector.tsx",
      "path": "web/components/oj-c/selector"
    },
    "type": {
      "names": [
        "object"
      ]
    },
    "tstype": [
      {
        "target": "Type",
        "value": "ImmutableKeySet<K>",
        "jsdocOverride": true,
        "module": {
          "ImmutableKeySet": "ojkeyset"
        }
      }
    ]
  },
  {
    "memberof": "oj-c.Selector",
    "id": "oj-c.Selector#indeterminate",
    "name": "indeterminate",
    "kind": "member",
    "longname": "oj-c.Selector#indeterminate",
    "optional": true,
    "scope": "instance",
    "description": "Specifies if the selector should show the visual partial state.\nThe original checked state of the selector will still be maintained.\nUser selection of checkboxes will remove the indeterminate state and reveal the checkbox state.\nOtherwise, programmatically changing the checkbox state will not change the indeterminate state.",
    "meta": {
      "filename": "selector.tsx",
      "path": "web/components/oj-c/selector"
    },
    "defaultvalue": false,
    "type": {
      "names": [
        "boolean"
      ]
    }
  },
  {
    "memberof": "oj-c.Selector",
    "id": "oj-c.Selector#selectionMode",
    "name": "selectionMode",
    "kind": "member",
    "longname": "oj-c.Selector#selectionMode",
    "optional": true,
    "scope": "instance",
    "description": "Specifies the selection mode ('single', 'multiple'). For selection mode 'all', please refer to oj-c-selector-all component.\nNote that if the selector is used inside one of these components:\n<ul>\n<li>oj-c-card-view</li>\n<li>oj-c-list-view</li>\n</ul>\nThen the selector will retrieve this directly from the above component and\ntherefore this attribute should not be set.",
    "meta": {
      "filename": "selector.tsx",
      "path": "web/components/oj-c/selector"
    },
    "ojvalues": [
      {
        "name": "multiple",
        "description": "Multiple items can be selected at the same time.",
        "displayName": "Multiple",
        "type": {
          "names": [
            "string"
          ]
        }
      },
      {
        "name": "single",
        "description": "Only a single item can be selected at a time.",
        "displayName": "Single",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "type": {
      "names": [
        "\"multiple\"",
        "\"single\""
      ]
    }
  },
  {
    "memberof": "oj-c.Selector",
    "id": "oj-c.Selector#setProperty",
    "name": "setProperty",
    "kind": "function",
    "longname": "oj-c.Selector#setProperty",
    "description": "Sets a property or a single subproperty for complex properties and notifies the component of the change, triggering a corresponding event.",
    "meta": {
      "filename": "selector.tsx",
      "path": "web/components/oj-c/selector"
    },
    "scope": "instance",
    "params": [
      {
        "name": "property",
        "description": "The property name to set. Supports dot notation for subproperty access.",
        "type": "string"
      },
      {
        "name": "value",
        "description": "The new value to set the property to.",
        "type": "any"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.Selector",
    "id": "oj-c.Selector#getProperty",
    "name": "getProperty",
    "kind": "function",
    "longname": "oj-c.Selector#getProperty",
    "description": "Retrieves the value of a property or a subproperty.",
    "meta": {
      "filename": "selector.tsx",
      "path": "web/components/oj-c/selector"
    },
    "scope": "instance",
    "params": [
      {
        "name": "property",
        "description": "The property name to get. Supports dot notation for subproperty access.",
        "type": "string"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "any"
          ]
        }
      }
    ]
  },
  {
    "memberof": "oj-c.Selector",
    "id": "oj-c.Selector#setProperties",
    "name": "setProperties",
    "kind": "function",
    "longname": "oj-c.Selector#setProperties",
    "description": "Performs a batch set of properties.",
    "meta": {
      "filename": "selector.tsx",
      "path": "web/components/oj-c/selector"
    },
    "scope": "instance",
    "params": [
      {
        "name": "properties",
        "description": "An object containing the property and value pairs to set.",
        "type": "object"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ]
  }
]