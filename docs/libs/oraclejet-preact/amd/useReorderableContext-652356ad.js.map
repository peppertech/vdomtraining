{"version":3,"file":"useReorderableContext-652356ad.js","sources":["../../src/hooks/PRIVATE_useReorderable/ReorderableContext.ts","../../src/hooks/PRIVATE_useReorderable/useReorderableContext.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext } from 'preact';\nimport { MutableRef } from 'preact/hooks';\n\nexport type ReorderableContextProps<K extends string | number> = {\n  currentItemKey: MutableRef<K | undefined>;\n};\n/**\n * Context used to pass reordering information.\n * We want to communicate information down to ReorderableItem.\n */\ntype K = string | number;\nconst ReorderableContext = createContext<ReorderableContextProps<K>>(null!);\n\nexport { ReorderableContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\nimport { ReorderableContext } from './ReorderableContext';\n\n/**\n * Utility hook for consuming the ReorderableContext\n *\n * @returns The value of ReorderableContext provider\n */\nfunction useReorderableContext() {\n  return useContext(ReorderableContext);\n}\n\nexport { useReorderableContext };\n"],"names":["ReorderableContext","createContext","useContext"],"mappings":"yEAmBA,MAAMA,EAAqBC,EAAaA,cAA6B,qDCHrE,WACE,OAAOC,EAAAA,WAAWF,EACpB"}