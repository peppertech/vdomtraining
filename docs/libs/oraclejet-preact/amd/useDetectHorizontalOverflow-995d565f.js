define(['exports', 'preact/hooks'], (function(e,t){"use strict";const n=(e,t,n)=>{if(null==e)return!0;if(e&&t&&n){const s=[...e,...t];return s.length!==n.length||JSON.stringify(n)!==JSON.stringify(s)}return!1},s=(e,t)=>{if(null!=e&&null!=t){let n=0,s=e.length-1,r=null,l=null;for(;n<=s&&n<e.length&&s>-1;){const o=Math.floor((n+s)/2),c=e[o];if(c===t)return{closestEntry:c,closestIndex:o};c<t?n=o+1:s=o-1,(!r||Math.abs(t-c)<Math.abs(t-r))&&(r=c,l=o)}return{closestEntry:r,closestIndex:l}}return{closestEntry:null,closestIndex:null}};e.useDetectHorizontalOverflow=function(e){const{rootRef:r,getWidth:l,keysArray:o}=e,[c,u]=t.useState(),[i,f]=t.useState();return t.useLayoutEffect((()=>{let e;if(r.current&&o&&o.length>0){const t=[];let n=0;o.forEach((e=>{n+=l(e);const s={itemKey:e,cumulativeWidth:n};t.push(s)})),e=new ResizeObserver((e=>{for(const n of e){const e=n.contentRect.width,l=t?.map((e=>e.cumulativeWidth));if(l&&(e<l[l.length-1]||r.current&&e<r?.current?.scrollWidth)){const{closestEntry:t,closestIndex:n}=s(l,e);t&&n&&(u(o.slice(0,n)),f(o?.slice(n)))}else u(o),f([])}})),e.observe(r?.current)}return()=>{e&&e.disconnect()}}),[o,l,r]),n(c,i,o)?{visibleItemKeys:o,overflowItemKeys:i}:{visibleItemKeys:c,overflowItemKeys:i}}}));
//# sourceMappingURL=useDetectHorizontalOverflow-995d565f.js.map
