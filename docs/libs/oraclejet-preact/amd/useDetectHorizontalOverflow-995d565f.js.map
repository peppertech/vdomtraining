{"version":3,"file":"useDetectHorizontalOverflow-995d565f.js","sources":["../../src/hooks/PRIVATE_useDetectHorizontalOverflow/useDetectHorizontalOverflow.ts"],"sourcesContent":["import { RefObject } from 'preact';\nimport { useState, useLayoutEffect } from 'preact/hooks';\n\ntype ElemDim<K extends string | number> = {\n  itemKey: K | undefined;\n  cumulativeWidth: number | undefined;\n};\n\ntype CallBack<K extends string | number> = (key: K) => number;\nexport type useDetectOverflowProps<K extends string | number> = {\n  rootRef: RefObject<HTMLDivElement>;\n  getWidth: CallBack<K>;\n  keysArray: (K | undefined)[];\n};\n\n/**\n * Implements overflow detection and calculation\n */\nexport function useDetectHorizontalOverflow<K extends string | number>(\n  options: useDetectOverflowProps<K>\n) {\n  const { rootRef, getWidth, keysArray } = options;\n  const [visibleItemKeys, setVisibleItemKeys] = useState<(K | undefined)[]>();\n  const [overflowItemKeys, setOverflowingItemKeys] = useState<(K | undefined)[]>();\n\n  useLayoutEffect(() => {\n    let resizeObserver: ResizeObserver;\n    if (rootRef.current && keysArray && keysArray.length > 0) {\n      const itemDimensions: ElemDim<K>[] = [];\n      let sumofItemsWidth = 0;\n      keysArray.forEach((itemKey) => {\n        sumofItemsWidth += getWidth(itemKey as K);\n        const elemDimension = {\n          itemKey: itemKey,\n          cumulativeWidth: sumofItemsWidth\n        };\n        itemDimensions.push(elemDimension as ElemDim<K>);\n      });\n\n      resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const containerWidth = entry.contentRect.width;\n          const arr = itemDimensions?.map((item) => item.cumulativeWidth) as number[];\n          if (\n            arr &&\n            (containerWidth < arr[arr.length - 1] ||\n              (rootRef.current && containerWidth < rootRef?.current?.scrollWidth))\n          ) {\n            const { closestEntry, closestIndex } = searchClosest(arr, containerWidth);\n            if (closestEntry && closestIndex) {\n              setVisibleItemKeys(keysArray.slice(0, closestIndex));\n              setOverflowingItemKeys(keysArray?.slice(closestIndex));\n            }\n          } else {\n            setVisibleItemKeys(keysArray);\n            setOverflowingItemKeys([]);\n          }\n        }\n      });\n      resizeObserver.observe(rootRef?.current as Element);\n    }\n\n    return () => {\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [keysArray, getWidth, rootRef]);\n\n  return shouldRenderAllTabs(visibleItemKeys, overflowItemKeys, keysArray)\n    ? {\n        visibleItemKeys: keysArray,\n        overflowItemKeys\n      }\n    : {\n        visibleItemKeys,\n        overflowItemKeys\n      };\n}\n\n//If the overflow + visible keys or their quantity are not the same as keysArray then we first render all the keys as visible\nconst shouldRenderAllTabs = <K extends string | number>(\n  visibleItemKeys: (K | undefined)[] | undefined,\n  overflowItemKeys: (K | undefined)[] | undefined,\n  keysArray: (K | undefined)[]\n) => {\n  if (visibleItemKeys == null) return true;\n  else if (visibleItemKeys && overflowItemKeys && keysArray) {\n    const combinedArray = [...visibleItemKeys, ...overflowItemKeys];\n    const isNotEqual =\n      combinedArray.length !== keysArray.length ||\n      JSON.stringify(keysArray) !== JSON.stringify(combinedArray);\n    return isNotEqual;\n  } else return false;\n};\n\nconst searchClosest = (\n  arr: number[] | undefined,\n  searchValue: number | undefined | null\n): { closestEntry: number | null; closestIndex: number | null } => {\n  {\n    if (arr != null && searchValue != null) {\n      let left = 0;\n      let right = arr.length - 1;\n      let closestEntry: number | null = null;\n      let closestIndex: number | null = null;\n      while (left <= right && left < arr.length && right > -1) {\n        const mid = Math.floor((left + right) / 2);\n        const midEntry = arr[mid];\n        if (midEntry === searchValue) {\n          return { closestEntry: midEntry!, closestIndex: mid! };\n        } else if (midEntry < searchValue) {\n          left = mid + 1;\n        } else {\n          right = mid - 1;\n        }\n\n        if (\n          !closestEntry ||\n          Math.abs(searchValue - midEntry) < Math.abs(searchValue - closestEntry)\n        ) {\n          closestEntry = midEntry as number;\n          closestIndex = mid as number;\n        }\n      }\n      return { closestEntry: closestEntry!, closestIndex: closestIndex! };\n    } else return { closestEntry: null, closestIndex: null };\n  }\n};\n"],"names":["shouldRenderAllTabs","visibleItemKeys","overflowItemKeys","keysArray","combinedArray","length","JSON","stringify","searchClosest","arr","searchValue","left","right","closestEntry","closestIndex","mid","Math","floor","midEntry","abs","options","rootRef","getWidth","setVisibleItemKeys","useState","setOverflowingItemKeys","useLayoutEffect","resizeObserver","current","itemDimensions","sumofItemsWidth","forEach","itemKey","elemDimension","cumulativeWidth","push","ResizeObserver","entries","entry","containerWidth","contentRect","width","map","item","scrollWidth","slice","observe","disconnect"],"mappings":"8DAiFA,MAAMA,EAAsB,CAC1BC,EACAC,EACAC,KAEA,GAAuB,MAAnBF,EAAyB,OAAO,EAC/B,GAAIA,GAAmBC,GAAoBC,EAAW,CACzD,MAAMC,EAAgB,IAAIH,KAAoBC,GAI9C,OAFEE,EAAcC,SAAWF,EAAUE,QACnCC,KAAKC,UAAUJ,KAAeG,KAAKC,UAAUH,EAEhD,CAAM,OAAO,CAAK,EAGfI,EAAgB,CACpBC,EACAC,KAGE,GAAW,MAAPD,GAA8B,MAAfC,EAAqB,CACtC,IAAIC,EAAO,EACPC,EAAQH,EAAIJ,OAAS,EACrBQ,EAA8B,KAC9BC,EAA8B,KAClC,KAAOH,GAAQC,GAASD,EAAOF,EAAIJ,QAAUO,GAAS,GAAG,CACvD,MAAMG,EAAMC,KAAKC,OAAON,EAAOC,GAAS,GAClCM,EAAWT,EAAIM,GACrB,GAAIG,IAAaR,EACf,MAAO,CAAEG,aAAcK,EAAWJ,aAAcC,GACvCG,EAAWR,EACpBC,EAAOI,EAAM,EAEbH,EAAQG,EAAM,IAIbF,GACDG,KAAKG,IAAIT,EAAcQ,GAAYF,KAAKG,IAAIT,EAAcG,MAE1DA,EAAeK,EACfJ,EAAeC,EAElB,CACD,MAAO,CAAEF,aAAcA,EAAeC,aAAcA,EACrD,CAAM,MAAO,CAAED,aAAc,KAAMC,aAAc,KACnD,gCA7GG,SACJM,GAEA,MAAMC,QAAEA,EAAOC,SAAEA,EAAQnB,UAAEA,GAAciB,GAClCnB,EAAiBsB,GAAsBC,EAAQA,YAC/CtB,EAAkBuB,GAA0BD,EAAQA,WA8C3D,OA5CAE,EAAAA,iBAAgB,KACd,IAAIC,EACJ,GAAIN,EAAQO,SAAWzB,GAAaA,EAAUE,OAAS,EAAG,CACxD,MAAMwB,EAA+B,GACrC,IAAIC,EAAkB,EACtB3B,EAAU4B,SAASC,IACjBF,GAAmBR,EAASU,GAC5B,MAAMC,EAAgB,CACpBD,QAASA,EACTE,gBAAiBJ,GAEnBD,EAAeM,KAAKF,EAA4B,IAGlDN,EAAiB,IAAIS,gBAAgBC,IACnC,IAAK,MAAMC,KAASD,EAAS,CAC3B,MAAME,EAAiBD,EAAME,YAAYC,MACnChC,EAAMoB,GAAgBa,KAAKC,GAASA,EAAKT,kBAC/C,GACEzB,IACC8B,EAAiB9B,EAAIA,EAAIJ,OAAS,IAChCgB,EAAQO,SAAWW,EAAiBlB,GAASO,SAASgB,aACzD,CACA,MAAM/B,aAAEA,EAAYC,aAAEA,GAAiBN,EAAcC,EAAK8B,GACtD1B,GAAgBC,IAClBS,EAAmBpB,EAAU0C,MAAM,EAAG/B,IACtCW,EAAuBtB,GAAW0C,MAAM/B,IAE3C,MACCS,EAAmBpB,GACnBsB,EAAuB,GAE1B,KAEHE,EAAemB,QAAQzB,GAASO,QACjC,CAED,MAAO,KACDD,GACFA,EAAeoB,YAChB,CACF,GACA,CAAC5C,EAAWmB,EAAUD,IAElBrB,EAAoBC,EAAiBC,EAAkBC,GAC1D,CACEF,gBAAiBE,EACjBD,oBAEF,CACED,kBACAC,mBAER"}