{"version":3,"file":"RemovableNavigationListItem-e01b6693.js","sources":["../../src/UNSAFE_NavigationListCommon/RemovableNavigationListItem.tsx"],"sourcesContent":["import { BaseNavigationListItem, BaseNavigationListItemProps } from './BaseNavigationListItem';\nimport { useNavigationListContext } from './useNavigationListContext';\nimport { Close } from '../UNSAFE_RedwoodIcons/Close';\nimport { EmbeddedIconButton } from '../PRIVATE_EmbeddedIconButton';\nimport { useCallback } from 'preact/hooks';\nimport { useHover } from '#hooks/UNSAFE_useHover';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport type { BundleType } from '../resources/nls/bundle';\n\ntype RemovableNavigationListItemProps<K extends string | number> = Omit<\n  BaseNavigationListItemProps<K>,\n  'removeIcon'\n>;\n\nexport function RemovableNavigationListItem<K extends string | number>({\n  itemKey,\n  label,\n  badge,\n  metadata,\n  severity\n}: RemovableNavigationListItemProps<K>) {\n  const { selection, currentKey, onRemove } = useNavigationListContext();\n  const isSelected = selection === itemKey;\n  const isCurrent = currentKey === itemKey;\n\n  const handleRemove = useCallback(() => {\n    onRemove?.({ value: itemKey as K });\n  }, [onRemove, itemKey]);\n\n  const { hoverProps, isHover } = useHover({});\n\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n  //instead of specifying flex: '1 0 auto' in cssProps var\n  return (\n    <div {...hoverProps}>\n      <BaseNavigationListItem\n        itemKey={itemKey}\n        label={label}\n        badge={badge}\n        metadata={metadata}\n        severity={severity}\n        removeIcon={\n          <span data-oj-navigationlist-item-remove-icon={true}>\n            <EmbeddedIconButton\n              aria-label={translations.tabBarNavigationList_removeCueText()}\n              size=\"xs\"\n              onAction={handleRemove}>\n              {(isHover || isSelected || isCurrent) && <Close />}\n            </EmbeddedIconButton>\n          </span>\n        }\n      />\n    </div>\n  );\n}\n"],"names":["itemKey","label","badge","metadata","severity","selection","currentKey","onRemove","useNavigationListContext","isSelected","isCurrent","handleRemove","useCallback","value","hoverProps","isHover","useHover","translations","useTranslationBundle","_jsx","children","jsx","BaseNavigationListItem","removeIcon","EmbeddedIconButton","tabBarNavigationList_removeCueText","size","onAction","Close","SvgClose"],"mappings":"4QAcgB,UAAuDA,QACrEA,EAAOC,MACPA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,SACRA,IAEA,MAAMC,UAAEA,EAASC,WAAEA,EAAUC,SAAEA,GAAaC,EAAwBA,2BAC9DC,EAAaJ,IAAcL,EAC3BU,EAAYJ,IAAeN,EAE3BW,EAAeC,EAAAA,aAAY,KAC/BL,IAAW,CAAEM,MAAOb,GAAe,GAClC,CAACO,EAAUP,KAERc,WAAEA,EAAUC,QAAEA,GAAYC,EAAQA,SAAC,CAAE,GAErCC,EAAeC,uBAAiC,4BAGtD,OACEC,MAAA,MAAA,IAASL,EAAUM,SACjBD,EAACE,IAAAC,yBACC,CAAAtB,QAASA,EACTC,MAAOA,EACPC,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVmB,WACEJ,yDAA+C,EAAIC,SACjDD,MAACK,EAAAA,mBACa,CAAA,aAAAP,EAAaQ,qCACzBC,KAAK,KACLC,SAAUhB,EACTS,UAACL,GAAWN,GAAcC,IAAcS,EAAAA,IAACS,EAAKC,SAAA,WAO7D"}