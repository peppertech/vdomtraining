define(['exports', 'preact/jsx-runtime', './TabBarItem-547825e2', 'preact/hooks', './useResizeObserver-275c3e83', './tabBarUtils-70c9cb5f'], (function(e,t,a,r,s,i){"use strict";e.TabBarLinkItem=function({itemKey:e,icon:r,badge:s,metadata:i,severity:n,labelMaxWidth:c,href:o,label:u,"aria-controls":l}){return t.jsx(a.BaseTabBarItem,{"aria-controls":l,itemKey:e,label:u,icon:r,badge:s,metadata:i,severity:n,labelMaxWidth:c,href:o})},e.useProgressiveTruncation=({rootRef:e,isDisabled:t=!1})=>{const a=r.useRef(new Map),[n,c]=r.useState(),[o,u]=r.useState(0);r.useLayoutEffect((()=>{if(null==n&&e&&e.current&&!t){if(!(o<e.current.scrollWidth))return;const r=i.getTabWidths(e.current,a,t,o,!1),s=new Map(r.map((e=>[e.key,e.maxWidth+"px"])));c(s)}}),[o,n,t,e]);const l=r.useCallback((e=>{o!==e.contentRect.width&&(u(e.contentRect.width),void 0!==n&&c(void 0))}),[n,o]);return s.useResizeObserver(e,l,{isDisabled:t}),{maxWidths:n}}}));
//# sourceMappingURL=useProgressiveTruncation-30e79e98.js.map
