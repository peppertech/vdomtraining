define(['exports', 'preact/jsx-runtime', 'preact', 'preact/hooks', './classNames-08d99695', './TabBar-d8890a47', './UNSAFE_OverflowTabBar/themes/OverflowTabBarStyles.css', './useDetectHorizontalOverflow-c90aa487', './RemovableTabBarItem-29b54206', './TabBarItem-547825e2', './OverflowTabBarItem-c59db4a2'], (function(e,a,t,l,s,r,o,i,n,c,m){"use strict";e.OverflowTabBar=function({items:e,layout:d="stretch",display:b="standard",size:u="md",edge:y="top",selection:v,truncation:f,onSelect:I,onRemove:B,"aria-label":T,"aria-labelledby":p,testId:w}){const K="stacked"===b?{display:b}:{display:b,size:u},g=l.useRef(null),h=t.createRef(),[x,R]=l.useState(!1),O=l.useRef(!1),j=l.useCallback((e=>{"more"===e.value?O.current?R(!1):R(!0):I?.(e),O.current=!1}),[I]),S=l.useMemo((()=>e.map((e=>e.itemKey))),[e]),{visibleItemKeys:k,overflowItemKeys:z,maxWidths:M}=i.useDetectHorizontalOverflow({rootRef:h,keysArray:S,isTruncationDisabled:!(f&&"progressive"===f)}),A=s.classNames([o.styles.overflowTabBarBase]);return a.jsx("div",{ref:g,class:A,children:a.jsxs(r.TabBar,{ref:h,selection:v,onSelect:j,...K,layout:d,edge:y,onRemove:B,"aria-label":T,"aria-labelledby":p,testId:w,children:[null!=k&&k.length>0&&e.filter((e=>k?.includes(e.itemKey))).map((e=>e.isRemovable?a.jsx(n.RemovableTabBarItem,{itemKey:e.itemKey,label:e.label,icon:e.icon,badge:e.badge,metadata:e.metadata,severity:e.severity,"aria-controls":e.tabPanelId,labelMaxWidth:M?.get(e.itemKey)}):a.jsx(c.TabBarItem,{itemKey:e.itemKey,label:e.label,icon:e.icon,badge:e.badge,metadata:e.metadata,severity:e.severity,"aria-controls":e.tabPanelId,labelMaxWidth:M?.get(e.itemKey)}))),null!=z&&z.length>0&&a.jsx(m.OverflowTabBarItem,{isOpen:x,onClose:e=>{h.current&&["itemAction","dismissed"].includes(e.reason)&&h?.current?.focus(),"outsideMousedown"===e.reason&&(O.current=!0),R(!1)},overflowItemKey:"more",overflowItems:e.filter((e=>z?.includes(e.itemKey)))})]})})}}));
//# sourceMappingURL=OverflowTabBar-339f34cf.js.map
