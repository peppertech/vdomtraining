{"version":3,"file":"useChartContextMenu-8606bfa2.js","sources":["../../src/hooks/PRIVATE_useChartContextMenu/useChartContextMenu.ts","../../src/hooks/PRIVATE_useChartContextMenu/contextMenuUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport type { BarSeriesData } from '#UNSAFE_BarChart/barChart.types';\nimport type { LineAreaSeriesData } from '#UNSAFE_LineAreaChart/lineAreaChart.types';\nimport type { RefObject } from 'preact';\nimport type {\n  ChartContextMenuContext,\n  ChartContextMenuConfig,\n  Group,\n  Info\n} from '#utils/UNSAFE_visTypes/chart';\nimport { type gestureTypes, useContextMenu } from '#hooks/PRIVATE_useVisContextMenu';\nimport { getChartContextMenuContext } from './contextMenuUtils';\nimport { calculateOffset } from '#utils/PRIVATE_visLayoutUtils/layoutUtils';\nimport { Dimension } from '#utils/UNSAFE_visTypes/common';\n\ntype Props<K, D> = {\n  series: (BarSeriesData<K, D> | LineAreaSeriesData<K, D>)[];\n  groups: Group[];\n  isRtl: boolean;\n  width: number;\n  height: number;\n  getDataItemPosition: (seriesIndex: number, groupIndex: number) => Dimension | undefined;\n  getDataItem: (seriesIndex: number, groupIndex: number) => D | undefined;\n  focusedItemInfo: Info;\n  rootRef: RefObject<HTMLDivElement>;\n  xAxisTitle?: string;\n  yAxisTitle?: string;\n  contextMenuConfig?: ChartContextMenuConfig<K, D>;\n  onContextMenuDismissed?: (gesture: gestureTypes) => void;\n};\n\nexport const useChartContextMenu = <K extends string | number, D>({\n  isRtl,\n  width,\n  getDataItemPosition,\n  getDataItem,\n  focusedItemInfo,\n  series,\n  groups,\n  rootRef,\n  xAxisTitle,\n  yAxisTitle,\n  contextMenuConfig,\n  onContextMenuDismissed\n}: Props<K, D>) => {\n  const { contextMenuProps, contextMenuContent } = useContextMenu<ChartContextMenuContext<K, D>>({\n    onContextMenuHandler: ({ gesture, target }) => {\n      const { context } = getChartContextMenuContext<K, D>(\n        focusedItemInfo,\n        gesture,\n        target as HTMLElement,\n        series,\n        groups,\n        rootRef,\n        xAxisTitle,\n        yAxisTitle,\n        getDataItem\n      );\n      if (gesture === 'keyboard' && context.type === 'item') {\n        const elementBounds = focusedItemInfo?.isCurrent\n          ? getDataItemPosition(focusedItemInfo.seriesIndex!, focusedItemInfo.groupIndex!)\n          : undefined;\n        const offsetValue = calculateOffset(isRtl, width, elementBounds);\n        return {\n          type: 'offset',\n          context,\n          offsetValue,\n          isRtl,\n          width\n        };\n      }\n      return { type: 'pointer', context };\n    },\n    contextMenuOptions: {\n      isDisabled: !contextMenuConfig //If there is not a context menu renderer we disable the hook\n    },\n    rootRef,\n    contextMenuConfig,\n    onContextMenuDismissed\n  });\n\n  return { contextMenuContent, contextMenuProps };\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type {\n  ChartSeriesData,\n  Info,\n  ChartContextMenuContext,\n  Group\n} from '#utils/UNSAFE_visTypes/chart';\nimport { getInfo } from '#utils/UNSAFE_visUtils';\nimport type { RefObject } from 'preact';\n\nexport function getChartContextMenuContext<K, D>(\n  focusedItemInfo: Info,\n  gesture: 'mouse' | 'touch' | 'keyboard',\n  target: HTMLElement,\n  series: ChartSeriesData<K, D>[],\n  groups: Group[],\n  rootRef: RefObject<HTMLElement>,\n  xAxisTitle?: string,\n  yAxisTitle?: string,\n  getDataItem?: (seriesIndex: number, groupIndex: number) => D | undefined\n) {\n  let seriesIndex;\n  let groupIndex;\n  if (gesture === 'keyboard') {\n    //We find the element where the position of the menu is going to be based of\n    groupIndex = focusedItemInfo.groupIndex;\n    seriesIndex = focusedItemInfo.seriesIndex;\n  } else {\n    //We search for the key using the target of the event\n    const info = getInfo(rootRef, target);\n    seriesIndex = info ? info.seriesIndex : undefined;\n    groupIndex = info ? info.groupIndex : undefined;\n  }\n  let context;\n  if (\n    seriesIndex !== undefined &&\n    groupIndex !== undefined &&\n    getDataItem?.(seriesIndex, groupIndex)\n  ) {\n    context = {\n      data: getDataItem(seriesIndex, groupIndex),\n      groupIndex,\n      seriesIndex,\n      type: 'item'\n    };\n  } else if (seriesIndex !== undefined) {\n    context = {\n      data: series[seriesIndex],\n      type: 'series'\n    };\n  } else if (groupIndex !== undefined) {\n    context = {\n      data: groups[groupIndex],\n      type: 'xAxisTickLabel'\n    };\n  } else {\n    const target = event?.target as HTMLElement;\n    const text = target?.textContent;\n    if ((text && gesture !== 'keyboard' && text === xAxisTitle) || text === yAxisTitle) {\n      context = {\n        type: 'axisTitle',\n        axis: text === xAxisTitle ? 'x' : 'y'\n      };\n    } else {\n      context = {\n        type: 'background'\n      };\n    }\n  }\n  return {\n    context: context as ChartContextMenuContext<K, D>\n  };\n}\n"],"names":["isRtl","width","getDataItemPosition","getDataItem","focusedItemInfo","series","groups","rootRef","xAxisTitle","yAxisTitle","contextMenuConfig","onContextMenuDismissed","contextMenuProps","contextMenuContent","useContextMenu","onContextMenuHandler","gesture","target","context","seriesIndex","groupIndex","info","getInfo","undefined","data","type","event","text","textContent","axis","getChartContextMenuContext","elementBounds","isCurrent","offsetValue","calculateOffset","contextMenuOptions","isDisabled"],"mappings":"+zBAqCmC,EACjCA,QACAC,QACAC,sBACAC,cACAC,kBACAC,SACAC,SACAC,UACAC,aACAC,aACAC,oBACAC,6BAEA,MAAMC,iBAAEA,EAAgBC,mBAAEA,GAAuBC,iBAA8C,CAC7FC,qBAAsB,EAAGC,UAASC,aAChC,MAAMC,QAAEA,YCnCZd,EACAY,EACAC,EACAZ,EACAC,EACAC,EACAC,EACAC,EACAN,GAEA,IAAIgB,EACAC,EAWAF,EAVJ,GAAgB,aAAZF,EAEFI,EAAahB,EAAgBgB,WAC7BD,EAAcf,EAAgBe,gBACzB,CAEL,MAAME,EAAOC,EAAAA,QAAQf,EAASU,GAC9BE,EAAcE,EAAOA,EAAKF,iBAAcI,EACxCH,EAAaC,EAAOA,EAAKD,gBAAaG,CACvC,CAED,QACkBA,IAAhBJ,QACeI,IAAfH,GACAjB,IAAcgB,EAAaC,GAE3BF,EAAU,CACRM,KAAMrB,EAAYgB,EAAaC,GAC/BA,aACAD,cACAM,KAAM,aAEH,QAAoBF,IAAhBJ,EACTD,EAAU,CACRM,KAAMnB,EAAOc,GACbM,KAAM,eAEH,QAAmBF,IAAfH,EACTF,EAAU,CACRM,KAAMlB,EAAOc,GACbK,KAAM,sBAEH,CACL,MAAMR,EAASS,OAAOT,OAChBU,EAAOV,GAAQW,YAEnBV,EADGS,GAAoB,aAAZX,GAA0BW,IAASnB,GAAemB,IAASlB,EAC5D,CACRgB,KAAM,YACNI,KAAMF,IAASnB,EAAa,IAAM,KAG1B,CACRiB,KAAM,aAGX,CACD,MAAO,CACLP,QAASA,EAEb,CD1B0BY,CAClB1B,EACAY,EACAC,EACAZ,EACAC,EACAC,EACAC,EACAC,EACAN,GAEF,GAAgB,aAAZa,GAA2C,SAAjBE,EAAQO,KAAiB,CACrD,MAAMM,EAAgB3B,GAAiB4B,UACnC9B,EAAoBE,EAAgBe,YAAcf,EAAgBgB,iBAClEG,EAEJ,MAAO,CACLE,KAAM,SACNP,UACAe,YAJkBC,EAAeA,gBAAClC,EAAOC,EAAO8B,GAKhD/B,QACAC,QAEH,CACD,MAAO,CAAEwB,KAAM,UAAWP,UAAS,EAErCiB,mBAAoB,CAClBC,YAAa1B,GAEfH,UACAG,oBACAC,2BAGF,MAAO,CAAEE,qBAAoBD,mBAAkB"}