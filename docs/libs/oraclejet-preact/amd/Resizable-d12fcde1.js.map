{"version":3,"file":"Resizable-d12fcde1.js","sources":["../../src/PRIVATE_Resizable/Resizable.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useCallback, useRef } from 'preact/hooks';\nimport type { RefObject } from 'preact';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { baseStyle, styles } from './themes/ResizableStyles.css';\nimport { getContainingBlockElem } from '../utils/PRIVATE_floatingUtils';\nimport { Rect } from '../utils/UNSAFE_flexibleComponentUtils';\n\ntype Point = {\n  x: number;\n  y: number;\n};\n\nenum ResizeEdge {\n  NONE,\n  N,\n  NE,\n  E,\n  SE,\n  S,\n  SW,\n  W,\n  NW\n}\n\ntype ResizableProps = {\n  onResizeStart?: (rect: Rect) => void;\n  onResize?: (rect: Rect) => void;\n  onResizeEnd?: (rect: Rect) => void;\n  containerRef?: RefObject<HTMLElement>;\n};\n\n/**\n * A component that adds resize capability to a component. Fires the onResize event whenever\n * a potential resize gesture is detected. It is up to the consuming component to update its\n * position and dimensions when appropriate.\n */\nexport function Resizable({ onResize, onResizeStart, onResizeEnd, containerRef }: ResizableProps) {\n  const isResizing = useRef<boolean>(false);\n  const resizingEdge = useRef<ResizeEdge>(ResizeEdge.NONE);\n\n  const startPosition = useRef<Point>();\n  const initialParentClientRect = useRef<Rect>({ x: 0, y: 0, width: 0, height: 0 });\n  const initialMousePosition = useRef<Point>({ x: 0, y: 0 });\n\n  const findPos = (element: Element) => {\n    let elem = element as HTMLElement;\n    let curLeft = 0;\n    let curTop = 0;\n    if (elem.offsetParent) {\n      do {\n        curLeft += elem.offsetLeft;\n        curTop += elem.offsetTop;\n      } while ((elem = elem.offsetParent as HTMLElement));\n    }\n\n    return { left: curLeft, top: curTop };\n  };\n\n  /**\n   * Constrains rect to the current containing block\n   */\n  const constrainRect = useCallback(\n    (srcRect: Rect): Rect => {\n      const elem = containerRef?.current;\n\n      const result = {\n        x: srcRect.x,\n        y: srcRect.y,\n        width: srcRect.width,\n        height: srcRect.height\n      };\n\n      if (!elem) return result;\n\n      const containingBlock = getContainingBlockElem(elem);\n\n      const boundingRect = containingBlock?.getBoundingClientRect();\n      const dialogRect = elem.getBoundingClientRect();\n\n      const limitLeft = boundingRect ? boundingRect.left : 0;\n      const limitTop = boundingRect ? boundingRect.top : 0;\n      const limitRight = boundingRect ? boundingRect.right : window.innerWidth;\n      const limitBottom = boundingRect ? boundingRect.bottom : window.innerHeight;\n\n      if (result.y < limitTop) {\n        result.y = limitTop;\n        result.height = dialogRect.height;\n      }\n\n      if (result.y + result.height > limitBottom) {\n        result.height = dialogRect.height;\n      }\n\n      if (result.x < limitLeft) {\n        result.x = limitLeft;\n        result.width = dialogRect.width;\n      }\n\n      if (result.x + result.width > limitRight) {\n        result.width = dialogRect.width;\n      }\n\n      return result;\n    },\n    [containerRef]\n  );\n\n  /**\n   * Calculates the new rect coordinates for a given mouse event\n   */\n  const getNewRect = useCallback(\n    (event: MouseEvent) => {\n      let left = 0;\n      let width = 0;\n      let top = 0;\n      let height = 0;\n\n      switch (resizingEdge.current) {\n        case ResizeEdge.N:\n          top = event.pageY - initialMousePosition.current.y;\n          height = initialMousePosition.current.y - event.pageY;\n          break;\n\n        case ResizeEdge.E:\n          width = event.pageX - initialMousePosition.current.x;\n          break;\n\n        case ResizeEdge.S:\n          height = event.pageY - initialMousePosition.current.y;\n          break;\n\n        case ResizeEdge.W:\n          left = event.pageX - initialMousePosition.current.x;\n          width = initialMousePosition.current.x - event.pageX;\n          break;\n\n        case ResizeEdge.NE:\n          top = event.pageY - initialMousePosition.current.y;\n          width = event.pageX - initialMousePosition.current.x;\n          height = initialMousePosition.current.y - event.pageY;\n          break;\n\n        case ResizeEdge.SE:\n          width = event.pageX - initialMousePosition.current.x;\n          height = event.pageY - initialMousePosition.current.y;\n          break;\n\n        case ResizeEdge.SW:\n          left = event.pageX - initialMousePosition.current.x;\n          width = initialMousePosition.current.x - event.pageX;\n          height = event.pageY - initialMousePosition.current.y;\n          break;\n\n        case ResizeEdge.NW:\n          left = event.pageX - initialMousePosition.current.x;\n          top = event.pageY - initialMousePosition.current.y;\n          width = initialMousePosition.current.x - event.pageX;\n          height = initialMousePosition.current.y - event.pageY;\n          break;\n      }\n\n      const newRect = {\n        x: initialParentClientRect.current.x + left,\n        y: initialParentClientRect.current.y + top,\n        width: initialParentClientRect.current.width + width,\n        height: initialParentClientRect.current.height + height\n      };\n\n      const newConstrainedRect = constrainRect(newRect);\n\n      return newConstrainedRect;\n    },\n    [constrainRect]\n  );\n\n  /**\n   * Handles mousedown events while the 'resize' mode is active.\n   */\n  const handleResize = useCallback(\n    (event: MouseEvent) => {\n      if (!isResizing.current) return;\n\n      if (!startPosition.current) return;\n\n      const newRect = getNewRect(event);\n      onResize?.(newRect);\n\n      event.stopPropagation();\n      event.preventDefault();\n    },\n    [onResize, getNewRect]\n  );\n\n  /**\n   * Handles mouseup event to exit the 'resize' mode.\n   */\n  const endResize = (event: MouseEvent) => {\n    isResizing.current = false;\n\n    document.removeEventListener('mousemove', handleResize, true);\n    document.removeEventListener('mouseup', endResize, true);\n\n    const newRect = getNewRect(event);\n    onResizeEnd?.(newRect);\n\n    resizingEdge.current = ResizeEdge.NONE;\n\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  /**\n   * Handles mousedown event to enter the 'resize mode.\n   */\n  const startResize = (event: MouseEvent) => {\n    const elem = event.currentTarget as HTMLElement;\n\n    if (!elem || !elem.parentElement) return;\n\n    const pos = findPos(elem.parentElement);\n\n    isResizing.current = true;\n\n    document.addEventListener('mousemove', handleResize, true);\n    document.addEventListener('mouseup', endResize, true);\n\n    initialParentClientRect.current = elem.parentElement.getBoundingClientRect();\n\n    startPosition.current = { x: pos.left, y: pos.top };\n    initialMousePosition.current = { x: event.pageX, y: event.pageY };\n\n    const newRect = getNewRect(event);\n    onResizeStart?.(newRect);\n  };\n\n  const startResizeN = (event: MouseEvent) => {\n    startResize(event);\n    if (isResizing.current) {\n      resizingEdge.current = ResizeEdge.N;\n    }\n  };\n\n  const startResizeE = (event: MouseEvent) => {\n    startResize(event);\n    if (isResizing.current) {\n      resizingEdge.current = ResizeEdge.E;\n    }\n  };\n\n  const startResizeS = (event: MouseEvent) => {\n    startResize(event);\n    if (isResizing.current) {\n      resizingEdge.current = ResizeEdge.S;\n    }\n  };\n\n  const startResizeW = (event: MouseEvent) => {\n    startResize(event);\n    if (isResizing.current) {\n      resizingEdge.current = ResizeEdge.W;\n    }\n  };\n\n  const startResizeNE = (event: MouseEvent) => {\n    startResize(event);\n    if (isResizing.current) {\n      resizingEdge.current = ResizeEdge.NE;\n    }\n  };\n\n  const startResizeSE = (event: MouseEvent) => {\n    startResize(event);\n    if (isResizing.current) {\n      resizingEdge.current = ResizeEdge.SE;\n    }\n  };\n\n  const startResizeSW = (event: MouseEvent) => {\n    startResize(event);\n    if (isResizing.current) {\n      resizingEdge.current = ResizeEdge.SW;\n    }\n  };\n\n  const startResizeNW = (event: MouseEvent) => {\n    startResize(event);\n    if (isResizing.current) {\n      resizingEdge.current = ResizeEdge.NW;\n    }\n  };\n\n  return (\n    <>\n      <div class={classNames([baseStyle, styles.handleN])} onMouseDown={startResizeN} />\n      <div class={classNames([baseStyle, styles.handleE])} onMouseDown={startResizeE} />\n      <div class={classNames([baseStyle, styles.handleS])} onMouseDown={startResizeS} />\n      <div class={classNames([baseStyle, styles.handleW])} onMouseDown={startResizeW} />\n      <div class={classNames([baseStyle, styles.handleNE])} onMouseDown={startResizeNE} />\n      <div class={classNames([baseStyle, styles.handleSE])} onMouseDown={startResizeSE} />\n      <div class={classNames([baseStyle, styles.handleSW])} onMouseDown={startResizeSW} />\n      <div class={classNames([baseStyle, styles.handleNW])} onMouseDown={startResizeNW} />\n    </>\n  );\n}\n"],"names":["ResizeEdge","onResize","onResizeStart","onResizeEnd","containerRef","isResizing","useRef","resizingEdge","NONE","startPosition","initialParentClientRect","x","y","width","height","initialMousePosition","constrainRect","useCallback","srcRect","elem","current","result","containingBlock","getContainingBlockElem","boundingRect","getBoundingClientRect","dialogRect","limitLeft","left","limitTop","top","limitRight","right","window","innerWidth","limitBottom","bottom","innerHeight","getNewRect","event","N","pageY","E","pageX","S","W","NE","SE","SW","NW","newRect","handleResize","stopPropagation","preventDefault","endResize","document","removeEventListener","startResize","currentTarget","parentElement","pos","element","curLeft","curTop","offsetParent","offsetLeft","offsetTop","findPos","addEventListener","_jsxs","_Fragment","children","_jsx","class","classNames","baseStyle","styles","handleN","onMouseDown","handleE","handleS","handleW","jsx","handleNE","handleSE","handleSW","handleNW"],"mappings":"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"}