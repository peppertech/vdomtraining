{"version":3,"file":"TextField-51daf13e.js","sources":["../../src/UNSAFE_TextField/TextFieldContent.tsx","../../src/UNSAFE_TextField/TextField.tsx"],"sourcesContent":["import { ComponentChildren, Ref } from 'preact';\n\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { useFormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { Flex } from '../UNSAFE_Flex';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport type { TextFieldStyles, TextFieldVariantOptions } from './themes/TextFieldStyles.css';\nimport { useInputGroupContext } from '../hooks/UNSAFE_useInputGroupContext';\nimport { useUser } from '../hooks/UNSAFE_useUser';\nimport { TextFieldRedwoodTheme } from './themes/redwood/TextFieldTheme';\n\ntype VariantProps = {\n  contentVariant?: 'input' | 'textarea';\n  statusVariant?: 'error' | 'none' | 'warning';\n  styleVariant?: 'default' | 'embedded';\n};\n\ntype Props = VariantProps & {\n  mainContent?: ComponentChildren;\n  insideLabel?: ComponentChildren;\n  startContent?: ComponentChildren;\n  endContent?: ComponentChildren;\n  resize?: 'horizontal' | 'vertical' | 'both';\n  rootRef?: Ref<HTMLDivElement>;\n  hasZeroStartMargin?: boolean;\n};\n\n// Renders the oj-text-field-container dom which includes the\n// start, middle (where the inside label and inputElem goes),\n// and end pieces of the form component.\n// This does not include user assistance because that is rendered outside the\n// oj-text-field-container; that is rendered in the TextField component.\nexport const TextFieldContent = ({\n  contentVariant = 'input',\n  insideLabel,\n  mainContent,\n  startContent,\n  statusVariant = 'none',\n  styleVariant = 'default',\n  endContent,\n  resize,\n  rootRef,\n  hasZeroStartMargin\n}: Props) => {\n  const { isDisabled, isFocused, isLoading } = useFormFieldContext();\n  const { direction } = useUser();\n  const isLtr = direction === 'ltr';\n  const hasInsideLabel = insideLabel !== undefined;\n  const inputGroupContext = useInputGroupContext();\n  const hasGroupContext = inputGroupContext !== null;\n  // depending on browser direction, apply the appropriate styling.\n  // when 'rtl' the flex row direction is reversed.\n  const inputGroupPosition = inputGroupContext\n    ? inputGroupContext.last\n      ? isLtr\n        ? 'groupRight'\n        : 'groupLeft'\n      : inputGroupContext.index === 0\n      ? isLtr\n        ? 'groupLeft'\n        : 'groupRight'\n      : 'groupMiddle'\n    : undefined;\n\n  const {\n    variantClasses,\n    styles: { textFieldContainerBase }\n  } = useComponentTheme<TextFieldVariantOptions, TextFieldStyles>(TextFieldRedwoodTheme, {\n    statusVariant,\n    styleVariant,\n    contentVariant,\n    insideLabel: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n    focused: isFocused ? 'isFocused' : 'notFocused',\n    disabled: isDisabled ? 'isDisabled' : 'notDisabled',\n    loading: isLoading ? 'isLoading' : 'notLoading',\n    resize: resize ?? 'none',\n    withinGroup: hasGroupContext ? 'isWithinGroup' : undefined,\n    inputGroupPosition\n  });\n\n  const { variantClasses: startContentStyles } = useComponentTheme<TextFieldVariantOptions>(\n    TextFieldRedwoodTheme,\n    {\n      startContent: hasInsideLabel ? 'hasInsideLabel' : 'noInsideLabel',\n      startContentMargin: hasZeroStartMargin ? 'noStartMargin' : 'hasStartMargin',\n      startContentDisabled: isDisabled ? 'isDisabled' : 'notDisabled'\n    }\n  );\n\n  const {\n    variantClasses: middleStyles,\n    styles: { textFieldEndContent }\n  } = useComponentTheme<TextFieldVariantOptions, TextFieldStyles>(TextFieldRedwoodTheme, {\n    middleContent: contentVariant,\n    textAreaResizeDirection: resize && contentVariant === 'textarea' ? direction : undefined\n  });\n\n  return (\n    <div\n      role=\"presentation\"\n      class={classNames([variantClasses, textFieldContainerBase])}\n      ref={rootRef}>\n      {startContent && (\n        <span class={startContentStyles}>\n          <Flex justify=\"center\" align=\"center\" hasZeroMargins={true}>\n            {startContent}\n          </Flex>\n        </span>\n      )}\n      <div class={middleStyles}>\n        {insideLabel}\n        {mainContent}\n      </div>\n      {endContent && (\n        <span class={textFieldEndContent}>\n          <Flex justify=\"center\" align=\"center\" hasZeroMargins={true}>\n            {endContent}\n          </Flex>\n        </span>\n      )}\n    </div>\n  );\n};\n","import { ComponentChildren, ComponentProps, Ref } from 'preact';\n\nimport { LabelValueLayout } from '../UNSAFE_LabelValueLayout';\nimport { TextFieldContent } from './TextFieldContent';\nimport { StyledTextField } from './StyledTextField';\nimport { Size } from '../utils/UNSAFE_size';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { LayoutColumnSpan } from '../utils/UNSAFE_styles/Layout';\nimport { type TestIdProps, useTestId } from '#hooks/UNSAFE_useTestId';\n\n// TextField takes the inputElem and userAssistanceContainer\n// and renders the form component's root dom, along with the\n// TextFieldContent, and the user assistance container.\n\n// The PickedProps are the ones we pass through to the the TextFieldContent\ntype PickedPropsFromTextFieldContent = Pick<\n  ComponentProps<typeof TextFieldContent>,\n  | 'hasZeroStartMargin'\n  | 'contentVariant'\n  | 'startContent'\n  | 'statusVariant'\n  | 'styleVariant'\n  | 'mainContent'\n  | 'endContent'\n  | 'resize'\n>;\ntype PickedPropsFromHTMLElement = Pick<HTMLAttributesSignalExcluded<HTMLElement>, 'id'>;\n// TODO: How should a parent component listen to events for the text field?  The recommendation\n// was to remove event listeners from TextField itself and instead configure the TextFieldInput\n// with them, for example, thus keeping TextField a more pure layout component.  The\n// TextFieldInput renders the focusable input element, and may be a more natural place for\n// listeners.  We would potentially have to add similar listeners for the ReadonlyTextField, but\n// that component renders the focusable element itself;  there is no TextFieldInput or analogous\n// component passed in.  (from review on 3/8/22)\ntype FocusEvents = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'onFocus' | 'onBlur'>;\ntype KeyEvents = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'onKeyDown'>;\ntype MouseEvents = Pick<\n  HTMLAttributesSignalExcluded<HTMLDivElement>,\n  'onMouseDown' | 'onMouseEnter' | 'onMouseLeave'\n>;\ntype LabelProps = {\n  label?: ComponentChildren;\n  labelEdge?: 'inside' | 'start' | 'top';\n  labelStartWidth?: Size;\n};\ntype Props = PickedPropsFromTextFieldContent &\n  PickedPropsFromHTMLElement &\n  FocusEvents &\n  KeyEvents &\n  MouseEvents &\n  LabelProps &\n  TestIdProps & {\n    columnSpan?: LayoutColumnSpan;\n    compactUserAssistance?: ComponentChildren;\n    inlineUserAssistance?: ComponentChildren;\n    mainFieldRef?: Ref<HTMLDivElement>;\n    rootRef?: Ref<HTMLElement>;\n  };\n\n// TODO: Do we need named props for start/endContent, or could they just be children that get\n// wrapped in a flex layout?  (from review on 3/8/22)\n\n// TODO: Instead of passing the inputElem, label, and userAssistance as named props here, should we\n// have a separate layout component that lays them out, which could just be passed as a child\n// to the TextField?  (from review on 3/8/22)\n\nexport const TextField = ({\n  contentVariant,\n  id,\n  endContent,\n  mainContent,\n  startContent,\n  columnSpan,\n  compactUserAssistance,\n  inlineUserAssistance,\n  label,\n  labelEdge,\n  labelStartWidth,\n  mainFieldRef,\n  resize,\n  statusVariant,\n  styleVariant,\n  hasZeroStartMargin,\n  rootRef,\n  onFocus,\n  onBlur,\n  onKeyDown,\n  onMouseDown,\n  onMouseEnter,\n  onMouseLeave,\n  testId\n}: Props) => {\n  const testIdProps = useTestId(testId);\n  // TODO: How should a parent form component render component-specific content within TextField,\n  // for example an aria live region?  Instead of a children prop on TextField, could the parent\n  // component pass comp-specific content through other props, like inputElem?   The parent could\n  // have its own component that composes inputElem with additional DOM.  (from review on 3/8/22)\n\n  const isStartTop = label !== undefined && (labelEdge === 'start' || labelEdge === 'top');\n  const textFieldContent = (\n    <TextFieldContent\n      contentVariant={contentVariant}\n      endContent={endContent}\n      mainContent={mainContent}\n      resize={resize}\n      rootRef={mainFieldRef}\n      startContent={startContent}\n      statusVariant={statusVariant}\n      styleVariant={styleVariant}\n      hasZeroStartMargin={hasZeroStartMargin}\n      {...(!isStartTop ? { insideLabel: label } : {})}\n    />\n  );\n\n  const innerContent = (\n    <>\n      {compactUserAssistance}\n      {textFieldContent}\n      {inlineUserAssistance}\n    </>\n  );\n\n  const styledTextFieldChildren = isStartTop ? (\n    <LabelValueLayout label={label} labelEdge={labelEdge} labelStartWidth={labelStartWidth}>\n      {innerContent}\n    </LabelValueLayout>\n  ) : (\n    innerContent\n  );\n\n  return (\n    <StyledTextField\n      id={id}\n      columnSpan={columnSpan}\n      hasInsideLabel={label !== undefined && labelEdge === 'inside'}\n      onFocusIn={onFocus}\n      onFocusOut={onBlur}\n      onKeyDown={onKeyDown}\n      onMouseDown={onMouseDown}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      ref={rootRef}\n      variant={styleVariant}\n      {...testIdProps}>\n      {styledTextFieldChildren}\n    </StyledTextField>\n  );\n};\n"],"names":["TextFieldContent","contentVariant","insideLabel","mainContent","startContent","statusVariant","styleVariant","endContent","resize","rootRef","hasZeroStartMargin","isDisabled","isFocused","isLoading","useFormFieldContext","direction","useUser","isLtr","hasInsideLabel","undefined","inputGroupContext","useInputGroupContext","hasGroupContext","inputGroupPosition","last","index","variantClasses","styles","textFieldContainerBase","useComponentTheme","TextFieldRedwoodTheme","focused","disabled","loading","withinGroup","startContentStyles","startContentMargin","startContentDisabled","middleStyles","textFieldEndContent","middleContent","textAreaResizeDirection","_jsxs","role","class","classNames","ref","children","_jsx","jsx","Flex","justify","align","hasZeroMargins","id","columnSpan","compactUserAssistance","inlineUserAssistance","label","labelEdge","labelStartWidth","mainFieldRef","onFocus","onBlur","onKeyDown","onMouseDown","onMouseEnter","onMouseLeave","testId","testIdProps","useTestId","isStartTop","textFieldContent","innerContent","_Fragment","Fragment","styledTextFieldChildren","LabelValueLayout","StyledTextField","onFocusIn","onFocusOut","variant"],"mappings":"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"}