{"version":3,"file":"CheckboxRadioFieldStyles.css-681da2d3.js","sources":["../../src/PRIVATE_CheckboxRadioField/useCheckboxRadioField.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\nimport { useMessageSeverity } from '../hooks/PRIVATE_useMessageSeverity';\nimport { merge } from '../utils/UNSAFE_stringUtils';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\nimport { InlineUserAssistance } from '../UNSAFE_UserAssistance';\n\ntype UseCheckboxRadioFieldProps = {\n  ariaDescribedBy?: string;\n  baseId: string;\n  hasValue?: boolean;\n  hasTopUserAssistance?: boolean;\n  hasBottomUserAssistance?: boolean;\n  isFocused?: boolean; // TODO: check if this is needed\n  isReadonly?: boolean;\n  isRequired?: boolean;\n  isDisabled?: boolean;\n  label: string;\n  labelEdge?: 'none' | 'top' | 'start' | 'inside';\n  styleVariant?: 'default' | 'embedded'; // TODO: check if this is needed\n  messages?: ComponentProps<typeof InlineUserAssistance>['messages'];\n  parentComponentVariant: 'radioSet' | 'checkboxSet';\n};\n\ntype GroupProps = {\n  groupProps: {\n    'aria-describedby'?: HTMLAttributesSignalExcluded['aria-describedby'];\n    'aria-labelledby'?: HTMLAttributesSignalExcluded['aria-labelledby'];\n    'aria-label'?: HTMLAttributesSignalExcluded['aria-label'];\n    'aria-required'?: HTMLAttributesSignalExcluded['aria-required'];\n    'aria-invalid'?: HTMLAttributesSignalExcluded['aria-invalid'];\n    'aria-readonly'?: HTMLAttributesSignalExcluded['aria-readonly'];\n    'aria-disabled'?: HTMLAttributesSignalExcluded['aria-disabled'];\n    id: HTMLAttributesSignalExcluded['id'];\n  };\n  labelProps: {\n    forId: string;\n    id: string;\n    isRequiredShown?: boolean;\n  };\n  topUserAssistanceProps?: {\n    id: string;\n    variant: 'reflow';\n  };\n  bottomUserAssistanceProps?: {\n    id: string;\n    isRequiredShown: boolean;\n  };\n  readonlyId?: string;\n};\n\nexport function useCheckboxRadioField({\n  ariaDescribedBy,\n  baseId,\n  hasValue,\n  hasTopUserAssistance,\n  hasBottomUserAssistance,\n  isReadonly,\n  isRequired = false,\n  isDisabled,\n  label,\n  labelEdge,\n  messages,\n  parentComponentVariant\n}: UseCheckboxRadioFieldProps): GroupProps {\n  const optionsGroupId = `${baseId}-group`;\n  const labelId = `${baseId}-label`;\n  const topUaId = hasTopUserAssistance ? `${baseId}-top-ua` : undefined;\n  const bottomUaId = hasBottomUserAssistance ? `${baseId}-bottom-ua` : undefined;\n  const readonlyId = isReadonly ? `${baseId}-readonly` : undefined;\n  const ariaLabel = label && label.length > 0 && labelEdge === 'none' ? label : undefined;\n  const ariaLabelledBy = ariaLabel ? undefined : labelId;\n  const isRadioSet = parentComponentVariant === 'radioSet';\n  const highestMessageSeverity = useMessageSeverity(messages);\n  const hasErrorMessage = highestMessageSeverity === 'error';\n\n  return {\n    groupProps: {\n      'aria-describedby': merge([topUaId, bottomUaId, readonlyId, ariaDescribedBy]),\n      ...(isRadioSet && { 'aria-required': isRequired }),\n      ...(ariaLabelledBy && { 'aria-labelledby': ariaLabelledBy }),\n      ...(ariaLabel && { 'aria-label': ariaLabel }),\n      ...(isReadonly && isRadioSet && { 'aria-readonly': true }),\n      ...(hasErrorMessage && { 'aria-invalid': true }),\n      ...(isDisabled && { 'aria-disabled': true }),\n      id: optionsGroupId\n    },\n    labelProps: {\n      forId: optionsGroupId,\n      id: labelId\n    },\n    // TOP UA is assistive text and help link/text\n    ...(hasTopUserAssistance && {\n      topUserAssistanceProps: {\n        id: topUaId as string,\n        // Use reflow variant so that top UA doesn't have min height\n        variant: 'reflow'\n      }\n    }),\n    // Bottom UA is required indicator or messages\n    ...(hasBottomUserAssistance && {\n      bottomUserAssistanceProps: {\n        id: bottomUaId as string,\n        isRequiredShown: !!isRequired && !hasValue\n      }\n    }),\n    ...(isReadonly && {\n      readonlyId\n    })\n  };\n}\n"],"names":["ariaDescribedBy","baseId","hasValue","hasTopUserAssistance","hasBottomUserAssistance","isReadonly","isRequired","isDisabled","label","labelEdge","messages","parentComponentVariant","optionsGroupId","labelId","topUaId","undefined","bottomUaId","readonlyId","ariaLabel","length","ariaLabelledBy","isRadioSet","hasErrorMessage","useMessageSeverity","groupProps","merge","id","labelProps","forId","topUserAssistanceProps","variant","bottomUserAssistanceProps","isRequiredShown"],"mappings":"2UA0DgB,UAAsBA,gBACpCA,EAAeC,OACfA,EAAMC,SACNA,EAAQC,qBACRA,EAAoBC,wBACpBA,EAAuBC,WACvBA,EAAUC,WACVA,GAAa,EAAKC,WAClBA,EAAUC,MACVA,EAAKC,UACLA,EAASC,SACTA,EAAQC,uBACRA,IAEA,MAAMC,EAAiB,GAAGX,UACpBY,EAAU,GAAGZ,UACba,EAAUX,EAAuB,GAAGF,gBAAkBc,EACtDC,EAAaZ,EAA0B,GAAGH,mBAAqBc,EAC/DE,EAAaZ,EAAa,GAAGJ,kBAAoBc,EACjDG,EAAYV,GAASA,EAAMW,OAAS,GAAmB,SAAdV,EAAuBD,OAAQO,EACxEK,EAAiBF,OAAYH,EAAYF,EACzCQ,EAAwC,aAA3BV,EAEbW,EAA6C,UADpBC,qBAAmBb,GAGlD,MAAO,CACLc,WAAY,CACV,mBAAoBC,EAAKA,MAAC,CAACX,EAASE,EAAYC,EAAYjB,OACxDqB,GAAc,CAAE,gBAAiBf,MACjCc,GAAkB,CAAE,kBAAmBA,MACvCF,GAAa,CAAE,aAAcA,MAC7Bb,GAAcgB,GAAc,CAAE,iBAAiB,MAC/CC,GAAmB,CAAE,gBAAgB,MACrCf,GAAc,CAAE,iBAAiB,GACrCmB,GAAId,GAENe,WAAY,CACVC,MAAOhB,EACPc,GAAIb,MAGFV,GAAwB,CAC1B0B,uBAAwB,CACtBH,GAAIZ,EAEJgB,QAAS,cAIT1B,GAA2B,CAC7B2B,0BAA2B,CACzBL,GAAIV,EACJgB,kBAAmB1B,IAAeJ,OAGlCG,GAAc,CAChBY,cAGN"}