{"version":3,"file":"CheckboxControl-83484a5a.js","sources":["../../src/PRIVATE_CheckboxControl/CheckboxControl.tsx"],"sourcesContent":["import { ComponentChild, ComponentProps, Ref } from 'preact';\nimport { forwardRef, createRef, useEffect, useRef } from 'preact/compat';\n\nimport { useCheckboxRadioContext } from '../PRIVATE_CheckboxRadioField/CheckboxRadioContext';\nimport { HiddenAccessible } from '../UNSAFE_HiddenAccessible';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { useFocus } from '../hooks/UNSAFE_useFocus';\nimport { IconUserAssistance, InlineUserAssistance } from '../UNSAFE_UserAssistance';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { useTabbableMode } from '../hooks/UNSAFE_useTabbableMode';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { StyledCheckbox } from '../PRIVATE_StyledCheckbox';\nimport { CheckboxRedwoodTheme } from '../UNSAFE_Checkbox/themes/redwood/CheckboxTheme';\nimport { useActive } from '../hooks/UNSAFE_useActive';\nimport {\n  CheckboxVariantOptions,\n  CheckboxStyles\n} from '../UNSAFE_Checkbox/themes/CheckboxStyles.css';\nimport { merge } from '#utils/UNSAFE_stringUtils';\nimport { useFocusWithin } from '#hooks/UNSAFE_useFocusWithin';\nimport { LayoutColumnSpan, layoutSpanStyles } from '#utils/UNSAFE_styles/Layout';\nimport { classNames } from '#utils/UNSAFE_classNames';\n\ntype InlineUserAssistanceProps = ComponentProps<typeof InlineUserAssistance>;\ntype StyledCheckboxProps = ComponentProps<typeof StyledCheckbox>;\n\ntype CheckboxControlProps = Pick<\n  StyledCheckboxProps,\n  | 'aria-describedby'\n  | 'name'\n  | 'value'\n  | 'onChange'\n  | 'onKeyUp'\n  | 'isReadonly'\n  | 'isDisabled'\n  | 'isRequired'\n> &\n  Pick<InlineUserAssistanceProps, 'assistiveText' | 'helpSourceLink' | 'helpSourceText'> & {\n    /**\n     * Text that describes the checkbox value.\n     */\n    children: ComponentChild;\n    /**\n     * Specifies how many columns to span in a FormLayout with direction === 'row'\n     */\n    columnSpan?: LayoutColumnSpan;\n    /**\n     * Whether the input element is checked.\n     */\n    isChecked?: boolean;\n  };\n\n/**\n * CheckboxControl is an internal subcomponent used by both Checkbox and CheckboxItem.\n * It handles styling, placement of label, assistive text, and accessibility text for both parent components.\n * onCommit handling is handled in the parent components.\n */\nconst CheckboxControl = forwardRef(\n  (\n    {\n      'aria-describedby': ariaDescribedBy,\n      name,\n      value,\n      children,\n      isChecked,\n      isDisabled,\n      isReadonly,\n      isRequired,\n      onChange,\n      onKeyUp,\n      assistiveText,\n      helpSourceLink,\n      helpSourceText,\n      columnSpan = 1\n    }: CheckboxControlProps,\n    ref: Ref<HTMLInputElement> = null\n  ) => {\n    // hooks\n    const id = useId();\n    const childWrapperRef = useRef<HTMLSpanElement>(null);\n    const { isTabbable } = useTabbableMode();\n    const { isActive, activeProps } = useActive();\n    const { isFocusRingShown } = useCheckboxRadioContext();\n    const labelRef = createRef<HTMLLabelElement>();\n    const {\n      isFocus,\n      focusProps: { onFocus, onBlur }\n    } = useFocus();\n\n    // styling\n    const {\n      classes: checkboxClasses,\n      styles: { valueLabelStyle, checkboxSpanStyle }\n    } = useComponentTheme<CheckboxVariantOptions, CheckboxStyles>(CheckboxRedwoodTheme, {\n      disabled: isDisabled ? 'isDisabled' : 'notDisabled',\n      focused: isFocus && isFocusRingShown ? 'isFocused' : 'notFocused'\n    });\n\n    // help available\n    const hasUserAssistive = !isDisabled && !isReadonly && !!(assistiveText || helpSourceLink);\n    const helpAvailableId = hasUserAssistive ? `${id}-help-available` : undefined;\n    const uaId = hasUserAssistive ? `${id}-icon-ua` : undefined;\n    const { formControl_helpAvailable } = useTranslationBundle<BundleType>(\n      '@oracle/oraclejet-preact'\n    );\n    const helpAvailableString = formControl_helpAvailable();\n    const userAssistiveHelp = hasUserAssistive ? (\n      <HiddenAccessible id={helpAvailableId}>{helpAvailableString}</HiddenAccessible>\n    ) : undefined;\n\n    // prevent auto scrolling\n    const onKeyDown = (event: KeyboardEvent) => {\n      const { key } = event;\n      if (!isReadonly && key !== undefined && key === ' ') {\n        event.preventDefault();\n      }\n    };\n\n    // we want to prevent mouseDown on Links to set active\n    const onMouseDownHandler = (e: Event) => {\n      // check to see if the target is within an <a> tag and the tag is within the label\n      const closestAnchor = (e.target as Element).closest('a');\n      closestAnchor && childWrapperRef.current?.contains(closestAnchor)\n        ? e.stopPropagation()\n        : activeProps['onMouseDown']?.(e);\n    };\n\n    // don't allow key down to set active state\n    delete activeProps['onKeyDown'];\n    const { focusProps, isFocused: isFocusedWithin } = useFocusWithin();\n\n    // JET-70100 - ensure checkbox is scrolled into view when focused and focus ring is shown\n    useEffect(() => {\n      if (isFocus && isFocusRingShown) {\n        labelRef?.current?.scrollIntoView({ block: 'nearest' });\n      }\n    }, [isFocus, isFocusRingShown, labelRef]);\n\n    // The top level element needs the column span class on it.\n    const classes = layoutSpanStyles.layoutSpanColumn[columnSpan];\n\n    return (\n      <label ref={labelRef} class={classNames([checkboxClasses, classes])}>\n        <span class={checkboxSpanStyle} {...activeProps}>\n          <StyledCheckbox\n            aria-describedby={merge([ariaDescribedBy, helpAvailableId])}\n            name={name}\n            value={value}\n            onChange={onChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            onKeyUp={onKeyUp}\n            onKeyDown={onKeyDown}\n            isActive={isActive}\n            isChecked={isChecked ? 'checked' : 'unchecked'}\n            isDisabled={isDisabled}\n            isReadonly={isReadonly}\n            isRequired={isRequired}\n            ref={ref}\n          />\n        </span>\n        {userAssistiveHelp}\n        <span class={valueLabelStyle}>\n          <span\n            {...activeProps}\n            {...focusProps}\n            onMouseDown={onMouseDownHandler}\n            ref={childWrapperRef}>\n            {children}\n          </span>\n          {hasUserAssistive && (\n            <IconUserAssistance\n              assistiveText={assistiveText}\n              helpSourceLink={helpSourceLink}\n              helpSourceText={helpSourceText}\n              isTabbable={isTabbable && (isFocus || isFocusedWithin)}\n              id={uaId}\n            />\n          )}\n        </span>\n      </label>\n    );\n  }\n);\n\nexport { CheckboxControl };\n"],"names":["CheckboxControl","forwardRef","ariaDescribedBy","name","value","children","isChecked","isDisabled","isReadonly","isRequired","onChange","onKeyUp","assistiveText","helpSourceLink","helpSourceText","columnSpan","ref","id","useId","childWrapperRef","useRef","isTabbable","useTabbableMode","isActive","activeProps","useActive","isFocusRingShown","useCheckboxRadioContext","labelRef","createRef","isFocus","focusProps","onFocus","onBlur","useFocus","classes","checkboxClasses","styles","valueLabelStyle","checkboxSpanStyle","useComponentTheme","CheckboxRedwoodTheme","disabled","focused","hasUserAssistive","helpAvailableId","undefined","uaId","formControl_helpAvailable","useTranslationBundle","helpAvailableString","userAssistiveHelp","_jsx","HiddenAccessible","isFocused","isFocusedWithin","useFocusWithin","useEffect","current","scrollIntoView","block","layoutSpanStyles","layoutSpanColumn","_jsxs","class","classNames","jsx","StyledCheckbox","merge","onKeyDown","event","key","preventDefault","onMouseDown","e","closestAnchor","target","closest","contains","stopPropagation","IconUserAssistance"],"mappings":"i6DA0DA,MAAMA,EAAkBC,EAAAA,YACtB,EAEI,mBAAoBC,EACpBC,OACAC,QACAC,WACAC,YACAC,aACAC,aACAC,aACAC,WACAC,UACAC,gBACAC,iBACAC,iBACAC,aAAa,GAEfC,EAA6B,QAG7B,MAAMC,EAAKC,EAAAA,QACLC,EAAkBC,SAAwB,OAC1CC,WAAEA,GAAeC,EAAAA,mBACjBC,SAAEA,EAAQC,YAAEA,GAAgBC,EAASA,aACrCC,iBAAEA,GAAqBC,EAAAA,0BACvBC,EAAWC,EAAAA,aACXC,QACJA,EACAC,YAAYC,QAAEA,EAAOC,OAAEA,IACrBC,EAAAA,YAIFC,QAASC,EACTC,QAAQC,gBAAEA,EAAeC,kBAAEA,IACzBC,EAAiBA,kBAAyCC,uBAAsB,CAClFC,SAAUnC,EAAa,aAAe,cACtCoC,QAASb,GAAWJ,EAAmB,YAAc,eAIjDkB,IAAoBrC,GAAeC,IAAiBI,IAAiBC,GACrEgC,EAAkBD,EAAmB,GAAG3B,wBAAsB6B,EAC9DC,EAAOH,EAAmB,GAAG3B,iBAAe6B,GAC5CE,0BAAEA,GAA8BC,EAAoBA,qBACxD,4BAEIC,EAAsBF,IACtBG,EAAoBP,EACxBQ,MAACC,mBAAgB,CAACpC,GAAI4B,WAAkBK,SACtCJ,SAoBGtB,EAAuB,UAC9B,MAAMO,WAAEA,EAAYuB,UAAWC,GAAoBC,EAAcA,iBAGjEC,EAAAA,WAAU,KACJ3B,GAAWJ,GACbE,GAAU8B,SAASC,eAAe,CAAEC,MAAO,WAC5C,GACA,CAAC9B,EAASJ,EAAkBE,IAG/B,MAAMO,EAAU0B,EAAAA,iBAAiBC,iBAAiB/C,GAElD,OACEgD,OAAO,QAAA,CAAA/C,IAAKY,EAAUoC,MAAOC,EAAAA,WAAW,CAAC7B,EAAiBD,IACxD9B,SAAA,CAAA+C,EAAAA,IAAA,OAAA,CAAMY,MAAOzB,KAAuBf,EAClCnB,SAAA+C,EAAAc,IAACC,iBACmB,CAAA,mBAAAC,EAAKA,MAAC,CAAClE,EAAiB2C,IAC1C1C,KAAMA,EACNC,MAAOA,EACPM,SAAUA,EACVuB,OAAQA,EACRD,QAASA,EACTrB,QAASA,EACT0D,UAzCWC,IACjB,MAAMC,IAAEA,GAAQD,EACX9D,QAAsBsC,IAARyB,GAA6B,MAARA,GACtCD,EAAME,gBACP,EAsCKjD,SAAUA,EACVjB,UAAWA,EAAY,UAAY,YACnCC,WAAYA,EACZC,WAAYA,EACZC,WAAYA,EACZO,IAAKA,MAGRmC,EACDY,EAAAA,aAAMC,MAAO1B,EAAejC,SAAA,CAC1B+C,EAAAA,eACM5B,KACAO,EACJ0C,YA/CoBC,IAE1B,MAAMC,EAAiBD,EAAEE,OAAmBC,QAAQ,KACpDF,GAAiBxD,EAAgBuC,SAASoB,SAASH,GAC/CD,EAAEK,kBACFvD,EAAyB,cAAIkD,EAAE,EA2C7B1D,IAAKG,EAAed,SACnBA,IAEFuC,GACCQ,EAAAc,IAACc,qBACC,CAAApE,cAAeA,EACfC,eAAgBA,EAChBC,eAAgBA,EAChBO,WAAYA,IAAeS,GAAWyB,GACtCtC,GAAI8B,SAKZ"}