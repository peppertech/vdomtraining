{"version":3,"file":"Modal-36acfc12.js","sources":["../../src/UNSAFE_Modal/hooks/useModal.ts","../../src/UNSAFE_Modal/ModalBackdrop.tsx","../../src/UNSAFE_Modal/ModalManager.ts","../../src/UNSAFE_Modal/Modal.tsx"],"sourcesContent":["import { useRef, useCallback, useEffect } from 'preact/compat';\n\nexport type UseModalProps = Readonly<{\n  /**\n   * Determines whether the Modal is open.\n   */\n  isOpen: boolean;\n  /**\n   * On backdrop click callback.\n   */\n  onBackdropClick?: (event: MouseEvent) => void;\n}>;\n\n/**\n *\n * @param props\n */\nexport const useModal = (props: UseModalProps) => {\n  const { isOpen, onBackdropClick: onBackdropClickProp } = props;\n\n  const backdropRef = useRef<HTMLDivElement>(null);\n\n  const mouseDownTarget = useRef<EventTarget | null>(null);\n\n  const onMouseDown = useCallback((event: MouseEvent) => {\n    if (backdropRef.current === event.target) {\n      mouseDownTarget.current = event.target;\n    }\n  }, []);\n\n  const onBackdropClick = useCallback(\n    (event: MouseEvent) => {\n      if (backdropRef.current === event.target) {\n        event.stopPropagation();\n        // event should originate on the same target\n        if (mouseDownTarget.current === event.target) {\n          onBackdropClickProp?.(event);\n        }\n      }\n    },\n    [onBackdropClickProp]\n  );\n\n  useEffect(() => {\n    const modal = backdropRef.current;\n\n    if (modal) {\n      modal.addEventListener('mousedown', onMouseDown);\n      modal.addEventListener('click', onBackdropClick);\n\n      return () => {\n        modal.removeEventListener('mousedown', onMouseDown);\n        modal.removeEventListener('click', onBackdropClick);\n      };\n    }\n\n    return () => {};\n  }, [isOpen, onMouseDown, onBackdropClick]);\n\n  return {\n    backdropRef\n  };\n};\n\nexport default useModal;\n","import { forwardRef, ForwardedRef } from 'preact/compat';\nimport { multiVariantStyles } from './themes/ModalStyles.css';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children'>;\n\ntype Props = IntrinsicProps & {\n  /**\n   * Specifies the backdrop is visible or transparent. Default is 'scrim' (visible).\n   */\n  variant?: 'scrim' | 'transparent';\n};\n\nconst ModalBackdrop = forwardRef<HTMLDivElement, Props>(\n  ({ variant = 'scrim' }, ref: ForwardedRef<HTMLDivElement | null>) => {\n    const variantClasses = multiVariantStyles({\n      backdrop: variant === 'transparent' ? 'transparent' : 'scrim'\n    });\n\n    return <div ref={ref} class={variantClasses} />;\n  }\n);\n\nexport default ModalBackdrop;\n","interface Modal {\n  modalRef?: HTMLDivElement | null;\n}\n\n/**\n * CSS property backup type.\n */\ntype StyleBackup = Array<{\n  property: string;\n  value: string;\n}>;\n\n/**\n * ModalDescriptor. Associates an open Modal with overlayed aria-hidden children.\n */\ntype ModalDescriptor = {\n  modal: Modal;\n  ariaHiddenChildren: Element[];\n};\n\n/**\n * Returns an array of element's siblings.\n *\n * @param elem\n * @returns\n */\nfunction getSiblings(elem: Element): Element[] {\n  const siblings: Element[] = [];\n  let sibling = elem.previousSibling;\n  while (sibling != null) {\n    if (sibling.nodeType === 1) {\n      siblings.push(sibling as Element);\n    }\n    sibling = sibling.previousSibling;\n  }\n  sibling = elem.nextSibling;\n  while (sibling != null) {\n    if (sibling.nodeType === 1) {\n      siblings.push(sibling as Element);\n    }\n    sibling = sibling.nextSibling;\n  }\n  return siblings;\n}\n\n/**\n * Sets aria-hidden=true on Modal ancestors and siblings.\n *\n * @param modal\n * @returns An array of modified elements.\n */\nfunction setAriaHiddenOnBackgroundElements(modal: Modal) {\n  if (!modal.modalRef) {\n    return [];\n  }\n  const ariaHiddenElements: Element[] = [];\n  let node: Element | null = modal.modalRef.parentElement as Element;\n\n  do {\n    if (!node) {\n      break;\n    }\n    const siblings = getSiblings(node);\n    siblings.forEach((elem: Element) => {\n      if (elem.tagName.toLowerCase() !== 'script' && elem.getAttribute('aria-hidden') !== 'true') {\n        ariaHiddenElements.push(elem);\n        elem.setAttribute('aria-hidden', 'true');\n      }\n    });\n    node = node.parentElement;\n  } while (node && node.tagName.toLowerCase() !== 'body');\n\n  return ariaHiddenElements;\n}\n\n/**\n * Resets the aria-hidden state on previously aria-hidden elements.\n *\n * @param elements\n */\nfunction resetAriaHiddenOnBackgroundElements(elements: Element[]) {\n  elements.forEach((elem) => {\n    elem.removeAttribute('aria-hidden');\n  });\n}\n\nexport default class ModalManager {\n  /**\n   * Array of ModalDescriptors managed by ModalManager\n   */\n  private modals: ModalDescriptor[];\n  /**\n   * Backup of the main container's (body) CSS props potentially altered by Modal.\n   */\n  private styleBackup: StyleBackup;\n\n  constructor() {\n    this.modals = [];\n    this.styleBackup = [];\n  }\n\n  /**\n   * Registers a modal with ModalManager\n   *\n   * @param modal\n   * @returns\n   */\n  push(modal: Modal) {\n    const modalIndex = this._findModalIndex(modal);\n\n    if (modalIndex !== -1) {\n      // Do not try to register the same modal multiple times\n      return;\n    }\n\n    this.modals.push({\n      modal: modal,\n      ariaHiddenChildren: setAriaHiddenOnBackgroundElements(modal)\n    });\n\n    // if this is the first modal in the container, block container scrolling\n    if (this.modals.length === 1) {\n      const ownerDocument = this._getOwnerDocument(modal.modalRef);\n      const scrollContainer = ownerDocument.body;\n\n      const scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;\n      if (scrollBarWidth > 1) {\n        // in RTL, scrollbar is on the left\n        const scrollBarLeft =\n          Math.round(document.documentElement.getBoundingClientRect().left) +\n          document.documentElement.scrollLeft;\n\n        if (scrollBarLeft) {\n          this.styleBackup.push({\n            property: 'padding-left',\n            value: scrollContainer.style.paddingLeft\n          });\n          scrollContainer.style.paddingLeft = `${scrollBarWidth}px`;\n        } else {\n          this.styleBackup.push({\n            property: 'padding-right',\n            value: scrollContainer.style.paddingRight\n          });\n          scrollContainer.style.paddingRight = `${scrollBarWidth}px`;\n        }\n      }\n\n      this.styleBackup.push({ property: 'overflow', value: scrollContainer.style.overflow });\n      this.styleBackup.push({ property: 'overflow-x', value: scrollContainer.style.overflowX });\n      this.styleBackup.push({ property: 'overflow-y', value: scrollContainer.style.overflowY });\n\n      scrollContainer.style.overflow = 'hidden';\n    }\n  }\n\n  /**\n   * Unegisters a modal from ModalManager\n   *\n   * @param modal\n   * @returns\n   */\n  pop(modal: Modal) {\n    const modalIndex = this._findModalIndex(modal);\n\n    if (modalIndex === -1) {\n      // modal to be removed not found!'\n      return;\n    }\n\n    if (modalIndex !== this.modals.length - 1) {\n      // trying to remove modal out of order!\n      return;\n    }\n\n    const modalDescriptor = this.modals.pop();\n\n    if (modalDescriptor) {\n      resetAriaHiddenOnBackgroundElements(modalDescriptor?.ariaHiddenChildren);\n    }\n\n    // if this was the last modal in the container, restore its overflow props\n    if (this.modals.length === 0) {\n      const ownerDocument = this._getOwnerDocument(modal.modalRef);\n      const scrollContainer = ownerDocument.body;\n\n      this.styleBackup.forEach(({ property, value }) => {\n        scrollContainer.style.setProperty(property, value);\n      });\n    }\n  }\n\n  isTopModal(modal: Modal): boolean {\n    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;\n  }\n\n  private _findModalIndex(modal: Modal): number {\n    let index = -1;\n    this.modals.forEach((elem, idx) => {\n      if (elem.modal === modal) {\n        index = idx;\n        return;\n      }\n    });\n    return index;\n  }\n\n  private _getOwnerDocument(node: Node | null | undefined): Document {\n    return (node && node.ownerDocument) || document;\n  }\n}\n","import { useEffect, useRef } from 'preact/compat';\nimport { useModal } from './hooks/useModal';\nimport { Layer } from '../UNSAFE_Layer';\nimport ModalBackdrop from './ModalBackdrop';\nimport ModalManager from './ModalManager';\nimport { baseStyle } from './themes/ModalStyles.css';\nimport { HTMLAttributesSignalExcluded } from '../utils/UNSAFE_attributeUtils';\n\n// Global ModalManager singleton instance\nconst globalModalManager = new ModalManager();\n\ntype IntrinsicProps = Pick<HTMLAttributesSignalExcluded<HTMLDivElement>, 'children'>;\ntype UseModalProps = Parameters<typeof useModal>[0];\ntype Props = UseModalProps &\n  IntrinsicProps & {\n    /**\n     * Determines if the modal is active.\n     */\n    isOpen: boolean;\n    /**\n     * Specifies if modal backdrop is visible or transparent. Default is 'scrim' (visible).\n     */\n    backdropVariant?: 'scrim' | 'transparent';\n    /**\n     * A callback to be invoked when a click on the modal backdrop occurs.\n     */\n    onBackdropClick?: (event: MouseEvent) => void;\n  };\n\n/**\n * Modal is a low-level component that provides the 'modality' feature with built-in overlay (scrim).\n * It is typically used for building higher-level components (such as 'Dialog' or 'Popup') that need\n * to support modal behavior preventing interaction with the rest of the page while the modal is open.\n */\nconst Modal = ({ children, isOpen, onBackdropClick, backdropVariant }: Props) => {\n  // get the global ModalContext instance\n  const modalManager = globalModalManager;\n\n  const { backdropRef } = useModal({ isOpen, onBackdropClick });\n  // main modal element ref\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  // modal ref cache, required to lookup the item in modal manger when the actual ref is unmounted\n  const modal = useRef<{\n    modalRef?: typeof modalRef.current;\n  }>({});\n\n  // populates and returns the modal ref cache\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    return modal.current;\n  };\n\n  useEffect(() => {\n    if (isOpen && modalRef.current) {\n      modalManager?.push(getModal());\n    } else {\n      if (modal.current.modalRef) {\n        modalManager?.pop(getModal());\n      }\n    }\n  }, [isOpen, modalManager]);\n\n  useEffect(() => {\n    const modalRef = modal.current.modalRef;\n    return () => {\n      if (modalRef) {\n        modalManager?.pop(getModal());\n      }\n    };\n  }, [modalManager]);\n\n  return isOpen ? (\n    <Layer>\n      <div ref={modalRef} class={baseStyle}>\n        <ModalBackdrop ref={backdropRef} variant={backdropVariant} />\n        {children}\n      </div>\n    </Layer>\n  ) : null;\n};\n\nexport default Modal;\n"],"names":["useModal","props","isOpen","onBackdropClick","onBackdropClickProp","backdropRef","useRef","mouseDownTarget","onMouseDown","useCallback","event","current","target","stopPropagation","useEffect","modal","addEventListener","removeEventListener","ModalBackdrop","forwardRef","variant","ref","variantClasses","multiVariantStyles","backdrop","_jsx","class","getSiblings","elem","siblings","sibling","previousSibling","nodeType","push","nextSibling","setAriaHiddenOnBackgroundElements","modalRef","ariaHiddenElements","node","parentElement","forEach","tagName","toLowerCase","getAttribute","setAttribute","globalModalManager","constructor","this","modals","styleBackup","_findModalIndex","ariaHiddenChildren","length","scrollContainer","_getOwnerDocument","body","scrollBarWidth","window","innerWidth","document","documentElement","clientWidth","Math","round","getBoundingClientRect","left","scrollLeft","property","value","style","paddingLeft","paddingRight","overflow","overflowX","overflowY","pop","modalIndex","modalDescriptor","elements","removeAttribute","setProperty","isTopModal","index","idx","ownerDocument","children","backdropVariant","modalManager","getModal","Layer","_jsxs","baseStyle"],"mappings":"8KAiBa,MAAAA,EAAYC,IACvB,MAAMC,OAAEA,EAAQC,gBAAiBC,GAAwBH,EAEnDI,EAAcC,SAAuB,MAErCC,EAAkBD,SAA2B,MAE7CE,EAAcC,eAAaC,IAC3BL,EAAYM,UAAYD,EAAME,SAChCL,EAAgBI,QAAUD,EAAME,OACjC,GACA,IAEGT,EAAkBM,eACrBC,IACKL,EAAYM,UAAYD,EAAME,SAChCF,EAAMG,kBAEFN,EAAgBI,UAAYD,EAAME,QACpCR,IAAsBM,GAEzB,GAEH,CAACN,IAmBH,OAhBAU,EAAAA,WAAU,KACR,MAAMC,EAAQV,EAAYM,QAE1B,OAAII,GACFA,EAAMC,iBAAiB,YAAaR,GACpCO,EAAMC,iBAAiB,QAASb,GAEzB,KACLY,EAAME,oBAAoB,YAAaT,GACvCO,EAAME,oBAAoB,QAASd,EAAgB,GAIhD,MAAQ,GACd,CAACD,EAAQM,EAAaL,IAElB,CACLE,cACD,EChDGa,EAAgBC,EAAUA,YAC9B,EAAGC,UAAU,SAAWC,KACtB,MAAMC,EAAiBC,EAAAA,mBAAmB,CACxCC,SAAsB,gBAAZJ,EAA4B,cAAgB,UAGxD,OAAOK,EAAAA,IAAA,MAAA,CAAKJ,IAAKA,EAAKK,MAAOJ,GAAkB,ICOnD,SAASK,EAAYC,GACnB,MAAMC,EAAsB,GAC5B,IAAIC,EAAUF,EAAKG,gBACnB,KAAkB,MAAXD,GACoB,IAArBA,EAAQE,UACVH,EAASI,KAAKH,GAEhBA,EAAUA,EAAQC,gBAGpB,IADAD,EAAUF,EAAKM,YACG,MAAXJ,GACoB,IAArBA,EAAQE,UACVH,EAASI,KAAKH,GAEhBA,EAAUA,EAAQI,YAEpB,OAAOL,CACT,CAQA,SAASM,EAAkCpB,GACzC,IAAKA,EAAMqB,SACT,MAAO,GAET,MAAMC,EAAgC,GACtC,IAAIC,EAAuBvB,EAAMqB,SAASG,cAE1C,EAAG,CACD,IAAKD,EACH,MAEeX,EAAYW,GACpBE,SAASZ,IACmB,WAA/BA,EAAKa,QAAQC,eAAmE,SAArCd,EAAKe,aAAa,iBAC/DN,EAAmBJ,KAAKL,GACxBA,EAAKgB,aAAa,cAAe,QAClC,IAEHN,EAAOA,EAAKC,aACb,OAAQD,GAAuC,SAA/BA,EAAKG,QAAQC,eAE9B,OAAOL,CACT,CChEA,MAAMQ,EAAqB,ID6Eb,MAUZ,WAAAC,GACEC,KAAKC,OAAS,GACdD,KAAKE,YAAc,EACpB,CAQD,IAAAhB,CAAKlB,GAGH,IAAoB,IAFDgC,KAAKG,gBAAgBnC,KAOxCgC,KAAKC,OAAOf,KAAK,CACflB,MAAOA,EACPoC,mBAAoBhB,EAAkCpB,KAI7B,IAAvBgC,KAAKC,OAAOI,QAAc,CAC5B,MACMC,EADgBN,KAAKO,kBAAkBvC,EAAMqB,UACbmB,KAEhCC,EAAiBC,OAAOC,WAAaC,SAASC,gBAAgBC,YACpE,GAAIL,EAAiB,EAAG,CAGpBM,KAAKC,MAAMJ,SAASC,gBAAgBI,wBAAwBC,MAC5DN,SAASC,gBAAgBM,YAGzBnB,KAAKE,YAAYhB,KAAK,CACpBkC,SAAU,eACVC,MAAOf,EAAgBgB,MAAMC,cAE/BjB,EAAgBgB,MAAMC,YAAc,GAAGd,QAEvCT,KAAKE,YAAYhB,KAAK,CACpBkC,SAAU,gBACVC,MAAOf,EAAgBgB,MAAME,eAE/BlB,EAAgBgB,MAAME,aAAe,GAAGf,MAE3C,CAEDT,KAAKE,YAAYhB,KAAK,CAAEkC,SAAU,WAAYC,MAAOf,EAAgBgB,MAAMG,WAC3EzB,KAAKE,YAAYhB,KAAK,CAAEkC,SAAU,aAAcC,MAAOf,EAAgBgB,MAAMI,YAC7E1B,KAAKE,YAAYhB,KAAK,CAAEkC,SAAU,aAAcC,MAAOf,EAAgBgB,MAAMK,YAE7ErB,EAAgBgB,MAAMG,SAAW,QAClC,CACF,CAQD,GAAAG,CAAI5D,GACF,MAAM6D,EAAa7B,KAAKG,gBAAgBnC,GAExC,IAAoB,IAAhB6D,EAEF,OAGF,GAAIA,IAAe7B,KAAKC,OAAOI,OAAS,EAEtC,OAGF,MAAMyB,EAAkB9B,KAAKC,OAAO2B,MA9FxC,IAA6CG,EAqGzC,GALID,IAhGqCC,EAiGHD,GAAiB1B,mBAhGzD2B,EAAStC,SAASZ,IAChBA,EAAKmD,gBAAgB,cAAc,KAmGR,IAAvBhC,KAAKC,OAAOI,OAAc,CAC5B,MACMC,EADgBN,KAAKO,kBAAkBvC,EAAMqB,UACbmB,KAEtCR,KAAKE,YAAYT,SAAQ,EAAG2B,WAAUC,YACpCf,EAAgBgB,MAAMW,YAAYb,EAAUC,EAAM,GAErD,CACF,CAED,UAAAa,CAAWlE,GACT,OAAOgC,KAAKC,OAAOI,OAAS,GAAKL,KAAKC,OAAOD,KAAKC,OAAOI,OAAS,KAAOrC,CAC1E,CAEO,eAAAmC,CAAgBnC,GACtB,IAAImE,GAAS,EAOb,OANAnC,KAAKC,OAAOR,SAAQ,CAACZ,EAAMuD,KACrBvD,EAAKb,QAAUA,IACjBmE,EAAQC,EAET,IAEID,CACR,CAEO,iBAAA5B,CAAkBhB,GACxB,OAAQA,GAAQA,EAAK8C,eAAkBzB,QACxC,WC9KW,EAAG0B,WAAUnF,SAAQC,kBAAiBmF,sBAElD,MAAMC,EAAe1C,GAEfxC,YAAEA,GAAgBL,EAAS,CAAEE,SAAQC,oBAErCiC,EAAW9B,SAAuB,MAGlCS,EAAQT,SAEX,CAAA,GAGGkF,EAAW,KACfzE,EAAMJ,QAAQyB,SAAWA,EAASzB,QAC3BI,EAAMJ,SAsBf,OAnBAG,EAAAA,WAAU,KACJZ,GAAUkC,EAASzB,QACrB4E,GAActD,KAAKuD,KAEfzE,EAAMJ,QAAQyB,UAChBmD,GAAcZ,IAAIa,IAErB,GACA,CAACtF,EAAQqF,IAEZzE,EAAAA,WAAU,KACR,MAAMsB,EAAWrB,EAAMJ,QAAQyB,SAC/B,MAAO,KACDA,GACFmD,GAAcZ,IAAIa,IACnB,CACF,GACA,CAACD,IAEGrF,EACLuB,EAAAA,IAACgE,EAAKA,MAAA,CAAAJ,SACJK,EAAAA,KAAK,MAAA,CAAArE,IAAKe,EAAUV,MAAOiE,EAAAA,UACzBN,SAAA,CAAA5D,EAAAA,IAACP,EAAa,CAACG,IAAKhB,EAAae,QAASkE,IACzCD,OAGH,IAAI"}