{"version":3,"file":"keys-cc1cb01d.js","sources":["../../src/utils/UNSAFE_keys/keys.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport type ImmutableSet<V> = {\n  size: number;\n  has(value: V): boolean;\n  values(): IterableIterator<V>;\n};\n\n/**\n * Type for key set used mainly for selection and expansion\n */\nexport type Keys<K> =\n  | {\n      all: true;\n      keys?: never;\n      deletedKeys: ImmutableSet<K>;\n    }\n  | {\n      all: false;\n      keys: ImmutableSet<K>;\n      deletedKeys?: never;\n    };\n\n/**\n * Returns true if the key is contains in keys, false otherwise\n */\nexport const containsKey = <K>(keys: Keys<K> | undefined, key: K) => {\n  if (keys == null) {\n    return false;\n  }\n  if (!keys.all) {\n    return keys.keys.has(key);\n  }\n  return !keys.deletedKeys.has(key);\n};\n\n/**\n * Returns a new Keys that includes the specified key.\n * If the key is already in keys, then just return keys.\n */\nexport const addKey = <K>(keys: Keys<K>, key: K) => {\n  if (keys.all && keys.deletedKeys.has(key)) {\n    const keySet = new Set(keys.deletedKeys.values());\n    keySet.delete(key);\n    keys = { all: true, deletedKeys: keySet };\n  } else if (!keys.all && !keys.keys.has(key)) {\n    const keySet = new Set(keys.keys.values());\n    keySet.add(key);\n    keys = { all: false, keys: keySet };\n  }\n  return keys;\n};\n\n/**\n * Returns a new Keys that excludes the specified key.\n * If the key is already in keys, then just return keys.\n * disallowEmpty if set to true, will ensure that the returning keys will not be empty.\n */\nexport const removeKey = <K>(keys: Keys<K>, key: K, disallowEmpty: boolean) => {\n  if (keys.all && !keys.deletedKeys.has(key)) {\n    const keySet = new Set(keys.deletedKeys.values());\n    keySet.add(key);\n    keys = { all: true, deletedKeys: keySet };\n  } else if (!keys.all && keys.keys.has(key) && (!disallowEmpty || keys.keys.size > 1)) {\n    const keySet = new Set(keys.keys.values());\n    keySet.delete(key);\n    keys = { all: false, keys: keySet };\n  }\n  return keys;\n};\n\n/**\n * Helper function for checking for an undefined key\n * Keys can be null or undefined when not set, but falsey check is not appropriate for this as 0 is a legitimate key\n */\nexport const isKeyDefined = <K>(key: K) => key !== undefined && key !== null;\n\n/**\n * Compares two Keys and return true if the keys inside each are the same including\n * having the same order.\n */\nexport const isSameKey = <K>(key1?: Keys<K>, key2?: Keys<K>) => {\n  if (key1 == null || key2 == null) {\n    return key1 == key2;\n  }\n  if (key1.all !== key2.all) {\n    return false;\n  }\n  const arr1 = Array.from(key1.all ? key1.deletedKeys.values() : key1.keys.values());\n  const arr2 = Array.from(key2.all ? key2.deletedKeys.values() : key2.keys.values());\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n"],"names":["keys","key","all","deletedKeys","has","keySet","Set","values","delete","add","key1","key2","arr1","Array","from","arr2","length","i","disallowEmpty","size"],"mappings":"sDA8CsB,CAAIA,EAAeC,KACvC,GAAID,EAAKE,KAAOF,EAAKG,YAAYC,IAAIH,GAAM,CACzC,MAAMI,EAAS,IAAIC,IAAIN,EAAKG,YAAYI,UACxCF,EAAOG,OAAOP,GACdD,EAAO,CAAEE,KAAK,EAAMC,YAAaE,EAClC,MAAM,IAAKL,EAAKE,MAAQF,EAAKA,KAAKI,IAAIH,GAAM,CAC3C,MAAMI,EAAS,IAAIC,IAAIN,EAAKA,KAAKO,UACjCF,EAAOI,IAAIR,GACXD,EAAO,CAAEE,KAAK,EAAOF,KAAMK,EAC5B,CACD,OAAOL,CAAI,gBAxBc,CAAIA,EAA2BC,IAC5C,MAARD,IAGCA,EAAKE,KAGFF,EAAKG,YAAYC,IAAIH,GAFpBD,EAAKA,KAAKI,IAAIH,mBA4COA,GAAWA,oBAMlB,CAAIS,EAAgBC,KAC3C,GAAY,MAARD,GAAwB,MAARC,EAClB,OAAOD,GAAQC,EAEjB,GAAID,EAAKR,MAAQS,EAAKT,IACpB,OAAO,EAET,MAAMU,EAAOC,MAAMC,KAAKJ,EAAKR,IAAMQ,EAAKP,YAAYI,SAAWG,EAAKV,KAAKO,UACnEQ,EAAOF,MAAMC,KAAKH,EAAKT,IAAMS,EAAKR,YAAYI,SAAWI,EAAKX,KAAKO,UACzE,GAAIK,EAAKI,SAAWD,EAAKC,OACvB,OAAO,EAGT,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAKI,OAAQC,IAC/B,GAAIL,EAAKK,KAAOF,EAAKE,GACnB,OAAO,EAGX,OAAO,CAAI,cAzCY,CAAIjB,EAAeC,EAAQiB,KAClD,GAAIlB,EAAKE,MAAQF,EAAKG,YAAYC,IAAIH,GAAM,CAC1C,MAAMI,EAAS,IAAIC,IAAIN,EAAKG,YAAYI,UACxCF,EAAOI,IAAIR,GACXD,EAAO,CAAEE,KAAK,EAAMC,YAAaE,EAClC,MAAM,IAAKL,EAAKE,KAAOF,EAAKA,KAAKI,IAAIH,MAAUiB,GAAiBlB,EAAKA,KAAKmB,KAAO,GAAI,CACpF,MAAMd,EAAS,IAAIC,IAAIN,EAAKA,KAAKO,UACjCF,EAAOG,OAAOP,GACdD,EAAO,CAAEE,KAAK,EAAOF,KAAMK,EAC5B,CACD,OAAOL,CAAI"}