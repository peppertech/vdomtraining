{"version":3,"file":"refUtils-d354a169.js","sources":["../../src/utils/PRIVATE_refUtils/refUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { Ref } from 'preact';\n\nexport function assignRef<T>(ref: Ref<T> | undefined, value: T | null) {\n  if (ref == null) return;\n\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\n\nexport function mergeRefs<T>(...refs: (Ref<T> | undefined)[]) {\n  return (node: T | null) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n}\n"],"names":["assignRef","ref","value","current","error","Error","refs","node","forEach"],"mappings":"6CASgB,SAAAA,EAAaC,EAAyBC,GACpD,GAAW,MAAPD,EAEJ,GAAmB,mBAARA,EAKX,IACEA,EAAIE,QAAUD,CACf,CAAC,MAAOE,GACP,MAAM,IAAIC,MAAM,wBAAwBH,cAAkBD,KAC3D,MARCA,EAAIC,EASR,2BAEgB,YAAgBI,GAC9B,OAAQC,IACND,EAAKE,SAASP,GAAQD,EAAUC,EAAKM,IAAM,CAE/C"}