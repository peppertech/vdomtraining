{"version":3,"file":"MaxLengthLiveRegion-bb956138.js","sources":["../../src/UNSAFE_TextField/MaxLengthLiveRegion.tsx"],"sourcesContent":["import { useDebounce } from '../hooks/UNSAFE_useDebounce';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { LiveRegion } from '../UNSAFE_LiveRegion';\nimport { TestIdProps } from '#hooks/UNSAFE_useTestId';\n\ntype Props = TestIdProps & {\n  maxLength: number;\n  valueLength?: number;\n};\n\nconst MAX_LENGTH_UPDATE_DELAY = 500;\n\nexport function MaxLengthLiveRegion({ maxLength, testId, valueLength = 0 }: Props) {\n  // Comment copied from InputBase.js in Big JET:\n  // Only update the aria-live div when the user has paused for more than\n  // 500 milliseconds. That way, we avoid queued up aria-live messages which\n  // would be annoying and not helpful. The 500ms was agreed upon in the\n  // accessibility review meeting.\n  const debouncedRemainingChars = useDebounce(maxLength - valueLength, MAX_LENGTH_UPDATE_DELAY);\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const remainingCharsTranslatedString = translations.formControl_maxLengthRemaining({\n    CHARACTER_COUNT: `${debouncedRemainingChars}`\n  });\n\n  return <LiveRegion testId={testId}>{remainingCharsTranslatedString}</LiveRegion>;\n}\n"],"names":["maxLength","testId","valueLength","debouncedRemainingChars","useDebounce","remainingCharsTranslatedString","useTranslationBundle","formControl_maxLengthRemaining","CHARACTER_COUNT","_jsx","LiveRegion","children"],"mappings":"mLAaM,UAA8BA,UAAEA,EAASC,OAAEA,EAAMC,YAAEA,EAAc,IAMrE,MAAMC,EAA0BC,EAAWA,YAACJ,EAAYE,EAR1B,KAUxBG,EADeC,uBAAiC,4BACFC,+BAA+B,CACjFC,gBAAiB,GAAGL,MAGtB,OAAOM,EAAAA,IAACC,EAAAA,WAAW,CAAAT,OAAQA,EAAMU,SAAGN,GACtC"}