{"version":3,"file":"SelectMenuItem-e4715fe5.js","sources":["../../src/UNSAFE_Menu/SelectMenuItem.tsx","../../src/UNSAFE_Menu/useSelectMenuGroupContext.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\nimport { useMemo } from 'preact/hooks';\nimport { useId } from '../hooks/UNSAFE_useId';\n\nimport { CheckIcon } from '../PRIVATE_ThemedIcons/CheckIcon';\n\nimport { BaseMenuItem } from './MenuItem';\nimport { useSelectMenuGroupContext } from './useSelectMenuGroupContext';\n\ntype SelectMenuItemProps = {\n  value: string;\n  label: string;\n  isDisabled?: boolean;\n  endIcon?: ComponentChildren;\n};\n\nexport function SelectMenuItem({ value, label, isDisabled, endIcon }: SelectMenuItemProps) {\n  const { isMultiple, value: selectedValue, onCommit, groupKey } = useSelectMenuGroupContext();\n  const uniqueID = useId();\n  const id = useMemo(() => `oj-menu-item-${uniqueID}`, [uniqueID]);\n\n  const { isSelected, memoizedOnCommit } = useMemo(() => {\n    if (!isMultiple) {\n      return {\n        isSelected: selectedValue === value,\n        memoizedOnCommit: () => {\n          onCommit?.({ value, previousValue: selectedValue });\n        }\n      };\n    }\n    return {\n      isSelected: !!selectedValue?.includes(value),\n      memoizedOnCommit: () => {\n        const proposedValue = isSelected\n          ? selectedValue?.filter((val) => val !== value) || []\n          : [...(selectedValue || []), value];\n        onCommit?.({ value: proposedValue, previousValue: selectedValue });\n      }\n    };\n  }, [selectedValue, value, onCommit, isMultiple]);\n\n  return (\n    <BaseMenuItem\n      id={id}\n      type=\"select\"\n      role={isMultiple ? 'menuitemcheckbox' : 'menuitemradio'}\n      isChecked={isSelected}\n      isDisabled={isDisabled}\n      startIcon={isSelected ? <CheckIcon /> : <span></span>}\n      label={label}\n      onAction={memoizedOnCommit}\n      endIcon={endIcon}\n      itemKey={`${groupKey}-${value}`}\n    />\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useContext } from 'preact/hooks';\nimport { SelectMenuGroupContext } from './SelectMenuGroupContext';\n\n/**\n * Utility hook for consuming the MenuContext\n *\n * @returns The value of MenuContext provider\n */\nfunction useSelectMenuGroupContext() {\n  return useContext(SelectMenuGroupContext);\n}\n\nexport { useSelectMenuGroupContext };\n"],"names":["value","label","isDisabled","endIcon","isMultiple","selectedValue","onCommit","groupKey","useContext","SelectMenuGroupContext","uniqueID","useId","id","useMemo","isSelected","memoizedOnCommit","includes","proposedValue","filter","val","previousValue","_jsx","BaseMenuItem","type","role","isChecked","startIcon","jsx","CheckIcon","SvgCheck","onAction","itemKey"],"mappings":"8MAwBM,UAAyBA,MAAEA,EAAKC,MAAEA,EAAKC,WAAEA,EAAUC,QAAEA,IACzD,MAAMC,WAAEA,EAAYJ,MAAOK,EAAaC,SAAEA,EAAQC,SAAEA,GCR7CC,EAAAA,WAAWC,EAAAA,wBDSZC,EAAWC,EAAAA,QACXC,EAAKC,EAAOA,SAAC,IAAM,gBAAgBH,KAAY,CAACA,KAEhDI,WAAEA,EAAUC,iBAAEA,GAAqBF,EAAOA,SAAC,IAC1CT,EAQE,CACLU,aAAcT,GAAeW,SAAShB,GACtCe,iBAAkB,KAChB,MAAME,EAAgBH,EAClBT,GAAea,QAAQC,GAAQA,IAAQnB,KAAU,GACjD,IAAKK,GAAiB,GAAKL,GAC/BM,IAAW,CAAEN,MAAOiB,EAAeG,cAAef,GAAgB,GAb7D,CACLS,WAAYT,IAAkBL,EAC9Be,iBAAkB,KAChBT,IAAW,CAAEN,QAAOoB,cAAef,GAAgB,IAaxD,CAACA,EAAeL,EAAOM,EAAUF,IAEpC,OACEiB,EAAAA,IAACC,EAAAA,aAAY,CACXV,GAAIA,EACJW,KAAK,SACLC,KAAMpB,EAAa,mBAAqB,gBACxCqB,UAAWX,EACXZ,WAAYA,EACZwB,UAAWZ,EAAaO,EAAAM,IAACC,EAASC,SAAG,CAAA,GAAGR,EAAAA,IAAa,OAAA,CAAA,GACrDpB,MAAOA,EACP6B,SAAUf,EACVZ,QAASA,EACT4B,QAAS,GAAGxB,KAAYP,KAG9B"}