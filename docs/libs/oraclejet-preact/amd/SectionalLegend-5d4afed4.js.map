{"version":3,"file":"SectionalLegend-5d4afed4.js","sources":["../../src/UNSAFE_SectionalLegend/sectionalLegendNavUtils.ts","../../src/UNSAFE_SectionalLegend/SectionalLegend.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport {\n  ItemFocusDetail,\n  ItemHoverDetail,\n  ItemInfo,\n  LegendItemData,\n  LegendSectionData\n} from '../utils/UNSAFE_visTypes/legend';\n\nfunction getItem<K, D>(itemInfo: ItemInfo, sections: LegendSectionData<K, D>[]) {\n  const { sectionIdx, itemIdx } = itemInfo;\n\n  if (sectionIdx == -1 && itemIdx == -1) {\n    const itemsLength = sections[sections.length - 1].items.length;\n    return sections[sections.length - 1].items[itemsLength - 1];\n  }\n\n  return sections[sectionIdx].items[itemIdx];\n}\n\nfunction getNextItemInfo<K, D>(itemInfo: ItemInfo, sections: LegendSectionData<K, D>[]) {\n  let { itemIdx, sectionIdx } = itemInfo;\n\n  if (sectionIdx == -1 && itemIdx == -1) {\n    return {\n      itemIdx: sections[sections.length - 1].items.length - 1,\n      sectionIdx: sections.length - 1\n    };\n  }\n\n  itemIdx += 1;\n  const itemsLength = sections[sectionIdx].items.length;\n  if (itemIdx >= itemsLength) {\n    if (sectionIdx === sections.length - 1) {\n      itemIdx = itemInfo.itemIdx;\n    } else {\n      sectionIdx += 1;\n      itemIdx = 0;\n    }\n  }\n  const item = sections[sectionIdx].items[itemIdx] as LegendItemData<D>; //TODO : Work for better fix instead of adding 'as LegendItem<D>'\n  if (item?.actionable !== 'off') {\n    return { itemIdx, sectionIdx };\n  }\n  return getNextItemInfo({ itemIdx, sectionIdx }, sections);\n}\n\nfunction getPrevItemInfo<K, D>(itemInfo: ItemInfo, sections: LegendSectionData<K, D>[]) {\n  let { itemIdx, sectionIdx } = itemInfo;\n\n  if (sectionIdx == -1 && itemIdx == -1) {\n    (itemIdx = sections[sections.length - 1].items.length - 1), (sectionIdx = sections.length - 1);\n  }\n  itemIdx -= 1;\n\n  if (itemIdx < 0) {\n    if (sectionIdx === 0) {\n      itemIdx = 0;\n    } else {\n      itemIdx = sections[sectionIdx - 1].items.length - 1;\n      sectionIdx -= 1;\n    }\n  }\n\n  const item = sections[sectionIdx].items[itemIdx] as LegendItemData<D>; //TODO : Work for better fix instead of adding 'as LegendItem<D>'\n  if (item?.actionable !== 'off') {\n    return { itemIdx, sectionIdx };\n  }\n  return getPrevItemInfo({ itemIdx, sectionIdx }, sections);\n}\n\n/**\n * Returns utils functions for navigation in simple sectional legend.\n * @param items\n * @returns\n */\nexport function getSectionalNavUtils<\n  K extends string | number,\n  D extends LegendItemData<K>,\n  S extends LegendSectionData<K, D>\n>(sections: S[]) {\n  return {\n    getItem: (itemInfo: ItemInfo) => {\n      return getItem(itemInfo, sections);\n    },\n    getDetailFromInfo: (itemInfo?: ItemInfo): ItemFocusDetail<K, D> | ItemHoverDetail<K, D> => {\n      if (!itemInfo) {\n        return { itemId: undefined, sectionId: undefined, data: undefined };\n      }\n      const item = getItem(itemInfo, sections);\n      const sectionId = sections[itemInfo.sectionIdx].id;\n      return {\n        itemId: item.id,\n        sectionId: sectionId,\n        data: sections[itemInfo.sectionIdx].items[itemInfo.itemIdx]\n      };\n    },\n    getPrevItemInfo: (itemInfo: ItemInfo) => {\n      return getPrevItemInfo(itemInfo, sections);\n    },\n    getNextItemInfo: (itemInfo: ItemInfo) => {\n      return getNextItemInfo(itemInfo, sections);\n    }\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.Ì¦\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useRef } from 'preact/hooks';\nimport { useVisEvent } from '../hooks/PRIVATE_useVisEvents/useVisEvents';\nimport { getSectionalNavUtils } from './sectionalLegendNavUtils';\nimport { mergeProps } from '../utils/UNSAFE_mergeProps';\nimport { getRandomId } from '../utils/PRIVATE_visLayoutUtils/layoutUtils';\nimport {\n  getDatatipText,\n  getAriaProps,\n  getGridNums,\n  getLegendTextStyle,\n  getIsLegendItemActionable,\n  isEqualItem,\n  getItemInfo,\n  getKeyUpHandler\n} from '../utils/PRIVATE_legendUtils/legendUtils';\nimport { useLegendDatatip } from '../UNSAFE_Legend/useLegendDatatip';\nimport { LegendText } from '../UNSAFE_Legend/LegendText';\nimport { useItemFocus } from '../hooks/PRIVATE_useVisEvents';\nimport { useLegendLayout } from '../UNSAFE_Legend/useLegendLayout';\nimport { Flex } from '../UNSAFE_Flex';\nimport { styles } from '../UNSAFE_Legend/themes/LegendStyles.css';\nimport { useCssVars } from '../hooks/PRIVATE_useCssVars';\nimport { legendVars } from '../utils/PRIVATE_legendUtils/legendUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { useTestId } from '../hooks/UNSAFE_useTestId';\nimport { BaseLegend } from '../PRIVATE_BaseLegend//BaseLegend';\nimport { useLegendContextMenu } from '../PRIVATE_BaseLegend/useLegendContextMenu';\nimport { SectionalLegendProps } from './sectionalLegend.type';\nimport {\n  ItemFocusDetail,\n  ItemActionDetail,\n  ItemInfo,\n  LegendItemData,\n  LegendSectionData\n} from '../utils/UNSAFE_visTypes/legend';\nimport { useVisTouchResponse } from '#hooks/PRIVATE_useVisTouchResponse';\nimport { merge } from '#utils/UNSAFE_stringUtils';\n\n/**\n * A Sectional Legend allows grouping of legend items in sections with a specific title.\n */\nexport function SectionalLegend<\n  K extends string | number,\n  D extends LegendItemData<K>,\n  S extends LegendSectionData<K, D>\n>({\n  orientation = 'horizontal',\n  sectionTitleHAlign = 'start',\n  sections,\n  isReadOnly = true,\n  onItemAction,\n  onItemHover,\n  onItemFocus,\n  testId,\n  contextMenuConfig,\n  hideAndShowBehavior = 'off',\n  hoverBehavior = 'none',\n  ...props\n}: SectionalLegendProps<K, D, S>) {\n  const testIdProps = useTestId(testId);\n  const rootRef = useRef<HTMLDivElement>(null);\n  const rootDimsRef = useRef<DOMRect>();\n  const { resolvedVars, cssContent } = useCssVars(legendVars);\n\n  const { getItem, getDetailFromInfo, getPrevItemInfo, getNextItemInfo } = getSectionalNavUtils<\n    K,\n    D,\n    S\n  >(sections);\n  const legendFontStylesObj = getLegendTextStyle(\n    {\n      fontStyle: props.textFontStyle,\n      fontSize: props.textFontSize?.toString(),\n      fontWeight: props.textFontWeight?.toString(),\n      fontFamily: props.textFontFamily\n    },\n    resolvedVars\n  );\n\n  const isLegendItemActionable = getIsLegendItemActionable(sections, isReadOnly, true);\n\n  const { textMeasureContent, layoutInfo } = useLegendLayout({\n    rootRef,\n    rootDimsRef,\n    resolvedVars,\n    sections,\n    orientation,\n    legendFontStylesObj,\n    symbolWidth: props.symbolWidth\n  });\n\n  const { touchResponse, touchResponseStyle } = useVisTouchResponse({ type: 'touchStart' });\n\n  const { focusedItemInfo, hoveredItemInfo, onContextMenuDismissed, activeId, eventsProps } =\n    useVisEvent<ItemInfo, ItemActionDetail<K, D>, ItemFocusDetail<K, D>, D>(\n      touchResponse,\n      !isReadOnly,\n      isLegendItemActionable,\n      getKeyUpHandler,\n      getDetailFromInfo,\n      getPrevItemInfo,\n      getNextItemInfo,\n      onItemAction,\n      onItemHover,\n      onItemFocus,\n      isEqualItem,\n      getItemInfo,\n      { itemIdx: 0, sectionIdx: 0 }\n    );\n\n  const { focusedItemRef } = useItemFocus(focusedItemInfo);\n  const text = getDatatipText(sections, getItem, focusedItemInfo, hoveredItemInfo);\n  const {\n    datatipContent,\n    datatipProps: { 'aria-describedby': datatipAriaDescribedby, ...datatipProps }\n  } = useLegendDatatip({\n    text,\n    rootDimsRef,\n    focusedItemInfo,\n    focusedItemRef,\n    touchResponse\n  });\n  const ariaProps = getAriaProps<K>(\n    isReadOnly,\n    props['aria-label'],\n    props.hiddenIds,\n    merge([props['aria-describedby'], datatipAriaDescribedby]),\n    props['aria-labelledby']\n  );\n\n  const { contextMenuContent, contextMenuProps } = useLegendContextMenu<K, D, S>({\n    rootRef,\n    contextMenuConfig,\n    focusedItemInfo,\n    sections,\n    isReadOnly,\n    onContextMenuDismissed\n  });\n\n  const mergedProps = mergeProps(eventsProps, datatipProps, contextMenuProps);\n  const titleStyle = {\n    fontFamily: props.sectionTitleFontFamily,\n    fontSize: props.sectionTitleFontSize,\n    color: props.sectionTitleColor,\n    fontStyle: props.sectionTitleFontStyle,\n    fontWeight: props.sectionTitleFontWeight,\n    textDecoration: props.sectionTitleTextDecoration\n  };\n  const { sectionalLegendBaseStyles, renderedLegendStyle, preRenderedLegendStyle } = styles;\n  const isHoriz = orientation === 'horizontal';\n  const canRender = orientation === 'vertical' || !!layoutInfo;\n  return (\n    <div\n      ref={rootRef}\n      tabIndex={isReadOnly ? undefined : 0}\n      role=\"application\"\n      class={classNames([\n        sectionalLegendBaseStyles,\n        canRender ? renderedLegendStyle : preRenderedLegendStyle\n      ])}\n      style={touchResponseStyle}\n      {...testIdProps}\n      {...ariaProps}\n      {...mergedProps}\n      aria-activedescendant={activeId}>\n      {canRender ? (\n        <Flex direction={isHoriz ? 'row' : 'column'} wrap={'wrap'} gap={'4x'}>\n          {sections.map((section: S, index: number) => {\n            const labelledById = !isReadOnly ? getRandomId() : '';\n            const isWrappedSection = layoutInfo ? layoutInfo.isWrapped : false;\n            const flexDirection = !isHoriz || isWrappedSection ? 'column' : 'row';\n            const alignItems = !isHoriz || isWrappedSection ? 'start' : 'center';\n            const { itemsPerCol, itemsPerRow } = getGridNums(section.items.length, layoutInfo);\n            return (\n              <Flex\n                align={alignItems}\n                direction={flexDirection}\n                maxWidth={'100%'}\n                justify={'start'}\n                wrap=\"wrap\">\n                <LegendText\n                  text={section.title}\n                  {...titleStyle}\n                  type=\"title\"\n                  id={labelledById}\n                  align={sectionTitleHAlign}\n                />\n                <BaseLegend\n                  {...props}\n                  focusedItemRef={focusedItemRef}\n                  labelledBy={labelledById}\n                  sectionIdx={index}\n                  items={section.items}\n                  orientation={orientation}\n                  itemsPerRow={itemsPerRow}\n                  itemsPerCol={itemsPerCol}\n                  itemWidth={layoutInfo?.isWrapped ? layoutInfo?.maxItemWidth : undefined}\n                  isReadOnly={isReadOnly}\n                  focusedItemInfo={focusedItemInfo}\n                  hoveredItemInfo={hoveredItemInfo}\n                  activeId={activeId}\n                  hideAndShowBehavior={hideAndShowBehavior}\n                  hoverBehavior={hoverBehavior}\n                />\n              </Flex>\n            );\n          })}\n        </Flex>\n      ) : null}\n      {datatipContent}\n      {textMeasureContent}\n      {cssContent}\n      {contextMenuContent}\n    </div>\n  );\n}\n"],"names":["getItem","itemInfo","sections","sectionIdx","itemIdx","itemsLength","length","items","getNextItemInfo","item","actionable","getPrevItemInfo","getSectionalNavUtils","getDetailFromInfo","itemId","undefined","sectionId","data","id","orientation","sectionTitleHAlign","isReadOnly","onItemAction","onItemHover","onItemFocus","testId","contextMenuConfig","hideAndShowBehavior","hoverBehavior","props","testIdProps","useTestId","rootRef","useRef","rootDimsRef","resolvedVars","cssContent","useCssVars","legendVars","legendFontStylesObj","getLegendTextStyle","fontStyle","textFontStyle","fontSize","textFontSize","toString","fontWeight","textFontWeight","fontFamily","textFontFamily","isLegendItemActionable","getIsLegendItemActionable","textMeasureContent","layoutInfo","useLegendLayout","symbolWidth","touchResponse","touchResponseStyle","useVisTouchResponse","type","focusedItemInfo","hoveredItemInfo","onContextMenuDismissed","activeId","eventsProps","useVisEvent","getKeyUpHandler","isEqualItem","getItemInfo","focusedItemRef","useItemFocus","text","getDatatipText","datatipContent","datatipProps","datatipAriaDescribedby","useLegendDatatip","ariaProps","getAriaProps","hiddenIds","merge","contextMenuContent","contextMenuProps","useLegendContextMenu","mergedProps","mergeProps","titleStyle","sectionTitleFontFamily","sectionTitleFontSize","color","sectionTitleColor","sectionTitleFontStyle","sectionTitleFontWeight","textDecoration","sectionTitleTextDecoration","sectionalLegendBaseStyles","renderedLegendStyle","preRenderedLegendStyle","styles","isHoriz","canRender","_jsxs","jsxs","ref","tabIndex","role","class","classNames","style","children","_jsx","Flex","direction","wrap","gap","map","section","index","labelledById","getRandomId","isWrappedSection","isWrapped","flexDirection","alignItems","itemsPerCol","itemsPerRow","getGridNums","align","maxWidth","justify","LegendText","title","BaseLegend","labelledBy","itemWidth","maxItemWidth"],"mappings":"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"}