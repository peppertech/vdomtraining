{"version":3,"file":"eventsUtils-edf8f4e5.js","sources":["../../src/utils/UNSAFE_visUtils/eventsUtils.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { RefObject } from 'preact';\n\n/**\n * Return the dataset info of target element.\n * @param target\n * @param rootRef\n * @returns\n */\nexport function getElementData(rootRef: RefObject<Element>, target: HTMLElement) {\n  let currentTarget = target;\n\n  while (currentTarget != rootRef.current) {\n    const objectId = currentTarget.dataset['ojObject'];\n    if (objectId) {\n      return currentTarget.dataset;\n    }\n    currentTarget = currentTarget.parentElement!;\n  }\n  return null;\n}\n\n/**\n * Parses the groupIndex, seriesIndex and ItemIndex from the fiven DOMStringMap.\n * @param infoMap\n */\nfunction parseInfo(infoMap: DOMStringMap) {\n  return {\n    groupIndex: infoMap['ojGroupIndex'] ? parseInt(infoMap['ojGroupIndex'], 10) : undefined,\n    seriesIndex: infoMap['ojSeriesIndex'] ? parseInt(infoMap['ojSeriesIndex'], 10) : undefined,\n    itemIndex: infoMap['ojItemIndex'] ? parseInt(infoMap['ojItemIndex'], 10) : undefined\n  };\n}\n\n/**\n * Returns the group or item info.\n * @param rootRef\n * @param event\n * @returns\n */\nexport function getInfo(rootRef: RefObject<HTMLElement>, target: HTMLElement) {\n  const elDomMap = getElementData(rootRef, target);\n  if (!elDomMap) {\n    return;\n  }\n  return parseInfo(elDomMap);\n}\n\n/**\n * Prevent defaults and stops propagation of event.\n * @param event\n */\nexport function cancelEvent(event: Event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n/**\n * Compares if two sets are equal.\n */\nexport const isEqual = <T>(setA: Set<T>, setB: Set<T>) => {\n  return setA.size === setB.size && [...setA].every((value) => setB.has(value));\n};\n"],"names":["getElementData","rootRef","target","currentTarget","current","dataset","parentElement","event","preventDefault","stopPropagation","elDomMap","infoMap","groupIndex","parseInt","undefined","seriesIndex","itemIndex","setA","setB","size","every","value","has"],"mappings":"6CAgBgB,SAAAA,EAAeC,EAA6BC,GAC1D,IAAIC,EAAgBD,EAEpB,KAAOC,GAAiBF,EAAQG,SAAS,CAEvC,GADiBD,EAAcE,QAAkB,SAE/C,OAAOF,EAAcE,QAEvBF,EAAgBA,EAAcG,aAC/B,CACD,OAAO,IACT,eAgCM,SAAsBC,GAC1BA,EAAMC,iBACND,EAAME,iBACR,+BAfgB,SAAQR,EAAiCC,GACvD,MAAMQ,EAAWV,EAAeC,EAASC,GAf3C,IAAmBS,EAgBjB,GAAKD,EAGL,MAlBO,CACLE,YAFeD,EAmBAD,GAjBmB,aAAIG,SAASF,EAAsB,aAAG,SAAMG,EAC9EC,YAAaJ,EAAuB,cAAIE,SAASF,EAAuB,cAAG,SAAMG,EACjFE,UAAWL,EAAqB,YAAIE,SAASF,EAAqB,YAAG,SAAMG,EAgB/E,YAcuB,CAAIG,EAAcC,IAChCD,EAAKE,OAASD,EAAKC,MAAQ,IAAIF,GAAMG,OAAOC,GAAUH,EAAKI,IAAID"}