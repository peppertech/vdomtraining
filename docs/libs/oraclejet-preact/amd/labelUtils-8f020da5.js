define(['exports', './textUtils-ae0a246c', './accUtils-530bdb90', 'preact/jsx-runtime', './utils-37c54af8'], (function(t,i,e,s,n){"use strict";const h={titleGap:6,labelGap:6};function d(t,e,s,n,h,d,l){let a,o,x=l||0;const m=[e(t[0],0,n,h,d)],r=s?i.isWidthOverlap:i.isHeightOverlap;let c=0,f=x+1;for(;f<t.length;){const i=m[c]||e(t[c],c,n,h,d);a=i.dims,m[c]||(m[c]=i);const s=m[f]||e(t[f],f,n,h,d);o=s.dims,m[f]||(m[f]=s),r(a,o)?(x+=1,c=0,f=x+1):(c=f,f=c+x+1)}return{numOfSkips:x,labelsInfo:m}}t.AXIS_DEFAULTS=h,t.getDataAxisLabelsInfo=function(t,i,e){const{numOfSkips:s,labelsInfo:n}=d(t,i,e,!1,!1,!1,0),h=[];let l=0,a=0,o=!1;for(let i=0;i<t.length;i+=s+1)l=Math.max(l,n[i].dims.width),a=Math.max(a,n[i].dims.height),o=o||n[i].isTruncated,h.push({text:n[i].text,lines:n[i].lines,index:i,dims:n[i].dims,lineProps:n[i].lineProps});return{maxWidth:l,maxHeight:a,numOfSkips:s,isLabelTruncated:o,tickLabels:h}},t.getEnclosingRectDims=function(t,i){let e,s;return"left"===i?(e=t.x-t.width,s=t.y-t.height/2):"right"===i?(e=t.x,s=t.y-t.height/2):(e=t.x-t.width/2,s=t.y-t.height/2),{x:e,y:s,width:t.width,height:t.height}},t.getGroupAxisLabelsInfo=function(t,i,e,s,n,h){let l=!1,{numOfSkips:a,labelsInfo:o}=d(t,i,e,!1,!1,!1,h);if(a>0&&n&&e){const s=d(t,i,e,!1,!1,!0,h);!s.labelsInfo.some((t=>t.isTruncated||t.didNotFit))&&s.numOfSkips<a&&(a=s.numOfSkips,o=s.labelsInfo)}if(a>0&&s){const s=d(t,i,e,!0,!0,!1,h);s.numOfSkips<a&&(a=s.numOfSkips,o=s.labelsInfo,l=!0)}const x=[];let m=0,r=0;for(let i=0;i<t.length;i+=a+1)m=Math.max(m,o[i].dims.width),r=Math.max(r,o[i].dims.height),x[i]={text:o[i].text,lines:o[i].lines,index:i,dims:o[i].dims,lineProps:o[i].lineProps,isRotated:l,isTruncated:o[i].isTruncated};return{maxWidth:m,maxHeight:r,isRotated:l,numOfSkips:a,tickLabels:x}},t.getTickLabelInfo=function(t,i,e,s,d,l,a,o,x,m,r){if(!r||!i)return{text:"",dims:{width:0,height:0,x:0,y:0},isTruncated:!1,lines:[],didNotFit:!1,lineProps:[]};const c=h.labelGap,f=d?x:l?o-c:o;let g,u,p,b=!1,w=[],y=[],k=!1;const O=l?x:1/0;if(a||l){const t=n.getTextInfo(i,e,f,O,l,r);g=t.width,u=t.height,w=t.lines,y=t.dims,b=t.isTruncated,p=t.lineHeight,k=t.didNotFit}else y=[r(i,e)],g=y[0].width,u=y[0].height,w=[i],b=!1,p=u;const I=d?u:g,S=d?g:u,T=s?I+c:I,L=s?S:S+c;return{text:i,lines:w,lineProps:y.map(((i,e)=>({x:s?t-i.width/2:m.x,width:d?i.height:i.width,height:d?i.width:i.height,y:s?m.y+p*e:t+i.height/2}))),isTruncated:b,didNotFit:k,dims:{x:s?t-T/2:m.x,width:T,height:L,y:s?m.y:t+L/2}}},t.skipLabelsGreedy=function(t,e,s,n){const h=s?i.isWidthOverlap:i.isHeightOverlap;let d=e(t[0],0,!1,!1,!!n);const l=[{text:d.text,lines:[d.text],index:0,lineProps:[d.dims],dims:d.dims}];let a=d.dims.width,o=d.dims.height;for(let i=1;i<t.length;i++){if(!t[i])continue;const s=e(t[i],i,!1,!1,!!n);h(d.dims,s.dims)||(d=s,l.push({text:s.text,lines:[s.text],index:i,dims:s.dims,lineProps:[s.dims]}),a=Math.max(a,s.dims.width),o=Math.max(o,s.dims.height))}return{tickLabels:l,maxWidth:a,maxHeight:o}},t.updateLabelsDims=function(t,i,e,s,n,h){e.forEach((e=>{e.lines.forEach(((d,l)=>{const a=e.lineProps[l];let o,x;"left"===h?(o=n.x+t,x=s(e.index)):"right"===h?(o=n.x+n.width-t,x=s(e.index)):"top"===h?(o=s(e.index),x=n.y+i-a.height/2):(o=s(e.index),x=n.y+n.height-i+a.height/2+a.height*l),a.x=o,a.y=x}));const d=e.dims;let l,a;"left"===h?(l=n.x+t,a=s(e.index)):"right"===h?(l=n.x+n.width-t,a=s(e.index)):"top"===h?(l=s(e.index),a=n.y+i-d.height/2):(l=s(e.index),a=n.y+n.height-i+d.height/2),d.x=l,d.y=a}))}}));
//# sourceMappingURL=labelUtils-8f020da5.js.map
