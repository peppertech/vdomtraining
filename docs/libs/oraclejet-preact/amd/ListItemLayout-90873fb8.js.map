{"version":3,"file":"ListItemLayout-90873fb8.js","sources":["../../src/UNSAFE_ListItemLayout/ListItemLayout.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren, JSX } from 'preact';\nimport { Grid } from '../UNSAFE_Grid';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { styles } from './themes/ListItemLayoutStyles.css';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\ntype Props = {\n  children?: ComponentChildren;\n  /**\n   * The centermost element that should display more important data.\n   */\n  primary?: ComponentChildren;\n  /**\n   * Render Selector component in the leftmost column of the grid.\n   */\n  selector?: ComponentChildren;\n  /**\n   * Visual element to the left of the primary section.\n   * Supports image, avatar, badge, initials, or icon.\n   */\n  leading?: ComponentChildren;\n  /**\n   * A section that is rendered above the primary line.\n   */\n  overline?: ComponentChildren;\n  /**\n   * A section below the primary line.\n   */\n  secondary?: ComponentChildren;\n  /**\n   * Another section below secondary.\n   */\n  tertiary?: ComponentChildren;\n  /**\n   * Provides information about other data.\n   * Some examples of basic metadata are author, date created, date modified, file size, abbreviations, etc.\n   */\n  metadata?: ComponentChildren;\n  /**\n   * Visual element to the right of the primary section and metadata.\n   * Example components are image, avatar, badge, initials, or icon.\n   */\n  trailing?: ComponentChildren;\n  /**\n   * The action prop displays either one primary action or one or more secondary actions.\n   * A common example is using Toolbar.\n   */\n  action?: ComponentChildren;\n  /**\n   * Additional section separated with a space between itself and tertiary.\n   */\n  quaternary?: ComponentChildren;\n  /**\n   * Navigation should normally be used for linking away from the layout.\n   */\n  navigation?: ComponentChildren;\n  /**\n   * Aligns content to top of cell and moves overline to a row above primary.\n   */\n  verticalAlignment?: 'middle' | 'top';\n} & IntrinsicProps;\n\n// TODO: revisit idea of negative margin when selector has a proper API for handling spacing\n// Jira: JET-54543\n/**\n * A ListItemLayout component represents a layout used for list view item elements.\n */\nexport function ListItemLayout({\n  children,\n  selector,\n  leading,\n  primary,\n  secondary,\n  tertiary,\n  overline,\n  metadata,\n  trailing,\n  action,\n  quaternary,\n  navigation,\n  verticalAlignment\n}: Props) {\n  // generate grid skeleton, adding cells based on which props are defined\n  const { columnsTemplate, firstCell, secondCell, lastCell, hasSecondRow } = getColumnsTemplate(\n    selector,\n    leading,\n    metadata,\n    trailing,\n    action,\n    quaternary,\n    navigation,\n    verticalAlignment\n  );\n\n  // extra row placed before the other rows, only used with top alignment\n  const topRow =\n    overline && verticalAlignment === 'top'\n      ? [\n          firstCell && <span> </span>,\n          secondCell && <span> </span>,\n          <div className={styles.topRowStyles}>{overline}</div>,\n          lastCell && <span> </span>\n        ]\n      : null;\n\n  // if ListItemLayout component has a child (ListItemTextLayout) then render that instead of individual props\n  const textArea = children ? (\n    <div className={styles.childrenStyles}>{children}</div>\n  ) : (\n    <div className={styles.flexColumnStyles}>\n      {verticalAlignment === 'top' ? null : <div>{overline}</div>}\n      <div>{primary}</div>\n      <div>{secondary}</div>\n      <div>{tertiary}</div>\n    </div>\n  );\n\n  // a second row is needed when quaternary or navigation are defined\n  const secondRow = hasSecondRow\n    ? [\n        firstCell && <span> </span>,\n        secondCell && <span> </span>,\n        <div className={styles.secondRowStyles}>{quaternary}</div>,\n        lastCell && (\n          <div className={classNames([styles.secondRowStyles, styles.endJustifyStyles])}>\n            {navigation}\n          </div>\n        )\n      ]\n    : null;\n\n  return (\n    <Grid gridTemplateColumns={columnsTemplate}>\n      {topRow}\n      {firstCell}\n      {secondCell}\n      <div\n        className={\n          verticalAlignment === 'top' ? styles.topAlignStyles : styles.centerVerticalStyles\n        }>\n        {textArea}\n      </div>\n      {lastCell}\n      {secondRow}\n    </Grid>\n  );\n}\n\nfunction getColumnsTemplate(\n  selector: ComponentChildren,\n  leading: ComponentChildren,\n  metadata: ComponentChildren,\n  trailing: ComponentChildren,\n  action: ComponentChildren,\n  quaternary: ComponentChildren,\n  navigation: ComponentChildren,\n  verticalAlignment = 'middle'\n) {\n  const columnsTemplateBuilder = [];\n\n  let firstCell = null;\n  let secondCell = null;\n\n  // the top alignment option only uses a single cell for both selector and leading\n  if (verticalAlignment === 'top' && (selector || leading)) {\n    columnsTemplateBuilder.push('auto');\n    firstCell = (\n      <div className={classNames([styles.topAlignStyles, styles.firstCellFlexStyles])}>\n        {selector ? (\n          <div\n            className={classNames([\n              styles.selectorStyles,\n              leading ? styles.centerVerticalStyles : '',\n              styles.rightPaddingStyles\n            ])}>\n            {selector}\n          </div>\n        ) : null}\n        {leading ? (\n          <div className={classNames([styles.centerVerticalStyles, styles.rightPaddingStyles])}>\n            {leading}\n          </div>\n        ) : null}\n      </div>\n    );\n  } else {\n    // default alignment, using separate cells for selector and leading\n    if (selector) {\n      columnsTemplateBuilder.push('auto');\n      firstCell = (\n        <div\n          className={classNames([\n            styles.centerVerticalStyles,\n            styles.selectorStyles,\n            leading ? '' : styles.rightPaddingStyles\n          ])}>\n          {selector}\n        </div>\n      );\n    }\n\n    if (leading) {\n      columnsTemplateBuilder.push('auto');\n      secondCell = (\n        <div\n          className={classNames([\n            styles.centerVerticalStyles,\n            selector ? styles.leftPaddingStyles : '',\n            styles.rightPaddingStyles\n          ])}>\n          {leading}\n        </div>\n      );\n    }\n  }\n  columnsTemplateBuilder.push('1fr'); // Text area always gets 1 full fraction of allotted space\n\n  let lastCell = null;\n  if (metadata || trailing || action || navigation) {\n    columnsTemplateBuilder.push('auto');\n    lastCell = (\n      <div\n        className={classNames([\n          verticalAlignment === 'top' ? styles.topAlignStyles : '',\n          styles.endJustifyStyles\n        ])}>\n        <div\n          className={classNames([\n            styles.centerVerticalStyles,\n            metadata ? styles.leftPaddingStyles : ''\n          ])}>\n          {metadata}\n        </div>\n        <div\n          className={classNames([\n            styles.centerVerticalStyles,\n            trailing ? styles.leftPaddingStyles : ''\n          ])}>\n          {trailing}\n        </div>\n        <div\n          className={classNames([styles.centerVerticalStyles, action ? styles.actionStyles : ''])}>\n          {action}\n        </div>\n      </div>\n    );\n  }\n\n  const columnsTemplate = columnsTemplateBuilder.join(' ');\n  const hasSecondRow = quaternary || navigation ? true : false;\n\n  return { columnsTemplate, firstCell, secondCell, lastCell, hasSecondRow };\n}\n"],"names":["children","selector","leading","primary","secondary","tertiary","overline","metadata","trailing","action","quaternary","navigation","verticalAlignment","columnsTemplate","firstCell","secondCell","lastCell","hasSecondRow","columnsTemplateBuilder","push","_jsxs","jsxs","className","classNames","styles","topAlignStyles","firstCellFlexStyles","_jsx","jsx","selectorStyles","centerVerticalStyles","rightPaddingStyles","leftPaddingStyles","endJustifyStyles","actionStyles","join","getColumnsTemplate","topRow","topRowStyles","textArea","childrenStyles","flexColumnStyles","secondRow","secondRowStyles","Grid","gridTemplateColumns"],"mappings":"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"}