{"version":3,"file":"useChartDataCursor-541a5fa2.js","sources":["../../src/hooks/PRIVATE_useChartDataCursor/useChartDataCursor.tsx","../../src/hooks/PRIVATE_useChartDataCursor/util.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { Dimension, MarkerShapes } from '../../utils/UNSAFE_visTypes/common';\nimport type {\n  DataCursorPosition,\n  DataCursorStyle,\n  OnDataCursorPositionChange,\n  Scale,\n  Info\n} from '../../utils/UNSAFE_visTypes/chart';\nimport { getDataCursorCoords } from './util';\nimport { styles } from './themes/DataCursorStyles.css';\nimport { Marker } from '../../PRIVATE_SvgShapes';\nimport { useRef } from 'preact/hooks';\nimport type { ColorProps } from '../../utils/UNSAFE_interpolations/colors';\nimport { colorSchemeVars } from '../../Common/themes/themeContract.css';\nimport { rgb } from '../../UNSAFE_Theme';\nimport { useVisHover } from '#hooks/PRIVATE_useVisHover';\nimport { mergeProps } from '#utils/UNSAFE_mergeProps';\n\ntype Props = {\n  touchResponse: 'touchStart' | 'touchHold';\n  findNearest: (x: number, y: number) => any;\n  dataCursorPosition?: DataCursorPosition;\n  isDataCursorEnabled?: boolean;\n  isHoriz: boolean;\n  plotAreaSpace: Dimension;\n  yScale: Scale;\n  xScale: Scale;\n  onDataCursorPositionChange?: OnDataCursorPositionChange;\n  dataCursorStyle?: DataCursorStyle;\n  focusedItemInfo: Info;\n  getDataItemPos: (seriesIndex: number, groupIndex: number) => Dimension | undefined;\n  getMarkerInfo: (\n    seriesIndex: number,\n    groupIndex: number\n  ) => { type?: MarkerShapes; color: ColorProps['color'] };\n};\n\nexport function useChartDataCursor({\n  touchResponse,\n  findNearest,\n  dataCursorPosition,\n  onDataCursorPositionChange,\n  isDataCursorEnabled,\n  isHoriz,\n  plotAreaSpace,\n  yScale,\n  xScale,\n  dataCursorStyle,\n  focusedItemInfo,\n  getDataItemPos,\n  getMarkerInfo\n}: Props) {\n  let dataCursorContent = null;\n  let x = dataCursorPosition?.x;\n  let y = dataCursorPosition?.y;\n  const isSnap = dataCursorStyle?.behavior === 'snap';\n\n  const itemInfo = useRef<{ x: number; y: number; groupIndex: number; seriesIndex: number }>();\n\n  const updateDataCursor = () => {\n    const { seriesIndex, groupIndex } = focusedItemInfo;\n    const elemBounds = getDataItemPos(seriesIndex!, groupIndex!);\n    if (!elemBounds) {\n      return;\n    }\n    const px = elemBounds?.x + elemBounds.width / 2;\n    const py = elemBounds?.y + elemBounds.height / 2;\n\n    let X = xScale.invert(isHoriz ? py : px);\n    let Y = yScale.invert(isHoriz ? px : py);\n\n    const neareastItemInfo = findNearest(X, Y);\n    itemInfo.current = neareastItemInfo;\n    if (isSnap) {\n      X = xScale.invert(neareastItemInfo.x);\n      Y = yScale.invert(neareastItemInfo.y);\n    }\n    onDataCursorPositionChange?.({ x: X, y: Y });\n  };\n\n  const onHover = (event: PointerEvent) => {\n    const px = event.offsetX;\n    const py = event.offsetY;\n    if (\n      px < plotAreaSpace.x ||\n      py < plotAreaSpace.y ||\n      px > plotAreaSpace.x + plotAreaSpace.width ||\n      py > plotAreaSpace.y + plotAreaSpace.height\n    ) {\n      dataCursorContent = null;\n      onDataCursorPositionChange?.({ x: undefined, y: undefined });\n      return;\n    }\n\n    let X = xScale.invert(isHoriz ? py : px);\n    let Y = yScale.invert(isHoriz ? px : py);\n\n    const neareastItemInfo = findNearest(X, Y);\n    itemInfo.current = neareastItemInfo;\n    if (isSnap) {\n      X = xScale.invert(neareastItemInfo.x);\n      Y = yScale.invert(neareastItemInfo.y);\n    }\n    onDataCursorPositionChange?.({ x: X, y: Y });\n  };\n\n  const onHoverLeave = () => {\n    onDataCursorPositionChange?.({ x: undefined, y: undefined });\n    itemInfo.current = undefined;\n  };\n\n  const hoverHandlers = useVisHover(onHover, undefined, onHoverLeave, touchResponse);\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      onDataCursorPositionChange?.({ x: undefined, y: undefined });\n      itemInfo.current = undefined;\n      return;\n    }\n    updateDataCursor();\n  };\n\n  const onKeyUp = (event: KeyboardEvent) => {\n    if (event.key === 'Tab' && focusedItemInfo.isCurrent) {\n      return;\n    }\n    updateDataCursor();\n  };\n\n  if (x != undefined && y != undefined && isDataCursorEnabled) {\n    const info = itemInfo.current || findNearest(x, y);\n    if (isSnap) {\n      x = xScale.invert(info.x);\n      y = yScale.invert(info.y);\n    }\n    const { mainLineProps, contrastLineProps } = getDataCursorCoords(\n      xScale,\n      x,\n      plotAreaSpace,\n      isHoriz,\n      dataCursorStyle\n    );\n    const { type, color } = getMarkerInfo(info.seriesIndex!, info.groupIndex!);\n    const markerType = type || 'circle';\n    // TODO: JET-65336\n    const markerDims = markerType === 'circle' ? 18 : 16;\n\n    dataCursorContent = (\n      <>\n        <g class={styles.dataCursor}>\n          <line {...mainLineProps} class={styles.dataCursorLine} />\n          <line {...contrastLineProps} class={styles.contrastLine} />\n        </g>\n        {dataCursorStyle?.isMarkerDisplayed && info && (\n          <Marker\n            type={markerType}\n            tx={info.x}\n            ty={info.y}\n            isInteractive={true}\n            scale={1}\n            fill={color}\n            stroke={rgb(colorSchemeVars.palette.neutral[0])}\n            outerStroke={color}\n            width={markerDims}\n            height={markerDims}\n            preserveRectAspectRatio\n          />\n        )}\n      </>\n    );\n  }\n\n  return {\n    dataCursorContent,\n    dataCursorProps: isDataCursorEnabled\n      ? mergeProps(hoverHandlers, {\n          onKeyDown,\n          onKeyUp\n        })\n      : {}\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport type { DataCursorStyle, Scale } from '../../utils/UNSAFE_visTypes/chart';\n\nexport function getDataCursorCoords(\n  xScale: Scale,\n  x: number,\n  plotAreaSpace: { x: number; y: number; height: number; width: number },\n  isHoriz: boolean,\n  dataCursorStyle?: DataCursorStyle\n) {\n  const lineColor = dataCursorStyle?.lineColor;\n  const lineStyle = dataCursorStyle?.lineStyle;\n  const y1 = isHoriz ? xScale.transform(x) : plotAreaSpace.y + plotAreaSpace.height;\n  const x1 = isHoriz ? plotAreaSpace.x : xScale.transform(x);\n\n  const y2 = isHoriz ? xScale.transform(x) : plotAreaSpace.y;\n  const x2 = isHoriz ? plotAreaSpace.x + plotAreaSpace.width : xScale.transform(x);\n\n  const lineWidth = dataCursorStyle?.lineWidth || 1;\n  return {\n    mainLineProps: {\n      x1,\n      y1,\n      x2,\n      y2,\n      style: {\n        stroke: lineColor,\n        strokeDashArray: lineStyle === 'dotted' ? 3 : lineStyle === 'dashed' ? 6 : undefined,\n        strokeWidth: lineWidth\n      }\n    },\n    contrastLineProps: {\n      x1: isHoriz ? x1 : x1 + lineWidth,\n      y1: isHoriz ? y1 + lineWidth : y1,\n      x2: isHoriz ? x2 : x2 + lineWidth,\n      y2: isHoriz ? y2 + lineWidth : y2\n    }\n  };\n}\n"],"names":["touchResponse","findNearest","dataCursorPosition","onDataCursorPositionChange","isDataCursorEnabled","isHoriz","plotAreaSpace","yScale","xScale","dataCursorStyle","focusedItemInfo","getDataItemPos","getMarkerInfo","dataCursorContent","x","y","isSnap","behavior","itemInfo","useRef","updateDataCursor","seriesIndex","groupIndex","elemBounds","px","width","py","height","X","invert","Y","neareastItemInfo","current","hoverHandlers","useVisHover","event","offsetX","offsetY","undefined","info","mainLineProps","contrastLineProps","lineColor","lineStyle","y1","transform","x1","y2","x2","lineWidth","style","stroke","strokeDashArray","strokeWidth","getDataCursorCoords","type","color","markerType","markerDims","_jsxs","jsxs","_Fragment","Fragment","children","class","styles","dataCursor","_jsx","dataCursorLine","jsx","contrastLine","isMarkerDisplayed","Marker","tx","ty","isInteractive","scale","fill","rgb","colorSchemeVars","palette","neutral","outerStroke","preserveRectAspectRatio","dataCursorProps","mergeProps","onKeyDown","key","onKeyUp","isCurrent"],"mappings":"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"}