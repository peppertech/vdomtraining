{"version":3,"file":"Axis-6cddf1d3.js","sources":["../../src/PRIVATE_Axis/ChartAxisText.tsx","../../src/PRIVATE_Axis/Axis.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { JSXInternal } from 'preact/src/jsx';\nimport { styles } from './themes/AxisStyles.css';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { TextProps } from '../PRIVATE_VisSVGText/text.types';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\nimport { MultilineText, SinglelineText } from '../PRIVATE_VisSVGText';\n\ntype SVGTextAttrs = JSXInternal.HTMLAttributes<SVGTextElement>;\n\ntype ChartText = {\n  id?: string;\n  isTitle: boolean;\n  textProps: TextProps;\n  isRotated: boolean;\n  isRtl: boolean;\n  isInteractive: boolean;\n  style?: SVGTextAttrs['style'];\n  dataProps?: Record<`data-oj-${string}`, string | undefined>;\n};\n\n/**\n * Renders the svg text with given style and svg attributes.\n */\nexport function ChartAxisText({\n  style,\n  textProps,\n  isTitle,\n  isInteractive,\n  id,\n  isRotated,\n  isRtl,\n  dataProps\n}: ChartText) {\n  const browser = getClientHints().browser;\n  const className = classNames([\n    isInteractive ? styles.isInteractive : '',\n    isTitle ? styles.axisTitle : styles.axisLabel,\n    !isTitle && browser === 'safari' ? styles.middleBaseline : ''\n  ]);\n\n  const isMultiline = textProps.lines.length > 1;\n\n  return isMultiline ? (\n    <MultilineText\n      class={className}\n      text={textProps.text}\n      dataProps={dataProps}\n      isRtl={isRtl}\n      isRotated={isRotated}\n      lines={textProps.lines}\n      lineProps={textProps.lineProps}\n      textStyle={style}\n      isTruncated={textProps.isTruncated}\n      id={id}\n    />\n  ) : (\n    <SinglelineText\n      style={style}\n      isRtl={isRtl}\n      isRotated={isRotated}\n      dataProps={dataProps}\n      text={textProps.lines[0]}\n      props={textProps.lineProps[0]}\n      isTruncated={textProps.isTruncated}\n      id={id}\n      class={className}\n    />\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { JSXInternal } from 'preact/src/jsx';\nimport { ChartAxisText } from './ChartAxisText';\nimport { getEnclosingRectDims } from './utils/labelUtils';\nimport { TextProps } from '../PRIVATE_VisSVGText/text.types';\nimport { AxisStyles, styles } from './themes/AxisStyles.css';\nimport { AxisRedwoodTheme } from './themes/redwood/AxisTheme';\nimport { useComponentTheme } from '../hooks/UNSAFE_useComponentTheme';\nimport { updateVisTextStyleProperties } from '#utils/UNSAFE_visUtils/textUtils';\nimport { VisTextStyle } from '#utils/UNSAFE_visTypes/common';\n\ntype SVGTextAttrs = JSXInternal.HTMLAttributes<SVGTextElement>;\n\ntype Props = {\n  isRtl: boolean;\n  title?: string;\n  activeId?: string;\n  titleProps?: TextProps;\n  focusedGroupIndex?: number;\n  titleStyle: VisTextStyle;\n  tickLabelStyle?: SVGTextAttrs['style'];\n  tickLabels: (TextProps & { index: number })[];\n  isTextInteractive?: (index: number) => boolean;\n  axisPosition: 'left' | 'right' | 'top' | 'bottom';\n};\n\n/**\n * Renders the chart axis.\n */\nexport function Axis({\n  title,\n  titleStyle,\n  titleProps,\n  tickLabels,\n  tickLabelStyle,\n  focusedGroupIndex,\n  axisPosition,\n  isRtl,\n  activeId,\n  isTextInteractive\n}: Props) {\n  const { classes } = useComponentTheme<AxisStyles>(AxisRedwoodTheme);\n  return (\n    <g class={classes}>\n      {title && titleProps && (\n        <ChartAxisText\n          textProps={titleProps}\n          isRtl={isRtl}\n          isRotated={titleProps.isRotated}\n          style={updateVisTextStyleProperties(titleStyle)}\n          isTitle\n          isInteractive={false}\n        />\n      )}\n      {tickLabels.length > 0 && (\n        <g style={tickLabelStyle}>\n          {tickLabels.map(\n            ({ index, ...textProps }: Props['tickLabels'][0], renderedIndex: number) => {\n              const isFocused = focusedGroupIndex === renderedIndex;\n              return (\n                <>\n                  {isFocused\n                    ? textProps.text &&\n                      textProps.dims && (\n                        <rect\n                          {...getEnclosingRectDims(textProps.dims, axisPosition)}\n                          class={styles.outlineRing}></rect>\n                      )\n                    : ''}\n                  {textProps.text && (\n                    <ChartAxisText\n                      textProps={textProps}\n                      isTitle={false}\n                      isRotated={textProps.isRotated}\n                      isRtl={isRtl}\n                      dataProps={textProps.dataProps}\n                      isInteractive={!!isTextInteractive?.(index)}\n                      id={isFocused ? activeId : ''}\n                    />\n                  )}\n                </>\n              );\n            }\n          )}\n        </g>\n      )}\n    </g>\n  );\n}\n"],"names":["ChartAxisText","style","textProps","isTitle","isInteractive","id","isRotated","isRtl","dataProps","browser","getClientHints","className","classNames","styles","axisTitle","axisLabel","middleBaseline","lines","length","_jsx","MultilineText","class","text","lineProps","textStyle","isTruncated","SinglelineText","props","title","titleStyle","titleProps","tickLabels","tickLabelStyle","focusedGroupIndex","axisPosition","activeId","isTextInteractive","classes","useComponentTheme","AxisRedwoodTheme","_jsxs","jsxs","children","updateVisTextStyleProperties","map","index","renderedIndex","isFocused","dims","getEnclosingRectDims","outlineRing"],"mappings":"wUA+BgBA,GAAcC,MAC5BA,EAAKC,UACLA,EAASC,QACTA,EAAOC,cACPA,EAAaC,GACbA,EAAEC,UACFA,EAASC,MACTA,EAAKC,UACLA,IAEA,MAAMC,EAAUC,mBAAiBD,QAC3BE,EAAYC,EAAAA,WAAW,CAC3BR,EAAgBS,EAAAA,OAAOT,cAAgB,GACvCD,EAAUU,EAAMA,OAACC,UAAYD,EAAAA,OAAOE,UACnCZ,GAAuB,WAAZM,EAA+C,GAAxBI,EAAMA,OAACG,iBAK5C,OAFoBd,EAAUe,MAAMC,OAAS,EAG3CC,MAACC,gBAAa,CACZC,MAAOV,EACPW,KAAMpB,EAAUoB,KAChBd,UAAWA,EACXD,MAAOA,EACPD,UAAWA,EACXW,MAAOf,EAAUe,MACjBM,UAAWrB,EAAUqB,UACrBC,UAAWvB,EACXwB,YAAavB,EAAUuB,YACvBpB,GAAIA,IAGNc,EAAAA,IAACO,EAAAA,gBACCzB,MAAOA,EACPM,MAAOA,EACPD,UAAWA,EACXE,UAAWA,EACXc,KAAMpB,EAAUe,MAAM,GACtBU,MAAOzB,EAAUqB,UAAU,GAC3BE,YAAavB,EAAUuB,YACvBpB,GAAIA,EACJgB,MAAOV,GAGb,QCxCM,UAAeiB,MACnBA,EAAKC,WACLA,EAAUC,WACVA,EAAUC,WACVA,EAAUC,eACVA,EAAcC,kBACdA,EAAiBC,aACjBA,EAAY3B,MACZA,EAAK4B,SACLA,EAAQC,kBACRA,IAEA,MAAMC,QAAEA,GAAYC,EAAiBA,kBAAaC,EAAgBA,kBAClE,OACEC,EAAAC,KAAA,IAAA,CAAGpB,MAAOgB,EACPK,SAAA,CAAAd,GAASE,GACRX,MAACnB,GACCE,UAAW4B,EACXvB,MAAOA,EACPD,UAAWwB,EAAWxB,UACtBL,MAAO0C,EAAAA,6BAA6Bd,GACpC1B,SACA,EAAAC,eAAe,IAGlB2B,EAAWb,OAAS,GACnBC,EAAAA,IAAG,IAAA,CAAAlB,MAAO+B,EACPU,SAAAX,EAAWa,KACV,EAAGC,WAAU3C,GAAqC4C,KAChD,MAAMC,EAAYd,IAAsBa,EACxC,OACEN,6BACGO,EACG7C,EAAUoB,MACVpB,EAAU8C,MACR7B,EAAAA,eACM8B,EAAAA,qBAAqB/C,EAAU8C,KAAMd,GACzCb,MAAOR,EAAAA,OAAOqC,cAElB,GACHhD,EAAUoB,MACTH,EAAAA,IAACnB,EACC,CAAAE,UAAWA,EACXC,SAAS,EACTG,UAAWJ,EAAUI,UACrBC,MAAOA,EACPC,UAAWN,EAAUM,UACrBJ,gBAAiBgC,IAAoBS,GACrCxC,GAAI0C,EAAYZ,EAAW,OAIjC,QAOhB"}