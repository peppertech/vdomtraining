define(['exports', 'preact/jsx-runtime', 'preact', 'preact/compat', 'preact/hooks', './BaseButton-19a622bc', './useToggleAction-59741954', './useTooltip-b43ad881', './useId-c9578d26', './mergeProps-bcfa6a92', './logger-0f873e29', './LayerHost-639b3284', 'css!./TooltipContentStyles.styles.css', 'module', './hooks/UNSAFE_useTooltip/themes/redwood/TooltipContentVariants.css', './tooltipUtils-e5bdb734', './toggleButtonUtils-c8f12580', './ToggleButtonLabel-330c8f8b'], (function(e,t,o,s,i,l,a,n,c,r,d,g,p,u,b,h,T,m){"use strict";const y=s.forwardRef((({children:e,tooltip:s,size:d="md",isDisabled:g=!1,accessibleLabel:p,isSelected:u=!1,onToggle:b,testId:h,width:y,"aria-describedby":f},B)=>{const w=i.useRef(null);i.useImperativeHandle(B,(()=>w.current),[w]);const{triggerProps:S}=a.useToggleAction({isDisabled:g,onToggle:b}),{tooltipContent:I,tooltipProps:x}=n.useTooltip({text:s??p,isDisabled:g}),D=T.toggleStyling("auto",u,!0,!1,!1,void 0,void 0,!0),v={"aria-describedby":f};return t.jsxs(o.Fragment,{children:[t.jsx(l.BaseButton,{...r.mergeProps(x,S,v),elementDetails:{type:"button",isSwitch:!0},"aria-checked":u,variant:"ghost",size:d,isDisabled:g,styling:D,width:y,ref:w,"aria-label":p??s,testId:h,children:t.jsx(m.ToggleButtonLabel,{isDisabled:g,label:p??s,isToggle:!0,inputName:c.useId(),inputType:"switch",onAction:()=>b?.({value:u}),isSelected:u,display:"icons",startIcon:e,size:d})}),I]})}));y.displayName="IconSwitchButton",e.IconSwitchButton=y}));
//# sourceMappingURL=IconSwitchButton-22f907e7.js.map
